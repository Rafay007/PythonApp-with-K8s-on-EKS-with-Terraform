[{
 "configuration": {
  "provider_config": {
   "aws": {
    "expressions": {
     "profile": {
      "constant_value": "default"
     },
     "region": {
      "references": [
       "var.region"
      ]
     },
     "shared_credentials_files": {
      "references": [
       "var.creds"
      ]
     }
    },
    "full_name": "registry.terraform.io/hashicorp/aws",
    "name": "aws",
    "version_constraint": "~\u003e 4.0"
   },
   "kubernetes": {
    "expressions": {
     "cluster_ca_certificate": {
      "references": [
       "data.aws_eks_cluster.cluster.certificate_authority[0].data",
       "data.aws_eks_cluster.cluster.certificate_authority[0]",
       "data.aws_eks_cluster.cluster.certificate_authority",
       "data.aws_eks_cluster.cluster"
      ]
     },
     "host": {
      "references": [
       "data.aws_eks_cluster.cluster.endpoint",
       "data.aws_eks_cluster.cluster"
      ]
     },
     "token": {
      "references": [
       "data.aws_eks_cluster_auth.cluster.token",
       "data.aws_eks_cluster_auth.cluster"
      ]
     }
    },
    "full_name": "registry.terraform.io/hashicorp/kubernetes",
    "name": "kubernetes"
   },
   "local": {
    "full_name": "registry.terraform.io/hashicorp/local",
    "name": "local"
   },
   "module.eks.module.eks_managed_node_group.module.user_data:cloudinit": {
    "full_name": "registry.terraform.io/hashicorp/cloudinit",
    "module_address": "module.eks.module.eks_managed_node_group.module.user_data",
    "name": "cloudinit",
    "version_constraint": "\u003e= 2.0.0"
   },
   "module.eks.module.self_managed_node_group.module.user_data:cloudinit": {
    "full_name": "registry.terraform.io/hashicorp/cloudinit",
    "module_address": "module.eks.module.self_managed_node_group.module.user_data",
    "name": "cloudinit",
    "version_constraint": "\u003e= 2.0.0"
   },
   "module.eks:tls": {
    "full_name": "registry.terraform.io/hashicorp/tls",
    "module_address": "module.eks",
    "name": "tls",
    "version_constraint": "\u003e= 3.0.0"
   }
  },
  "root_module": {
   "module_calls": {
    "eks": {
     "expressions": {
      "cluster_name": {
       "references": [
        "local.cluster_name"
       ]
      },
      "cluster_version": {
       "constant_value": "1.25"
      },
      "eks_managed_node_groups": {
       "constant_value": {
        "first": {
         "desired_capacity": 1,
         "instance_type": "t2.medium",
         "max_capacity": 10,
         "min_capacity": 1
        }
       }
      },
      "subnet_ids": {
       "references": [
        "module.vpc.private_subnets",
        "module.vpc"
       ]
      },
      "vpc_id": {
       "references": [
        "module.vpc.vpc_id",
        "module.vpc"
       ]
      }
     },
     "module": {
      "module_calls": {
       "eks_managed_node_group": {
        "expressions": {
         "ami_id": {
          "references": [
           "each.value.ami_id",
           "each.value",
           "var.eks_managed_node_group_defaults.ami_id",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "ami_release_version": {
          "references": [
           "each.value.ami_release_version",
           "each.value",
           "var.eks_managed_node_group_defaults.ami_release_version",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "ami_type": {
          "references": [
           "each.value.ami_type",
           "each.value",
           "var.eks_managed_node_group_defaults.ami_type",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "block_device_mappings": {
          "references": [
           "each.value.block_device_mappings",
           "each.value",
           "var.eks_managed_node_group_defaults.block_device_mappings",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "bootstrap_extra_args": {
          "references": [
           "each.value.bootstrap_extra_args",
           "each.value",
           "var.eks_managed_node_group_defaults.bootstrap_extra_args",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "capacity_reservation_specification": {
          "references": [
           "each.value.capacity_reservation_specification",
           "each.value",
           "var.eks_managed_node_group_defaults.capacity_reservation_specification",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "capacity_type": {
          "references": [
           "each.value.capacity_type",
           "each.value",
           "var.eks_managed_node_group_defaults.capacity_type",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "cluster_auth_base64": {
          "references": [
           "aws_eks_cluster.this[0].certificate_authority[0].data",
           "aws_eks_cluster.this[0].certificate_authority[0]",
           "aws_eks_cluster.this[0].certificate_authority",
           "aws_eks_cluster.this[0]",
           "aws_eks_cluster.this"
          ]
         },
         "cluster_endpoint": {
          "references": [
           "aws_eks_cluster.this[0].endpoint",
           "aws_eks_cluster.this[0]",
           "aws_eks_cluster.this"
          ]
         },
         "cluster_ip_family": {
          "references": [
           "var.cluster_ip_family"
          ]
         },
         "cluster_name": {
          "references": [
           "aws_eks_cluster.this[0].name",
           "aws_eks_cluster.this[0]",
           "aws_eks_cluster.this"
          ]
         },
         "cluster_primary_security_group_id": {
          "references": [
           "each.value.attach_cluster_primary_security_group",
           "each.value",
           "var.eks_managed_node_group_defaults.attach_cluster_primary_security_group",
           "var.eks_managed_node_group_defaults",
           "aws_eks_cluster.this[0].vpc_config[0].cluster_security_group_id",
           "aws_eks_cluster.this[0].vpc_config[0]",
           "aws_eks_cluster.this[0].vpc_config",
           "aws_eks_cluster.this[0]",
           "aws_eks_cluster.this"
          ]
         },
         "cluster_security_group_id": {
          "references": [
           "local.cluster_security_group_id"
          ]
         },
         "cluster_service_ipv4_cidr": {
          "references": [
           "var.cluster_service_ipv4_cidr"
          ]
         },
         "cluster_version": {
          "references": [
           "each.value.cluster_version",
           "each.value",
           "var.eks_managed_node_group_defaults.cluster_version",
           "var.eks_managed_node_group_defaults",
           "aws_eks_cluster.this[0].version",
           "aws_eks_cluster.this[0]",
           "aws_eks_cluster.this"
          ]
         },
         "cpu_options": {
          "references": [
           "each.value.cpu_options",
           "each.value",
           "var.eks_managed_node_group_defaults.cpu_options",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "create": {
          "references": [
           "each.value.create",
           "each.value"
          ]
         },
         "create_iam_role": {
          "references": [
           "each.value.create_iam_role",
           "each.value",
           "var.eks_managed_node_group_defaults.create_iam_role",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "create_launch_template": {
          "references": [
           "each.value.create_launch_template",
           "each.value",
           "var.eks_managed_node_group_defaults.create_launch_template",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "create_security_group": {
          "references": [
           "each.value.create_security_group",
           "each.value",
           "var.eks_managed_node_group_defaults.create_security_group",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "credit_specification": {
          "references": [
           "each.value.credit_specification",
           "each.value",
           "var.eks_managed_node_group_defaults.credit_specification",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "desired_size": {
          "references": [
           "each.value.desired_size",
           "each.value",
           "var.eks_managed_node_group_defaults.desired_size",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "disable_api_termination": {
          "references": [
           "each.value.disable_api_termination",
           "each.value",
           "var.eks_managed_node_group_defaults.disable_api_termination",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "disk_size": {
          "references": [
           "each.value.disk_size",
           "each.value",
           "var.eks_managed_node_group_defaults.disk_size",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "ebs_optimized": {
          "references": [
           "each.value.ebs_optimized",
           "each.value",
           "var.eks_managed_node_group_defaults.ebs_optimized",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "elastic_gpu_specifications": {
          "references": [
           "each.value.elastic_gpu_specifications",
           "each.value",
           "var.eks_managed_node_group_defaults.elastic_gpu_specifications",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "elastic_inference_accelerator": {
          "references": [
           "each.value.elastic_inference_accelerator",
           "each.value",
           "var.eks_managed_node_group_defaults.elastic_inference_accelerator",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "enable_bootstrap_user_data": {
          "references": [
           "each.value.enable_bootstrap_user_data",
           "each.value",
           "var.eks_managed_node_group_defaults.enable_bootstrap_user_data",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "enable_monitoring": {
          "references": [
           "each.value.enable_monitoring",
           "each.value",
           "var.eks_managed_node_group_defaults.enable_monitoring",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "enclave_options": {
          "references": [
           "each.value.enclave_options",
           "each.value",
           "var.eks_managed_node_group_defaults.enclave_options",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "force_update_version": {
          "references": [
           "each.value.force_update_version",
           "each.value",
           "var.eks_managed_node_group_defaults.force_update_version",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "iam_role_additional_policies": {
          "references": [
           "each.value.iam_role_additional_policies",
           "each.value",
           "var.eks_managed_node_group_defaults.iam_role_additional_policies",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "iam_role_arn": {
          "references": [
           "each.value.iam_role_arn",
           "each.value",
           "var.eks_managed_node_group_defaults.iam_role_arn",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "iam_role_attach_cni_policy": {
          "references": [
           "each.value.iam_role_attach_cni_policy",
           "each.value",
           "var.eks_managed_node_group_defaults.iam_role_attach_cni_policy",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "iam_role_description": {
          "references": [
           "each.value.iam_role_description",
           "each.value",
           "var.eks_managed_node_group_defaults.iam_role_description",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "iam_role_name": {
          "references": [
           "each.value.iam_role_name",
           "each.value",
           "var.eks_managed_node_group_defaults.iam_role_name",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "iam_role_path": {
          "references": [
           "each.value.iam_role_path",
           "each.value",
           "var.eks_managed_node_group_defaults.iam_role_path",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "iam_role_permissions_boundary": {
          "references": [
           "each.value.iam_role_permissions_boundary",
           "each.value",
           "var.eks_managed_node_group_defaults.iam_role_permissions_boundary",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "iam_role_tags": {
          "references": [
           "each.value.iam_role_tags",
           "each.value",
           "var.eks_managed_node_group_defaults.iam_role_tags",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "iam_role_use_name_prefix": {
          "references": [
           "each.value.iam_role_use_name_prefix",
           "each.value",
           "var.eks_managed_node_group_defaults.iam_role_use_name_prefix",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "instance_market_options": {
          "references": [
           "each.value.instance_market_options",
           "each.value",
           "var.eks_managed_node_group_defaults.instance_market_options",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "instance_types": {
          "references": [
           "each.value.instance_types",
           "each.value",
           "var.eks_managed_node_group_defaults.instance_types",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "kernel_id": {
          "references": [
           "each.value.kernel_id",
           "each.value",
           "var.eks_managed_node_group_defaults.kernel_id",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "key_name": {
          "references": [
           "each.value.key_name",
           "each.value",
           "var.eks_managed_node_group_defaults.key_name",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "labels": {
          "references": [
           "each.value.labels",
           "each.value",
           "var.eks_managed_node_group_defaults.labels",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "launch_template_default_version": {
          "references": [
           "each.value.launch_template_default_version",
           "each.value",
           "var.eks_managed_node_group_defaults.launch_template_default_version",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "launch_template_description": {
          "references": [
           "each.value.launch_template_description",
           "each.value",
           "var.eks_managed_node_group_defaults.launch_template_description",
           "var.eks_managed_node_group_defaults",
           "each.value.name",
           "each.value",
           "each.key"
          ]
         },
         "launch_template_name": {
          "references": [
           "each.value.launch_template_name",
           "each.value",
           "var.eks_managed_node_group_defaults.launch_template_name",
           "var.eks_managed_node_group_defaults",
           "each.key"
          ]
         },
         "launch_template_tags": {
          "references": [
           "each.value.launch_template_tags",
           "each.value",
           "var.eks_managed_node_group_defaults.launch_template_tags",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "launch_template_use_name_prefix": {
          "references": [
           "each.value.launch_template_use_name_prefix",
           "each.value",
           "var.eks_managed_node_group_defaults.launch_template_use_name_prefix",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "launch_template_version": {
          "references": [
           "each.value.launch_template_version",
           "each.value",
           "var.eks_managed_node_group_defaults.launch_template_version",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "license_specifications": {
          "references": [
           "each.value.license_specifications",
           "each.value",
           "var.eks_managed_node_group_defaults.license_specifications",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "max_size": {
          "references": [
           "each.value.max_size",
           "each.value",
           "var.eks_managed_node_group_defaults.max_size",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "metadata_options": {
          "references": [
           "each.value.metadata_options",
           "each.value",
           "var.eks_managed_node_group_defaults.metadata_options",
           "var.eks_managed_node_group_defaults",
           "local.metadata_options"
          ]
         },
         "min_size": {
          "references": [
           "each.value.min_size",
           "each.value",
           "var.eks_managed_node_group_defaults.min_size",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "name": {
          "references": [
           "each.value.name",
           "each.value",
           "each.key"
          ]
         },
         "network_interfaces": {
          "references": [
           "each.value.network_interfaces",
           "each.value",
           "var.eks_managed_node_group_defaults.network_interfaces",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "placement": {
          "references": [
           "each.value.placement",
           "each.value",
           "var.eks_managed_node_group_defaults.placement",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "platform": {
          "references": [
           "each.value.platform",
           "each.value",
           "var.eks_managed_node_group_defaults.platform",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "post_bootstrap_user_data": {
          "references": [
           "each.value.post_bootstrap_user_data",
           "each.value",
           "var.eks_managed_node_group_defaults.post_bootstrap_user_data",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "pre_bootstrap_user_data": {
          "references": [
           "each.value.pre_bootstrap_user_data",
           "each.value",
           "var.eks_managed_node_group_defaults.pre_bootstrap_user_data",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "ram_disk_id": {
          "references": [
           "each.value.ram_disk_id",
           "each.value",
           "var.eks_managed_node_group_defaults.ram_disk_id",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "remote_access": {
          "references": [
           "each.value.remote_access",
           "each.value",
           "var.eks_managed_node_group_defaults.remote_access",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "security_group_description": {
          "references": [
           "each.value.security_group_description",
           "each.value",
           "var.eks_managed_node_group_defaults.security_group_description",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "security_group_name": {
          "references": [
           "each.value.security_group_name",
           "each.value",
           "var.eks_managed_node_group_defaults.security_group_name",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "security_group_rules": {
          "references": [
           "each.value.security_group_rules",
           "each.value",
           "var.eks_managed_node_group_defaults.security_group_rules",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "security_group_tags": {
          "references": [
           "each.value.security_group_tags",
           "each.value",
           "var.eks_managed_node_group_defaults.security_group_tags",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "security_group_use_name_prefix": {
          "references": [
           "each.value.security_group_use_name_prefix",
           "each.value",
           "var.eks_managed_node_group_defaults.security_group_use_name_prefix",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "subnet_ids": {
          "references": [
           "each.value.subnet_ids",
           "each.value",
           "var.eks_managed_node_group_defaults.subnet_ids",
           "var.eks_managed_node_group_defaults",
           "var.subnet_ids"
          ]
         },
         "tags": {
          "references": [
           "var.tags",
           "each.value.tags",
           "each.value",
           "var.eks_managed_node_group_defaults.tags",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "taints": {
          "references": [
           "each.value.taints",
           "each.value",
           "var.eks_managed_node_group_defaults.taints",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "timeouts": {
          "references": [
           "each.value.timeouts",
           "each.value",
           "var.eks_managed_node_group_defaults.timeouts",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "update_config": {
          "references": [
           "each.value.update_config",
           "each.value",
           "var.eks_managed_node_group_defaults.update_config",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "update_launch_template_default_version": {
          "references": [
           "each.value.update_launch_template_default_version",
           "each.value",
           "var.eks_managed_node_group_defaults.update_launch_template_default_version",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "use_name_prefix": {
          "references": [
           "each.value.use_name_prefix",
           "each.value",
           "var.eks_managed_node_group_defaults.use_name_prefix",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "user_data_template_path": {
          "references": [
           "each.value.user_data_template_path",
           "each.value",
           "var.eks_managed_node_group_defaults.user_data_template_path",
           "var.eks_managed_node_group_defaults"
          ]
         },
         "vpc_id": {
          "references": [
           "each.value.vpc_id",
           "each.value",
           "var.eks_managed_node_group_defaults.vpc_id",
           "var.eks_managed_node_group_defaults",
           "var.vpc_id"
          ]
         },
         "vpc_security_group_ids": {
          "references": [
           "local.node_security_group_id",
           "each.value.vpc_security_group_ids",
           "each.value",
           "var.eks_managed_node_group_defaults.vpc_security_group_ids",
           "var.eks_managed_node_group_defaults"
          ]
         }
        },
        "for_each_expression": {
         "references": [
          "var.eks_managed_node_groups",
          "var.create"
         ]
        },
        "module": {
         "module_calls": {
          "user_data": {
           "expressions": {
            "bootstrap_extra_args": {
             "references": [
              "var.bootstrap_extra_args"
             ]
            },
            "cluster_auth_base64": {
             "references": [
              "var.cluster_auth_base64"
             ]
            },
            "cluster_endpoint": {
             "references": [
              "var.cluster_endpoint"
             ]
            },
            "cluster_name": {
             "references": [
              "var.cluster_name"
             ]
            },
            "cluster_service_ipv4_cidr": {
             "references": [
              "var.cluster_service_ipv4_cidr"
             ]
            },
            "create": {
             "references": [
              "var.create"
             ]
            },
            "enable_bootstrap_user_data": {
             "references": [
              "var.enable_bootstrap_user_data"
             ]
            },
            "platform": {
             "references": [
              "var.platform"
             ]
            },
            "post_bootstrap_user_data": {
             "references": [
              "var.post_bootstrap_user_data"
             ]
            },
            "pre_bootstrap_user_data": {
             "references": [
              "var.pre_bootstrap_user_data"
             ]
            },
            "user_data_template_path": {
             "references": [
              "var.user_data_template_path"
             ]
            }
           },
           "module": {
            "outputs": {
             "user_data": {
              "description": "Base64 encoded user data rendered for the provided inputs",
              "expression": {
               "references": [
                "local.platform",
                "var.platform"
               ]
              }
             }
            },
            "resources": [
             {
              "address": "data.cloudinit_config.linux_eks_managed_node_group",
              "count_expression": {
               "references": [
                "var.create",
                "var.platform",
                "var.is_eks_managed_node_group",
                "var.enable_bootstrap_user_data",
                "var.pre_bootstrap_user_data",
                "var.user_data_template_path"
               ]
              },
              "expressions": {
               "base64_encode": {
                "constant_value": true
               },
               "boundary": {
                "constant_value": "//"
               },
               "gzip": {
                "constant_value": false
               },
               "part": [
                {
                 "content": {
                  "references": [
                   "var.pre_bootstrap_user_data"
                  ]
                 },
                 "content_type": {
                  "constant_value": "text/x-shellscript"
                 }
                }
               ]
              },
              "mode": "data",
              "name": "linux_eks_managed_node_group",
              "provider_config_key": "module.eks.module.eks_managed_node_group.module.user_data:cloudinit",
              "schema_version": 0,
              "type": "cloudinit_config"
             }
            ],
            "variables": {
             "bootstrap_extra_args": {
              "default": "",
              "description": "Additional arguments passed to the bootstrap script. When `platform` = `bottlerocket`; these are additional [settings](https://github.com/bottlerocket-os/bottlerocket#settings) that are provided to the Bottlerocket user data"
             },
             "cluster_auth_base64": {
              "default": "",
              "description": "Base64 encoded CA of associated EKS cluster"
             },
             "cluster_endpoint": {
              "default": "",
              "description": "Endpoint of associated EKS cluster"
             },
             "cluster_name": {
              "default": "",
              "description": "Name of the EKS cluster"
             },
             "cluster_service_ipv4_cidr": {
              "default": null,
              "description": "The CIDR block to assign Kubernetes service IP addresses from. If you don't specify a block, Kubernetes assigns addresses from either the 10.100.0.0/16 or 172.20.0.0/16 CIDR blocks"
             },
             "create": {
              "default": true,
              "description": "Determines whether to create user-data or not"
             },
             "enable_bootstrap_user_data": {
              "default": false,
              "description": "Determines whether the bootstrap configurations are populated within the user data template"
             },
             "is_eks_managed_node_group": {
              "default": true,
              "description": "Determines whether the user data is used on nodes in an EKS managed node group. Used to determine if user data will be appended or not"
             },
             "platform": {
              "default": "linux",
              "description": "Identifies if the OS platform is `bottlerocket`, `linux`, or `windows` based"
             },
             "post_bootstrap_user_data": {
              "default": "",
              "description": "User data that is appended to the user data script after of the EKS bootstrap script. Not used when `platform` = `bottlerocket`"
             },
             "pre_bootstrap_user_data": {
              "default": "",
              "description": "User data that is injected into the user data script ahead of the EKS bootstrap script. Not used when `platform` = `bottlerocket`"
             },
             "user_data_template_path": {
              "default": "",
              "description": "Path to a local, custom user data template file to use when rendering user data"
             }
            }
           },
           "source": "../_user_data"
          }
         },
         "outputs": {
          "iam_role_arn": {
           "description": "The Amazon Resource Name (ARN) specifying the IAM role",
           "expression": {
            "references": [
             "aws_iam_role.this[0].arn",
             "aws_iam_role.this[0]",
             "aws_iam_role.this",
             "var.iam_role_arn"
            ]
           }
          },
          "iam_role_name": {
           "description": "The name of the IAM role",
           "expression": {
            "references": [
             "aws_iam_role.this[0].name",
             "aws_iam_role.this[0]",
             "aws_iam_role.this"
            ]
           }
          },
          "iam_role_unique_id": {
           "description": "Stable and unique string identifying the IAM role",
           "expression": {
            "references": [
             "aws_iam_role.this[0].unique_id",
             "aws_iam_role.this[0]",
             "aws_iam_role.this"
            ]
           }
          },
          "launch_template_arn": {
           "description": "The ARN of the launch template",
           "expression": {
            "references": [
             "aws_launch_template.this[0].arn",
             "aws_launch_template.this[0]",
             "aws_launch_template.this"
            ]
           }
          },
          "launch_template_id": {
           "description": "The ID of the launch template",
           "expression": {
            "references": [
             "aws_launch_template.this[0].id",
             "aws_launch_template.this[0]",
             "aws_launch_template.this"
            ]
           }
          },
          "launch_template_latest_version": {
           "description": "The latest version of the launch template",
           "expression": {
            "references": [
             "aws_launch_template.this[0].latest_version",
             "aws_launch_template.this[0]",
             "aws_launch_template.this"
            ]
           }
          },
          "launch_template_name": {
           "description": "The name of the launch template",
           "expression": {
            "references": [
             "aws_launch_template.this[0].name",
             "aws_launch_template.this[0]",
             "aws_launch_template.this"
            ]
           }
          },
          "node_group_arn": {
           "description": "Amazon Resource Name (ARN) of the EKS Node Group",
           "expression": {
            "references": [
             "aws_eks_node_group.this[0].arn",
             "aws_eks_node_group.this[0]",
             "aws_eks_node_group.this"
            ]
           }
          },
          "node_group_autoscaling_group_names": {
           "description": "List of the autoscaling group names",
           "expression": {
            "references": [
             "aws_eks_node_group.this[0].resources",
             "aws_eks_node_group.this[0]",
             "aws_eks_node_group.this"
            ]
           }
          },
          "node_group_id": {
           "description": "EKS Cluster name and EKS Node Group name separated by a colon (`:`)",
           "expression": {
            "references": [
             "aws_eks_node_group.this[0].id",
             "aws_eks_node_group.this[0]",
             "aws_eks_node_group.this"
            ]
           }
          },
          "node_group_labels": {
           "description": "Map of labels applied to the node group",
           "expression": {
            "references": [
             "aws_eks_node_group.this[0].labels",
             "aws_eks_node_group.this[0]",
             "aws_eks_node_group.this"
            ]
           }
          },
          "node_group_resources": {
           "description": "List of objects containing information about underlying resources",
           "expression": {
            "references": [
             "aws_eks_node_group.this[0].resources",
             "aws_eks_node_group.this[0]",
             "aws_eks_node_group.this"
            ]
           }
          },
          "node_group_status": {
           "description": "Status of the EKS Node Group",
           "expression": {
            "references": [
             "aws_eks_node_group.this[0].arn",
             "aws_eks_node_group.this[0]",
             "aws_eks_node_group.this"
            ]
           }
          },
          "node_group_taints": {
           "description": "List of objects containing information about taints applied to the node group",
           "expression": {
            "references": [
             "aws_eks_node_group.this[0].taint",
             "aws_eks_node_group.this[0]",
             "aws_eks_node_group.this"
            ]
           }
          },
          "security_group_arn": {
           "description": "Amazon Resource Name (ARN) of the security group",
           "expression": {
            "references": [
             "aws_security_group.this[0].arn",
             "aws_security_group.this[0]",
             "aws_security_group.this"
            ]
           }
          },
          "security_group_id": {
           "description": "ID of the security group",
           "expression": {
            "references": [
             "aws_security_group.this[0].id",
             "aws_security_group.this[0]",
             "aws_security_group.this"
            ]
           }
          }
         },
         "resources": [
          {
           "address": "aws_eks_node_group.this",
           "count_expression": {
            "references": [
             "var.create"
            ]
           },
           "expressions": {
            "ami_type": {
             "references": [
              "var.ami_id",
              "var.ami_type"
             ]
            },
            "capacity_type": {
             "references": [
              "var.capacity_type"
             ]
            },
            "cluster_name": {
             "references": [
              "var.cluster_name"
             ]
            },
            "disk_size": {
             "references": [
              "local.use_custom_launch_template",
              "var.disk_size"
             ]
            },
            "force_update_version": {
             "references": [
              "var.force_update_version"
             ]
            },
            "instance_types": {
             "references": [
              "var.instance_types"
             ]
            },
            "labels": {
             "references": [
              "var.labels"
             ]
            },
            "node_group_name": {
             "references": [
              "var.use_name_prefix",
              "var.name"
             ]
            },
            "node_group_name_prefix": {
             "references": [
              "var.use_name_prefix",
              "var.name"
             ]
            },
            "node_role_arn": {
             "references": [
              "var.create_iam_role",
              "aws_iam_role.this[0].arn",
              "aws_iam_role.this[0]",
              "aws_iam_role.this",
              "var.iam_role_arn"
             ]
            },
            "release_version": {
             "references": [
              "var.ami_id",
              "var.ami_release_version"
             ]
            },
            "scaling_config": [
             {
              "desired_size": {
               "references": [
                "var.desired_size"
               ]
              },
              "max_size": {
               "references": [
                "var.max_size"
               ]
              },
              "min_size": {
               "references": [
                "var.min_size"
               ]
              }
             }
            ],
            "subnet_ids": {
             "references": [
              "var.subnet_ids"
             ]
            },
            "tags": {
             "references": [
              "var.tags",
              "var.name"
             ]
            },
            "timeouts": {
             "create": {
              "references": [
               "var.timeouts"
              ]
             },
             "delete": {
              "references": [
               "var.timeouts"
              ]
             },
             "update": {
              "references": [
               "var.timeouts"
              ]
             }
            },
            "version": {
             "references": [
              "var.ami_id",
              "var.cluster_version"
             ]
            }
           },
           "mode": "managed",
           "name": "this",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_eks_node_group"
          },
          {
           "address": "aws_iam_role.this",
           "count_expression": {
            "references": [
             "var.create",
             "var.create_iam_role"
            ]
           },
           "expressions": {
            "assume_role_policy": {
             "references": [
              "data.aws_iam_policy_document.assume_role_policy[0].json",
              "data.aws_iam_policy_document.assume_role_policy[0]",
              "data.aws_iam_policy_document.assume_role_policy"
             ]
            },
            "description": {
             "references": [
              "var.iam_role_description"
             ]
            },
            "force_detach_policies": {
             "constant_value": true
            },
            "name": {
             "references": [
              "var.iam_role_use_name_prefix",
              "local.iam_role_name"
             ]
            },
            "name_prefix": {
             "references": [
              "var.iam_role_use_name_prefix",
              "local.iam_role_name"
             ]
            },
            "path": {
             "references": [
              "var.iam_role_path"
             ]
            },
            "permissions_boundary": {
             "references": [
              "var.iam_role_permissions_boundary"
             ]
            },
            "tags": {
             "references": [
              "var.tags",
              "var.iam_role_tags"
             ]
            }
           },
           "mode": "managed",
           "name": "this",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_iam_role"
          },
          {
           "address": "aws_iam_role_policy_attachment.this",
           "expressions": {
            "policy_arn": {
             "references": [
              "each.value"
             ]
            },
            "role": {
             "references": [
              "aws_iam_role.this[0].name",
              "aws_iam_role.this[0]",
              "aws_iam_role.this"
             ]
            }
           },
           "for_each_expression": {
            "references": [
             "var.create",
             "var.create_iam_role",
             "local.iam_role_policy_prefix",
             "local.iam_role_policy_prefix",
             "var.iam_role_attach_cni_policy",
             "local.cni_policy",
             "var.iam_role_additional_policies"
            ]
           },
           "mode": "managed",
           "name": "this",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_iam_role_policy_attachment"
          },
          {
           "address": "aws_launch_template.this",
           "count_expression": {
            "references": [
             "var.create",
             "var.create_launch_template"
            ]
           },
           "depends_on": [
            "aws_security_group_rule.this",
            "aws_iam_role_policy_attachment.this"
           ],
           "expressions": {
            "default_version": {
             "references": [
              "var.launch_template_default_version"
             ]
            },
            "description": {
             "references": [
              "var.launch_template_description"
             ]
            },
            "disable_api_termination": {
             "references": [
              "var.disable_api_termination"
             ]
            },
            "ebs_optimized": {
             "references": [
              "var.ebs_optimized"
             ]
            },
            "image_id": {
             "references": [
              "var.ami_id"
             ]
            },
            "kernel_id": {
             "references": [
              "var.kernel_id"
             ]
            },
            "key_name": {
             "references": [
              "var.key_name"
             ]
            },
            "name": {
             "references": [
              "var.launch_template_use_name_prefix",
              "local.launch_template_name_int"
             ]
            },
            "name_prefix": {
             "references": [
              "var.launch_template_use_name_prefix",
              "local.launch_template_name_int"
             ]
            },
            "ram_disk_id": {
             "references": [
              "var.ram_disk_id"
             ]
            },
            "tags": {
             "references": [
              "var.tags"
             ]
            },
            "update_default_version": {
             "references": [
              "var.update_launch_template_default_version"
             ]
            },
            "user_data": {
             "references": [
              "module.user_data.user_data",
              "module.user_data"
             ]
            },
            "vpc_security_group_ids": {
             "references": [
              "var.network_interfaces",
              "local.security_group_ids"
             ]
            }
           },
           "mode": "managed",
           "name": "this",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_launch_template"
          },
          {
           "address": "aws_security_group.this",
           "count_expression": {
            "references": [
             "local.create_security_group"
            ]
           },
           "expressions": {
            "description": {
             "references": [
              "var.security_group_description"
             ]
            },
            "name": {
             "references": [
              "var.security_group_use_name_prefix",
              "local.security_group_name"
             ]
            },
            "name_prefix": {
             "references": [
              "var.security_group_use_name_prefix",
              "local.security_group_name"
             ]
            },
            "tags": {
             "references": [
              "var.tags",
              "local.security_group_name",
              "var.security_group_tags"
             ]
            },
            "vpc_id": {
             "references": [
              "var.vpc_id"
             ]
            }
           },
           "mode": "managed",
           "name": "this",
           "provider_config_key": "aws",
           "schema_version": 1,
           "type": "aws_security_group"
          },
          {
           "address": "aws_security_group_rule.this",
           "expressions": {
            "cidr_blocks": {
             "references": [
              "each.value.cidr_blocks",
              "each.value"
             ]
            },
            "description": {
             "references": [
              "each.value.description",
              "each.value"
             ]
            },
            "from_port": {
             "references": [
              "each.value.from_port",
              "each.value"
             ]
            },
            "ipv6_cidr_blocks": {
             "references": [
              "each.value.ipv6_cidr_blocks",
              "each.value"
             ]
            },
            "prefix_list_ids": {
             "references": [
              "each.value.prefix_list_ids",
              "each.value"
             ]
            },
            "protocol": {
             "references": [
              "each.value.protocol",
              "each.value"
             ]
            },
            "security_group_id": {
             "references": [
              "aws_security_group.this[0].id",
              "aws_security_group.this[0]",
              "aws_security_group.this"
             ]
            },
            "self": {
             "references": [
              "each.value.self",
              "each.value"
             ]
            },
            "source_security_group_id": {
             "references": [
              "each.value.source_security_group_id",
              "each.value",
              "each.value.source_cluster_security_group",
              "each.value",
              "var.cluster_security_group_id"
             ]
            },
            "to_port": {
             "references": [
              "each.value.to_port",
              "each.value"
             ]
            },
            "type": {
             "references": [
              "each.value.type",
              "each.value"
             ]
            }
           },
           "for_each_expression": {
            "references": [
             "var.security_group_rules",
             "local.create_security_group"
            ]
           },
           "mode": "managed",
           "name": "this",
           "provider_config_key": "aws",
           "schema_version": 2,
           "type": "aws_security_group_rule"
          },
          {
           "address": "data.aws_caller_identity.current",
           "mode": "data",
           "name": "current",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_caller_identity"
          },
          {
           "address": "data.aws_iam_policy_document.assume_role_policy",
           "count_expression": {
            "references": [
             "var.create",
             "var.create_iam_role"
            ]
           },
           "expressions": {
            "statement": [
             {
              "actions": {
               "constant_value": [
                "sts:AssumeRole"
               ]
              },
              "principals": [
               {
                "identifiers": {
                 "references": [
                  "data.aws_partition.current.dns_suffix",
                  "data.aws_partition.current"
                 ]
                },
                "type": {
                 "constant_value": "Service"
                }
               }
              ],
              "sid": {
               "constant_value": "EKSNodeAssumeRole"
              }
             }
            ]
           },
           "mode": "data",
           "name": "assume_role_policy",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_iam_policy_document"
          },
          {
           "address": "data.aws_partition.current",
           "mode": "data",
           "name": "current",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_partition"
          }
         ],
         "variables": {
          "ami_id": {
           "default": "",
           "description": "The AMI from which to launch the instance. If not supplied, EKS will use its own default image"
          },
          "ami_release_version": {
           "default": null,
           "description": "AMI version of the EKS Node Group. Defaults to latest version for Kubernetes version"
          },
          "ami_type": {
           "default": null,
           "description": "Type of Amazon Machine Image (AMI) associated with the EKS Node Group. Valid values are `AL2_x86_64`, `AL2_x86_64_GPU`, `AL2_ARM_64`, `CUSTOM`, `BOTTLEROCKET_ARM_64`, `BOTTLEROCKET_x86_64`"
          },
          "block_device_mappings": {
           "default": {},
           "description": "Specify volumes to attach to the instance besides the volumes specified by the AMI"
          },
          "bootstrap_extra_args": {
           "default": "",
           "description": "Additional arguments passed to the bootstrap script. When `platform` = `bottlerocket`; these are additional [settings](https://github.com/bottlerocket-os/bottlerocket#settings) that are provided to the Bottlerocket user data"
          },
          "capacity_reservation_specification": {
           "default": {},
           "description": "Targeting for EC2 capacity reservations"
          },
          "capacity_type": {
           "default": "ON_DEMAND",
           "description": "Type of capacity associated with the EKS Node Group. Valid values: `ON_DEMAND`, `SPOT`"
          },
          "cluster_auth_base64": {
           "default": "",
           "description": "Base64 encoded CA of associated EKS cluster"
          },
          "cluster_endpoint": {
           "default": "",
           "description": "Endpoint of associated EKS cluster"
          },
          "cluster_ip_family": {
           "default": null,
           "description": "The IP family used to assign Kubernetes pod and service addresses. Valid values are `ipv4` (default) and `ipv6`"
          },
          "cluster_name": {
           "default": null,
           "description": "Name of associated EKS cluster"
          },
          "cluster_primary_security_group_id": {
           "default": null,
           "description": "The ID of the EKS cluster primary security group to associate with the instance(s). This is the security group that is automatically created by the EKS service"
          },
          "cluster_security_group_id": {
           "default": null,
           "description": "Cluster control plane security group ID"
          },
          "cluster_service_ipv4_cidr": {
           "default": null,
           "description": "The CIDR block to assign Kubernetes service IP addresses from. If you don't specify a block, Kubernetes assigns addresses from either the 10.100.0.0/16 or 172.20.0.0/16 CIDR blocks"
          },
          "cluster_version": {
           "default": null,
           "description": "Kubernetes version. Defaults to EKS Cluster Kubernetes version"
          },
          "cpu_options": {
           "default": {},
           "description": "The CPU options for the instance"
          },
          "create": {
           "default": true,
           "description": "Determines whether to create EKS managed node group or not"
          },
          "create_iam_role": {
           "default": true,
           "description": "Determines whether an IAM role is created or to use an existing IAM role"
          },
          "create_launch_template": {
           "default": true,
           "description": "Determines whether to create a launch template or not. If set to `false`, EKS will use its own default launch template"
          },
          "create_security_group": {
           "default": true,
           "description": "Determines whether to create a security group"
          },
          "credit_specification": {
           "default": {},
           "description": "Customize the credit specification of the instance"
          },
          "desired_size": {
           "default": 1,
           "description": "Desired number of instances/nodes"
          },
          "disable_api_termination": {
           "default": null,
           "description": "If true, enables EC2 instance termination protection"
          },
          "disk_size": {
           "default": null,
           "description": "Disk size in GiB for nodes. Defaults to `20`"
          },
          "ebs_optimized": {
           "default": null,
           "description": "If true, the launched EC2 instance(s) will be EBS-optimized"
          },
          "elastic_gpu_specifications": {
           "default": {},
           "description": "The elastic GPU to attach to the instance"
          },
          "elastic_inference_accelerator": {
           "default": {},
           "description": "Configuration block containing an Elastic Inference Accelerator to attach to the instance"
          },
          "enable_bootstrap_user_data": {
           "default": false,
           "description": "Determines whether the bootstrap configurations are populated within the user data template. Only valid when using a custom AMI via `ami_id`"
          },
          "enable_monitoring": {
           "default": true,
           "description": "Enables/disables detailed monitoring"
          },
          "enclave_options": {
           "default": {},
           "description": "Enable Nitro Enclaves on launched instances"
          },
          "force_update_version": {
           "default": null,
           "description": "Force version update if existing pods are unable to be drained due to a pod disruption budget issue"
          },
          "iam_role_additional_policies": {
           "default": [],
           "description": "Additional policies to be added to the IAM role"
          },
          "iam_role_arn": {
           "default": null,
           "description": "Existing IAM role ARN for the node group. Required if `create_iam_role` is set to `false`"
          },
          "iam_role_attach_cni_policy": {
           "default": true,
           "description": "Whether to attach the `AmazonEKS_CNI_Policy`/`AmazonEKS_CNI_IPv6_Policy` IAM policy to the IAM IAM role. WARNING: If set `false` the permissions must be assigned to the `aws-node` DaemonSet pods via another method or nodes will not be able to join the cluster"
          },
          "iam_role_description": {
           "default": null,
           "description": "Description of the role"
          },
          "iam_role_name": {
           "default": null,
           "description": "Name to use on IAM role created"
          },
          "iam_role_path": {
           "default": null,
           "description": "IAM role path"
          },
          "iam_role_permissions_boundary": {
           "default": null,
           "description": "ARN of the policy that is used to set the permissions boundary for the IAM role"
          },
          "iam_role_tags": {
           "default": {},
           "description": "A map of additional tags to add to the IAM role created"
          },
          "iam_role_use_name_prefix": {
           "default": true,
           "description": "Determines whether the IAM role name (`iam_role_name`) is used as a prefix"
          },
          "instance_market_options": {
           "default": {},
           "description": "The market (purchasing) option for the instance"
          },
          "instance_types": {
           "default": null,
           "description": "Set of instance types associated with the EKS Node Group. Defaults to `[\"t3.medium\"]`"
          },
          "kernel_id": {
           "default": null,
           "description": "The kernel ID"
          },
          "key_name": {
           "default": null,
           "description": "The key name that should be used for the instance(s)"
          },
          "labels": {
           "default": null,
           "description": "Key-value map of Kubernetes labels. Only labels that are applied with the EKS API are managed by this argument. Other Kubernetes labels applied to the EKS Node Group will not be managed"
          },
          "launch_template_default_version": {
           "default": null,
           "description": "Default version of the launch template"
          },
          "launch_template_description": {
           "default": null,
           "description": "Description of the launch template"
          },
          "launch_template_name": {
           "default": "",
           "description": "Launch template name - either to be created (`var.create_launch_template` = `true`) or existing (`var.create_launch_template` = `false`)"
          },
          "launch_template_tags": {
           "default": {},
           "description": "A map of additional tags to add to the tag_specifications of launch template created"
          },
          "launch_template_use_name_prefix": {
           "default": true,
           "description": "Determines whether to use `launch_template_name` as is or create a unique name beginning with the `launch_template_name` as the prefix"
          },
          "launch_template_version": {
           "default": null,
           "description": "Launch template version number. The default is `$Default`"
          },
          "license_specifications": {
           "default": {},
           "description": "A list of license specifications to associate with"
          },
          "max_size": {
           "default": 3,
           "description": "Maximum number of instances/nodes"
          },
          "metadata_options": {
           "default": {
            "http_endpoint": "enabled",
            "http_put_response_hop_limit": "2",
            "http_tokens": "required"
           },
           "description": "Customize the metadata options for the instance"
          },
          "min_size": {
           "default": 0,
           "description": "Minimum number of instances/nodes"
          },
          "name": {
           "default": "",
           "description": "Name of the EKS managed node group"
          },
          "network_interfaces": {
           "default": [],
           "description": "Customize network interfaces to be attached at instance boot time"
          },
          "placement": {
           "default": {},
           "description": "The placement of the instance"
          },
          "platform": {
           "default": "linux",
           "description": "Identifies if the OS platform is `bottlerocket` or `linux` based; `windows` is not supported"
          },
          "post_bootstrap_user_data": {
           "default": "",
           "description": "User data that is appended to the user data script after of the EKS bootstrap script. Not used when `platform` = `bottlerocket`"
          },
          "pre_bootstrap_user_data": {
           "default": "",
           "description": "User data that is injected into the user data script ahead of the EKS bootstrap script. Not used when `platform` = `bottlerocket`"
          },
          "ram_disk_id": {
           "default": null,
           "description": "The ID of the ram disk"
          },
          "remote_access": {
           "default": {},
           "description": "Configuration block with remote access settings"
          },
          "security_group_description": {
           "default": "EKS managed node group security group",
           "description": "Description for the security group created"
          },
          "security_group_name": {
           "default": null,
           "description": "Name to use on security group created"
          },
          "security_group_rules": {
           "default": {},
           "description": "List of security group rules to add to the security group created"
          },
          "security_group_tags": {
           "default": {},
           "description": "A map of additional tags to add to the security group created"
          },
          "security_group_use_name_prefix": {
           "default": true,
           "description": "Determines whether the security group name (`security_group_name`) is used as a prefix"
          },
          "subnet_ids": {
           "default": null,
           "description": "Identifiers of EC2 Subnets to associate with the EKS Node Group. These subnets must have the following resource tag: `kubernetes.io/cluster/CLUSTER_NAME`"
          },
          "tags": {
           "default": {},
           "description": "A map of tags to add to all resources"
          },
          "taints": {
           "default": {},
           "description": "The Kubernetes taints to be applied to the nodes in the node group. Maximum of 50 taints per node group"
          },
          "timeouts": {
           "default": {},
           "description": "Create, update, and delete timeout configurations for the node group"
          },
          "update_config": {
           "default": {},
           "description": "Configuration block of settings for max unavailable resources during node group updates"
          },
          "update_launch_template_default_version": {
           "default": true,
           "description": "Whether to update the launch templates default version on each update. Conflicts with `launch_template_default_version`"
          },
          "use_name_prefix": {
           "default": true,
           "description": "Determines whether to use `name` as is or create a unique name beginning with the `name` as the prefix"
          },
          "user_data_template_path": {
           "default": "",
           "description": "Path to a local, custom user data template file to use when rendering user data"
          },
          "vpc_id": {
           "default": null,
           "description": "ID of the VPC where the security group/nodes will be provisioned"
          },
          "vpc_security_group_ids": {
           "default": [],
           "description": "A list of security group IDs to associate"
          }
         }
        },
        "source": "./modules/eks-managed-node-group"
       },
       "fargate_profile": {
        "expressions": {
         "cluster_ip_family": {
          "references": [
           "var.cluster_ip_family"
          ]
         },
         "cluster_name": {
          "references": [
           "aws_eks_cluster.this[0].name",
           "aws_eks_cluster.this[0]",
           "aws_eks_cluster.this"
          ]
         },
         "create": {
          "references": [
           "each.value.create",
           "each.value"
          ]
         },
         "create_iam_role": {
          "references": [
           "each.value.create_iam_role",
           "each.value",
           "var.fargate_profile_defaults.create_iam_role",
           "var.fargate_profile_defaults"
          ]
         },
         "iam_role_additional_policies": {
          "references": [
           "each.value.iam_role_additional_policies",
           "each.value",
           "var.fargate_profile_defaults.iam_role_additional_policies",
           "var.fargate_profile_defaults"
          ]
         },
         "iam_role_arn": {
          "references": [
           "each.value.iam_role_arn",
           "each.value",
           "var.fargate_profile_defaults.iam_role_arn",
           "var.fargate_profile_defaults"
          ]
         },
         "iam_role_attach_cni_policy": {
          "references": [
           "each.value.iam_role_attach_cni_policy",
           "each.value",
           "var.fargate_profile_defaults.iam_role_attach_cni_policy",
           "var.fargate_profile_defaults"
          ]
         },
         "iam_role_description": {
          "references": [
           "each.value.iam_role_description",
           "each.value",
           "var.fargate_profile_defaults.iam_role_description",
           "var.fargate_profile_defaults"
          ]
         },
         "iam_role_name": {
          "references": [
           "each.value.iam_role_name",
           "each.value",
           "var.fargate_profile_defaults.iam_role_name",
           "var.fargate_profile_defaults"
          ]
         },
         "iam_role_path": {
          "references": [
           "each.value.iam_role_path",
           "each.value",
           "var.fargate_profile_defaults.iam_role_path",
           "var.fargate_profile_defaults"
          ]
         },
         "iam_role_permissions_boundary": {
          "references": [
           "each.value.iam_role_permissions_boundary",
           "each.value",
           "var.fargate_profile_defaults.iam_role_permissions_boundary",
           "var.fargate_profile_defaults"
          ]
         },
         "iam_role_tags": {
          "references": [
           "each.value.iam_role_tags",
           "each.value",
           "var.fargate_profile_defaults.iam_role_tags",
           "var.fargate_profile_defaults"
          ]
         },
         "iam_role_use_name_prefix": {
          "references": [
           "each.value.iam_role_use_name_prefix",
           "each.value",
           "var.fargate_profile_defaults.iam_role_use_name_prefix",
           "var.fargate_profile_defaults"
          ]
         },
         "name": {
          "references": [
           "each.value.name",
           "each.value",
           "each.key"
          ]
         },
         "selectors": {
          "references": [
           "each.value.selectors",
           "each.value",
           "var.fargate_profile_defaults.selectors",
           "var.fargate_profile_defaults"
          ]
         },
         "subnet_ids": {
          "references": [
           "each.value.subnet_ids",
           "each.value",
           "var.fargate_profile_defaults.subnet_ids",
           "var.fargate_profile_defaults",
           "var.subnet_ids"
          ]
         },
         "tags": {
          "references": [
           "var.tags",
           "each.value.tags",
           "each.value",
           "var.fargate_profile_defaults.tags",
           "var.fargate_profile_defaults"
          ]
         },
         "timeouts": {
          "references": [
           "each.value.timeouts",
           "each.value",
           "var.fargate_profile_defaults.timeouts",
           "var.fargate_profile_defaults"
          ]
         }
        },
        "for_each_expression": {
         "references": [
          "var.fargate_profiles",
          "var.create"
         ]
        },
        "module": {
         "outputs": {
          "fargate_profile_arn": {
           "description": "Amazon Resource Name (ARN) of the EKS Fargate Profile",
           "expression": {
            "references": [
             "aws_eks_fargate_profile.this[0].arn",
             "aws_eks_fargate_profile.this[0]",
             "aws_eks_fargate_profile.this"
            ]
           }
          },
          "fargate_profile_id": {
           "description": "EKS Cluster name and EKS Fargate Profile name separated by a colon (`:`)",
           "expression": {
            "references": [
             "aws_eks_fargate_profile.this[0].id",
             "aws_eks_fargate_profile.this[0]",
             "aws_eks_fargate_profile.this"
            ]
           }
          },
          "fargate_profile_pod_execution_role_arn": {
           "description": "Amazon Resource Name (ARN) of the EKS Fargate Profile Pod execution role ARN",
           "expression": {
            "references": [
             "aws_eks_fargate_profile.this[0].pod_execution_role_arn",
             "aws_eks_fargate_profile.this[0]",
             "aws_eks_fargate_profile.this"
            ]
           }
          },
          "fargate_profile_status": {
           "description": "Status of the EKS Fargate Profile",
           "expression": {
            "references": [
             "aws_eks_fargate_profile.this[0].status",
             "aws_eks_fargate_profile.this[0]",
             "aws_eks_fargate_profile.this"
            ]
           }
          },
          "iam_role_arn": {
           "description": "The Amazon Resource Name (ARN) specifying the IAM role",
           "expression": {
            "references": [
             "aws_iam_role.this[0].arn",
             "aws_iam_role.this[0]",
             "aws_iam_role.this",
             "var.iam_role_arn"
            ]
           }
          },
          "iam_role_name": {
           "description": "The name of the IAM role",
           "expression": {
            "references": [
             "aws_iam_role.this[0].name",
             "aws_iam_role.this[0]",
             "aws_iam_role.this"
            ]
           }
          },
          "iam_role_unique_id": {
           "description": "Stable and unique string identifying the IAM role",
           "expression": {
            "references": [
             "aws_iam_role.this[0].unique_id",
             "aws_iam_role.this[0]",
             "aws_iam_role.this"
            ]
           }
          }
         },
         "resources": [
          {
           "address": "aws_eks_fargate_profile.this",
           "count_expression": {
            "references": [
             "var.create"
            ]
           },
           "expressions": {
            "cluster_name": {
             "references": [
              "var.cluster_name"
             ]
            },
            "fargate_profile_name": {
             "references": [
              "var.name"
             ]
            },
            "pod_execution_role_arn": {
             "references": [
              "var.create_iam_role",
              "aws_iam_role.this[0].arn",
              "aws_iam_role.this[0]",
              "aws_iam_role.this",
              "var.iam_role_arn"
             ]
            },
            "subnet_ids": {
             "references": [
              "var.subnet_ids"
             ]
            },
            "tags": {
             "references": [
              "var.tags"
             ]
            }
           },
           "mode": "managed",
           "name": "this",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_eks_fargate_profile"
          },
          {
           "address": "aws_iam_role.this",
           "count_expression": {
            "references": [
             "var.create",
             "var.create_iam_role"
            ]
           },
           "expressions": {
            "assume_role_policy": {
             "references": [
              "data.aws_iam_policy_document.assume_role_policy[0].json",
              "data.aws_iam_policy_document.assume_role_policy[0]",
              "data.aws_iam_policy_document.assume_role_policy"
             ]
            },
            "description": {
             "references": [
              "var.iam_role_description"
             ]
            },
            "force_detach_policies": {
             "constant_value": true
            },
            "name": {
             "references": [
              "var.iam_role_use_name_prefix",
              "local.iam_role_name"
             ]
            },
            "name_prefix": {
             "references": [
              "var.iam_role_use_name_prefix",
              "local.iam_role_name"
             ]
            },
            "path": {
             "references": [
              "var.iam_role_path"
             ]
            },
            "permissions_boundary": {
             "references": [
              "var.iam_role_permissions_boundary"
             ]
            },
            "tags": {
             "references": [
              "var.tags",
              "var.iam_role_tags"
             ]
            }
           },
           "mode": "managed",
           "name": "this",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_iam_role"
          },
          {
           "address": "aws_iam_role_policy_attachment.this",
           "expressions": {
            "policy_arn": {
             "references": [
              "each.value"
             ]
            },
            "role": {
             "references": [
              "aws_iam_role.this[0].name",
              "aws_iam_role.this[0]",
              "aws_iam_role.this"
             ]
            }
           },
           "for_each_expression": {
            "references": [
             "var.create",
             "var.create_iam_role",
             "local.iam_role_policy_prefix",
             "var.iam_role_attach_cni_policy",
             "local.cni_policy",
             "var.iam_role_additional_policies"
            ]
           },
           "mode": "managed",
           "name": "this",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_iam_role_policy_attachment"
          },
          {
           "address": "data.aws_caller_identity.current",
           "mode": "data",
           "name": "current",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_caller_identity"
          },
          {
           "address": "data.aws_iam_policy_document.assume_role_policy",
           "count_expression": {
            "references": [
             "var.create",
             "var.create_iam_role"
            ]
           },
           "expressions": {
            "statement": [
             {
              "actions": {
               "constant_value": [
                "sts:AssumeRole"
               ]
              },
              "effect": {
               "constant_value": "Allow"
              },
              "principals": [
               {
                "identifiers": {
                 "constant_value": [
                  "eks-fargate-pods.amazonaws.com"
                 ]
                },
                "type": {
                 "constant_value": "Service"
                }
               }
              ]
             }
            ]
           },
           "mode": "data",
           "name": "assume_role_policy",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_iam_policy_document"
          },
          {
           "address": "data.aws_partition.current",
           "mode": "data",
           "name": "current",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_partition"
          }
         ],
         "variables": {
          "cluster_ip_family": {
           "default": null,
           "description": "The IP family used to assign Kubernetes pod and service addresses. Valid values are `ipv4` (default) and `ipv6`"
          },
          "cluster_name": {
           "default": null,
           "description": "Name of the EKS cluster"
          },
          "create": {
           "default": true,
           "description": "Determines whether to create Fargate profile or not"
          },
          "create_iam_role": {
           "default": true,
           "description": "Determines whether an IAM role is created or to use an existing IAM role"
          },
          "iam_role_additional_policies": {
           "default": [],
           "description": "Additional policies to be added to the IAM role"
          },
          "iam_role_arn": {
           "default": null,
           "description": "Existing IAM role ARN for the Fargate profile. Required if `create_iam_role` is set to `false`"
          },
          "iam_role_attach_cni_policy": {
           "default": true,
           "description": "Whether to attach the `AmazonEKS_CNI_Policy`/`AmazonEKS_CNI_IPv6_Policy` IAM policy to the IAM IAM role. WARNING: If set `false` the permissions must be assigned to the `aws-node` DaemonSet pods via another method or nodes will not be able to join the cluster"
          },
          "iam_role_description": {
           "default": null,
           "description": "Description of the role"
          },
          "iam_role_name": {
           "default": "",
           "description": "Name to use on IAM role created"
          },
          "iam_role_path": {
           "default": null,
           "description": "IAM role path"
          },
          "iam_role_permissions_boundary": {
           "default": null,
           "description": "ARN of the policy that is used to set the permissions boundary for the IAM role"
          },
          "iam_role_tags": {
           "default": {},
           "description": "A map of additional tags to add to the IAM role created"
          },
          "iam_role_use_name_prefix": {
           "default": true,
           "description": "Determines whether the IAM role name (`iam_role_name`) is used as a prefix"
          },
          "name": {
           "default": "",
           "description": "Name of the EKS Fargate Profile"
          },
          "selectors": {
           "default": [],
           "description": "Configuration block(s) for selecting Kubernetes Pods to execute with this Fargate Profile"
          },
          "subnet_ids": {
           "default": [],
           "description": "A list of subnet IDs for the EKS Fargate Profile"
          },
          "tags": {
           "default": {},
           "description": "A map of tags to add to all resources"
          },
          "timeouts": {
           "default": {},
           "description": "Create and delete timeout configurations for the Fargate Profile"
          }
         }
        },
        "source": "./modules/fargate-profile"
       },
       "kms": {
        "expressions": {
         "aliases": {
          "references": [
           "var.cluster_name",
           "var.kms_key_aliases"
          ]
         },
         "create": {
          "references": [
           "local.create",
           "var.create_kms_key"
          ]
         },
         "deletion_window_in_days": {
          "references": [
           "var.kms_key_deletion_window_in_days"
          ]
         },
         "description": {
          "references": [
           "var.kms_key_description",
           "var.cluster_name"
          ]
         },
         "enable_default_policy": {
          "references": [
           "var.kms_key_enable_default_policy"
          ]
         },
         "enable_key_rotation": {
          "references": [
           "var.enable_kms_key_rotation"
          ]
         },
         "key_administrators": {
          "references": [
           "var.kms_key_administrators",
           "data.aws_caller_identity.current.arn",
           "data.aws_caller_identity.current"
          ]
         },
         "key_owners": {
          "references": [
           "var.kms_key_owners"
          ]
         },
         "key_service_users": {
          "references": [
           "var.kms_key_service_users"
          ]
         },
         "key_usage": {
          "constant_value": "ENCRYPT_DECRYPT"
         },
         "key_users": {
          "references": [
           "local.cluster_role",
           "var.kms_key_users"
          ]
         },
         "override_policy_documents": {
          "references": [
           "var.kms_key_override_policy_documents"
          ]
         },
         "source_policy_documents": {
          "references": [
           "var.kms_key_source_policy_documents"
          ]
         },
         "tags": {
          "references": [
           "var.tags"
          ]
         }
        },
        "module": {
         "outputs": {
          "aliases": {
           "description": "A map of aliases created and their attributes",
           "expression": {
            "references": [
             "aws_kms_alias.this"
            ]
           }
          },
          "external_key_expiration_model": {
           "description": "Whether the key material expires. Empty when pending key material import, otherwise `KEY_MATERIAL_EXPIRES` or `KEY_MATERIAL_DOES_NOT_EXPIRE`",
           "expression": {
            "references": [
             "aws_kms_external_key.this[0].expiration_model",
             "aws_kms_external_key.this[0]",
             "aws_kms_external_key.this"
            ]
           }
          },
          "external_key_state": {
           "description": "The state of the CMK",
           "expression": {
            "references": [
             "aws_kms_external_key.this[0].key_state",
             "aws_kms_external_key.this[0]",
             "aws_kms_external_key.this"
            ]
           }
          },
          "external_key_usage": {
           "description": "The cryptographic operations for which you can use the CMK",
           "expression": {
            "references": [
             "aws_kms_external_key.this[0].key_usage",
             "aws_kms_external_key.this[0]",
             "aws_kms_external_key.this"
            ]
           }
          },
          "grants": {
           "description": "A map of grants created and their attributes",
           "expression": {
            "references": [
             "aws_kms_grant.this"
            ]
           }
          },
          "key_arn": {
           "description": "The Amazon Resource Name (ARN) of the key",
           "expression": {
            "references": [
             "aws_kms_key.this[0].arn",
             "aws_kms_key.this[0]",
             "aws_kms_key.this",
             "aws_kms_external_key.this[0].arn",
             "aws_kms_external_key.this[0]",
             "aws_kms_external_key.this"
            ]
           }
          },
          "key_id": {
           "description": "The globally unique identifier for the key",
           "expression": {
            "references": [
             "aws_kms_key.this[0].key_id",
             "aws_kms_key.this[0]",
             "aws_kms_key.this",
             "aws_kms_external_key.this[0].id",
             "aws_kms_external_key.this[0]",
             "aws_kms_external_key.this"
            ]
           }
          },
          "key_policy": {
           "description": "The IAM resource policy set on the key",
           "expression": {
            "references": [
             "aws_kms_key.this[0].policy",
             "aws_kms_key.this[0]",
             "aws_kms_key.this",
             "aws_kms_external_key.this[0].policy",
             "aws_kms_external_key.this[0]",
             "aws_kms_external_key.this"
            ]
           }
          }
         },
         "resources": [
          {
           "address": "aws_kms_alias.this",
           "expressions": {
            "name": {
             "references": [
              "var.aliases_use_name_prefix",
              "each.value"
             ]
            },
            "name_prefix": {
             "references": [
              "var.aliases_use_name_prefix",
              "each.value"
             ]
            },
            "target_key_id": {
             "references": [
              "aws_kms_key.this[0].id",
              "aws_kms_key.this[0]",
              "aws_kms_key.this"
             ]
            }
           },
           "for_each_expression": {
            "references": [
             "var.aliases",
             "var.create"
            ]
           },
           "mode": "managed",
           "name": "this",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_kms_alias"
          },
          {
           "address": "aws_kms_external_key.this",
           "count_expression": {
            "references": [
             "var.create",
             "var.create_external"
            ]
           },
           "expressions": {
            "bypass_policy_lockout_safety_check": {
             "references": [
              "var.bypass_policy_lockout_safety_check"
             ]
            },
            "deletion_window_in_days": {
             "references": [
              "var.deletion_window_in_days"
             ]
            },
            "description": {
             "references": [
              "var.description"
             ]
            },
            "enabled": {
             "references": [
              "var.is_enabled"
             ]
            },
            "key_material_base64": {
             "references": [
              "var.key_material_base64"
             ]
            },
            "multi_region": {
             "references": [
              "var.multi_region"
             ]
            },
            "policy": {
             "references": [
              "var.policy",
              "data.aws_iam_policy_document.this[0].json",
              "data.aws_iam_policy_document.this[0]",
              "data.aws_iam_policy_document.this"
             ]
            },
            "tags": {
             "references": [
              "var.tags"
             ]
            },
            "valid_to": {
             "references": [
              "var.valid_to"
             ]
            }
           },
           "mode": "managed",
           "name": "this",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_kms_external_key"
          },
          {
           "address": "aws_kms_grant.this",
           "expressions": {
            "grant_creation_tokens": {
             "references": [
              "each.value.grant_creation_tokens",
              "each.value"
             ]
            },
            "grantee_principal": {
             "references": [
              "each.value.grantee_principal",
              "each.value"
             ]
            },
            "key_id": {
             "references": [
              "aws_kms_key.this[0].key_id",
              "aws_kms_key.this[0]",
              "aws_kms_key.this"
             ]
            },
            "name": {
             "references": [
              "each.value.name",
              "each.value",
              "each.key"
             ]
            },
            "operations": {
             "references": [
              "each.value.operations",
              "each.value"
             ]
            },
            "retire_on_delete": {
             "references": [
              "each.value.retire_on_delete",
              "each.value"
             ]
            },
            "retiring_principal": {
             "references": [
              "each.value.retiring_principal",
              "each.value"
             ]
            }
           },
           "for_each_expression": {
            "references": [
             "var.grants",
             "var.create"
            ]
           },
           "mode": "managed",
           "name": "this",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_kms_grant"
          },
          {
           "address": "aws_kms_key.this",
           "count_expression": {
            "references": [
             "var.create",
             "var.create_external"
            ]
           },
           "expressions": {
            "bypass_policy_lockout_safety_check": {
             "references": [
              "var.bypass_policy_lockout_safety_check"
             ]
            },
            "customer_master_key_spec": {
             "references": [
              "var.customer_master_key_spec"
             ]
            },
            "deletion_window_in_days": {
             "references": [
              "var.deletion_window_in_days"
             ]
            },
            "description": {
             "references": [
              "var.description"
             ]
            },
            "enable_key_rotation": {
             "references": [
              "var.enable_key_rotation"
             ]
            },
            "is_enabled": {
             "references": [
              "var.is_enabled"
             ]
            },
            "key_usage": {
             "references": [
              "var.key_usage"
             ]
            },
            "multi_region": {
             "references": [
              "var.multi_region"
             ]
            },
            "policy": {
             "references": [
              "var.policy",
              "data.aws_iam_policy_document.this[0].json",
              "data.aws_iam_policy_document.this[0]",
              "data.aws_iam_policy_document.this"
             ]
            },
            "tags": {
             "references": [
              "var.tags"
             ]
            }
           },
           "mode": "managed",
           "name": "this",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_kms_key"
          },
          {
           "address": "data.aws_caller_identity.current",
           "mode": "data",
           "name": "current",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_caller_identity"
          },
          {
           "address": "data.aws_iam_policy_document.this",
           "count_expression": {
            "references": [
             "var.create"
            ]
           },
           "expressions": {
            "override_policy_documents": {
             "references": [
              "var.override_policy_documents"
             ]
            },
            "source_policy_documents": {
             "references": [
              "var.source_policy_documents"
             ]
            }
           },
           "mode": "data",
           "name": "this",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_iam_policy_document"
          },
          {
           "address": "data.aws_partition.current",
           "mode": "data",
           "name": "current",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_partition"
          }
         ],
         "variables": {
          "aliases": {
           "default": [],
           "description": "A list of aliases to create. Note - due to the use of `toset()`, values must be static strings and not computed values"
          },
          "aliases_use_name_prefix": {
           "default": false,
           "description": "Determines whether the alias name is used as a prefix"
          },
          "bypass_policy_lockout_safety_check": {
           "default": null,
           "description": "A flag to indicate whether to bypass the key policy lockout safety check. Setting this value to true increases the risk that the KMS key becomes unmanageable"
          },
          "create": {
           "default": true,
           "description": "Determines whether resources will be created (affects all resources)"
          },
          "create_external": {
           "default": false,
           "description": "Determines whether an external CMK (externally provided material) will be created or a standard CMK (AWS provided material)"
          },
          "customer_master_key_spec": {
           "default": null,
           "description": "Specifies whether the key contains a symmetric key or an asymmetric key pair and the encryption algorithms or signing algorithms that the key supports. Valid values: `SYMMETRIC_DEFAULT`, `RSA_2048`, `RSA_3072`, `RSA_4096`, `HMAC_256`, `ECC_NIST_P256`, `ECC_NIST_P384`, `ECC_NIST_P521`, or `ECC_SECG_P256K1`. Defaults to `SYMMETRIC_DEFAULT`"
          },
          "deletion_window_in_days": {
           "default": null,
           "description": "The waiting period, specified in number of days. After the waiting period ends, AWS KMS deletes the KMS key. If you specify a value, it must be between `7` and `30`, inclusive. If you do not specify a value, it defaults to `30`"
          },
          "description": {
           "default": null,
           "description": "The description of the key as viewed in AWS console"
          },
          "enable_default_policy": {
           "default": true,
           "description": "Specifies whether to enable the default key policy. Defaults to `true`"
          },
          "enable_key_rotation": {
           "default": true,
           "description": "Specifies whether key rotation is enabled. Defaults to `true`"
          },
          "grants": {
           "default": {},
           "description": "A map of grant definitions to create"
          },
          "is_enabled": {
           "default": null,
           "description": "Specifies whether the key is enabled. Defaults to `true`"
          },
          "key_administrators": {
           "default": [],
           "description": "A list of IAM ARNs for [key administrators](https://docs.aws.amazon.com/kms/latest/developerguide/key-policy-default.html#key-policy-default-allow-administrators)"
          },
          "key_asymmetric_public_encryption_users": {
           "default": [],
           "description": "A list of IAM ARNs for [key asymmetric public encryption users](https://docs.aws.amazon.com/kms/latest/developerguide/key-policy-default.html#key-policy-users-crypto)"
          },
          "key_asymmetric_sign_verify_users": {
           "default": [],
           "description": "A list of IAM ARNs for [key asymmetric sign and verify users](https://docs.aws.amazon.com/kms/latest/developerguide/key-policy-default.html#key-policy-users-crypto)"
          },
          "key_hmac_users": {
           "default": [],
           "description": "A list of IAM ARNs for [key HMAC users](https://docs.aws.amazon.com/kms/latest/developerguide/key-policy-default.html#key-policy-users-crypto)"
          },
          "key_material_base64": {
           "default": null,
           "description": "Base64 encoded 256-bit symmetric encryption key material to import. The CMK is permanently associated with this key material. External key only"
          },
          "key_owners": {
           "default": [],
           "description": "A list of IAM ARNs for those who will have full key permissions (`kms:*`)"
          },
          "key_service_users": {
           "default": [],
           "description": "A list of IAM ARNs for [key service users](https://docs.aws.amazon.com/kms/latest/developerguide/key-policy-default.html#key-policy-service-integration)"
          },
          "key_symmetric_encryption_users": {
           "default": [],
           "description": "A list of IAM ARNs for [key symmetric encryption users](https://docs.aws.amazon.com/kms/latest/developerguide/key-policy-default.html#key-policy-users-crypto)"
          },
          "key_usage": {
           "default": null,
           "description": "Specifies the intended use of the key. Valid values: `ENCRYPT_DECRYPT` or `SIGN_VERIFY`. Defaults to `ENCRYPT_DECRYPT`"
          },
          "key_users": {
           "default": [],
           "description": "A list of IAM ARNs for [key users](https://docs.aws.amazon.com/kms/latest/developerguide/key-policy-default.html#key-policy-default-allow-users)"
          },
          "multi_region": {
           "default": false,
           "description": "Indicates whether the KMS key is a multi-Region (`true`) or regional (`false`) key. Defaults to `false`"
          },
          "override_policy_documents": {
           "default": [],
           "description": "List of IAM policy documents that are merged together into the exported document. In merging, statements with non-blank `sid`s will override statements with the same `sid`"
          },
          "policy": {
           "default": null,
           "description": "A valid policy JSON document. Although this is a key policy, not an IAM policy, an `aws_iam_policy_document`, in the form that designates a principal, can be used"
          },
          "source_policy_documents": {
           "default": [],
           "description": "List of IAM policy documents that are merged together into the exported document. Statements must have unique `sid`s"
          },
          "tags": {
           "default": {},
           "description": "A map of tags to add to all resources"
          },
          "valid_to": {
           "default": null,
           "description": "Time at which the imported key material expires. When the key material expires, AWS KMS deletes the key material and the CMK becomes unusable. If not specified, key material does not expire"
          }
         }
        },
        "source": "terraform-aws-modules/kms/aws",
        "version_constraint": "1.0.2"
       },
       "self_managed_node_group": {
        "expressions": {
         "ami_id": {
          "references": [
           "each.value.ami_id",
           "each.value",
           "var.self_managed_node_group_defaults.ami_id",
           "var.self_managed_node_group_defaults"
          ]
         },
         "autoscaling_group_tags": {
          "references": [
           "each.value.autoscaling_group_tags",
           "each.value",
           "var.self_managed_node_group_defaults.autoscaling_group_tags",
           "var.self_managed_node_group_defaults"
          ]
         },
         "availability_zones": {
          "references": [
           "each.value.availability_zones",
           "each.value",
           "var.self_managed_node_group_defaults.availability_zones",
           "var.self_managed_node_group_defaults"
          ]
         },
         "block_device_mappings": {
          "references": [
           "each.value.block_device_mappings",
           "each.value",
           "var.self_managed_node_group_defaults.block_device_mappings",
           "var.self_managed_node_group_defaults"
          ]
         },
         "bootstrap_extra_args": {
          "references": [
           "each.value.bootstrap_extra_args",
           "each.value",
           "var.self_managed_node_group_defaults.bootstrap_extra_args",
           "var.self_managed_node_group_defaults"
          ]
         },
         "capacity_rebalance": {
          "references": [
           "each.value.capacity_rebalance",
           "each.value",
           "var.self_managed_node_group_defaults.capacity_rebalance",
           "var.self_managed_node_group_defaults"
          ]
         },
         "capacity_reservation_specification": {
          "references": [
           "each.value.capacity_reservation_specification",
           "each.value",
           "var.self_managed_node_group_defaults.capacity_reservation_specification",
           "var.self_managed_node_group_defaults"
          ]
         },
         "cluster_auth_base64": {
          "references": [
           "aws_eks_cluster.this[0].certificate_authority[0].data",
           "aws_eks_cluster.this[0].certificate_authority[0]",
           "aws_eks_cluster.this[0].certificate_authority",
           "aws_eks_cluster.this[0]",
           "aws_eks_cluster.this"
          ]
         },
         "cluster_endpoint": {
          "references": [
           "aws_eks_cluster.this[0].endpoint",
           "aws_eks_cluster.this[0]",
           "aws_eks_cluster.this"
          ]
         },
         "cluster_ip_family": {
          "references": [
           "var.cluster_ip_family"
          ]
         },
         "cluster_name": {
          "references": [
           "aws_eks_cluster.this[0].name",
           "aws_eks_cluster.this[0]",
           "aws_eks_cluster.this"
          ]
         },
         "cluster_primary_security_group_id": {
          "references": [
           "each.value.attach_cluster_primary_security_group",
           "each.value",
           "var.self_managed_node_group_defaults.attach_cluster_primary_security_group",
           "var.self_managed_node_group_defaults",
           "aws_eks_cluster.this[0].vpc_config[0].cluster_security_group_id",
           "aws_eks_cluster.this[0].vpc_config[0]",
           "aws_eks_cluster.this[0].vpc_config",
           "aws_eks_cluster.this[0]",
           "aws_eks_cluster.this"
          ]
         },
         "cluster_security_group_id": {
          "references": [
           "local.cluster_security_group_id"
          ]
         },
         "cluster_version": {
          "references": [
           "each.value.cluster_version",
           "each.value",
           "var.self_managed_node_group_defaults.cluster_version",
           "var.self_managed_node_group_defaults",
           "aws_eks_cluster.this[0].version",
           "aws_eks_cluster.this[0]",
           "aws_eks_cluster.this"
          ]
         },
         "cpu_options": {
          "references": [
           "each.value.cpu_options",
           "each.value",
           "var.self_managed_node_group_defaults.cpu_options",
           "var.self_managed_node_group_defaults"
          ]
         },
         "create": {
          "references": [
           "each.value.create",
           "each.value"
          ]
         },
         "create_autoscaling_group": {
          "references": [
           "each.value.create_autoscaling_group",
           "each.value",
           "var.self_managed_node_group_defaults.create_autoscaling_group",
           "var.self_managed_node_group_defaults"
          ]
         },
         "create_iam_instance_profile": {
          "references": [
           "each.value.create_iam_instance_profile",
           "each.value",
           "var.self_managed_node_group_defaults.create_iam_instance_profile",
           "var.self_managed_node_group_defaults"
          ]
         },
         "create_launch_template": {
          "references": [
           "each.value.create_launch_template",
           "each.value",
           "var.self_managed_node_group_defaults.create_launch_template",
           "var.self_managed_node_group_defaults"
          ]
         },
         "create_schedule": {
          "references": [
           "each.value.create_schedule",
           "each.value",
           "var.self_managed_node_group_defaults.create_schedule",
           "var.self_managed_node_group_defaults"
          ]
         },
         "create_security_group": {
          "references": [
           "each.value.create_security_group",
           "each.value",
           "var.self_managed_node_group_defaults.create_security_group",
           "var.self_managed_node_group_defaults"
          ]
         },
         "credit_specification": {
          "references": [
           "each.value.credit_specification",
           "each.value",
           "var.self_managed_node_group_defaults.credit_specification",
           "var.self_managed_node_group_defaults"
          ]
         },
         "default_cooldown": {
          "references": [
           "each.value.default_cooldown",
           "each.value",
           "var.self_managed_node_group_defaults.default_cooldown",
           "var.self_managed_node_group_defaults"
          ]
         },
         "delete_timeout": {
          "references": [
           "each.value.delete_timeout",
           "each.value",
           "var.self_managed_node_group_defaults.delete_timeout",
           "var.self_managed_node_group_defaults"
          ]
         },
         "desired_size": {
          "references": [
           "each.value.desired_size",
           "each.value",
           "var.self_managed_node_group_defaults.desired_size",
           "var.self_managed_node_group_defaults"
          ]
         },
         "disable_api_termination": {
          "references": [
           "each.value.disable_api_termination",
           "each.value",
           "var.self_managed_node_group_defaults.disable_api_termination",
           "var.self_managed_node_group_defaults"
          ]
         },
         "ebs_optimized": {
          "references": [
           "each.value.ebs_optimized",
           "each.value",
           "var.self_managed_node_group_defaults.ebs_optimized",
           "var.self_managed_node_group_defaults"
          ]
         },
         "elastic_gpu_specifications": {
          "references": [
           "each.value.elastic_gpu_specifications",
           "each.value",
           "var.self_managed_node_group_defaults.elastic_gpu_specifications",
           "var.self_managed_node_group_defaults"
          ]
         },
         "elastic_inference_accelerator": {
          "references": [
           "each.value.elastic_inference_accelerator",
           "each.value",
           "var.self_managed_node_group_defaults.elastic_inference_accelerator",
           "var.self_managed_node_group_defaults"
          ]
         },
         "enable_monitoring": {
          "references": [
           "each.value.enable_monitoring",
           "each.value",
           "var.self_managed_node_group_defaults.enable_monitoring",
           "var.self_managed_node_group_defaults"
          ]
         },
         "enabled_metrics": {
          "references": [
           "each.value.enabled_metrics",
           "each.value",
           "var.self_managed_node_group_defaults.enabled_metrics",
           "var.self_managed_node_group_defaults"
          ]
         },
         "enclave_options": {
          "references": [
           "each.value.enclave_options",
           "each.value",
           "var.self_managed_node_group_defaults.enclave_options",
           "var.self_managed_node_group_defaults"
          ]
         },
         "force_delete": {
          "references": [
           "each.value.force_delete",
           "each.value",
           "var.self_managed_node_group_defaults.force_delete",
           "var.self_managed_node_group_defaults"
          ]
         },
         "health_check_grace_period": {
          "references": [
           "each.value.health_check_grace_period",
           "each.value",
           "var.self_managed_node_group_defaults.health_check_grace_period",
           "var.self_managed_node_group_defaults"
          ]
         },
         "health_check_type": {
          "references": [
           "each.value.health_check_type",
           "each.value",
           "var.self_managed_node_group_defaults.health_check_type",
           "var.self_managed_node_group_defaults"
          ]
         },
         "hibernation_options": {
          "references": [
           "each.value.hibernation_options",
           "each.value",
           "var.self_managed_node_group_defaults.hibernation_options",
           "var.self_managed_node_group_defaults"
          ]
         },
         "iam_instance_profile_arn": {
          "references": [
           "each.value.iam_instance_profile_arn",
           "each.value",
           "var.self_managed_node_group_defaults.iam_instance_profile_arn",
           "var.self_managed_node_group_defaults"
          ]
         },
         "iam_role_additional_policies": {
          "references": [
           "each.value.iam_role_additional_policies",
           "each.value",
           "var.self_managed_node_group_defaults.iam_role_additional_policies",
           "var.self_managed_node_group_defaults"
          ]
         },
         "iam_role_attach_cni_policy": {
          "references": [
           "each.value.iam_role_attach_cni_policy",
           "each.value",
           "var.self_managed_node_group_defaults.iam_role_attach_cni_policy",
           "var.self_managed_node_group_defaults"
          ]
         },
         "iam_role_description": {
          "references": [
           "each.value.iam_role_description",
           "each.value",
           "var.self_managed_node_group_defaults.iam_role_description",
           "var.self_managed_node_group_defaults"
          ]
         },
         "iam_role_name": {
          "references": [
           "each.value.iam_role_name",
           "each.value",
           "var.self_managed_node_group_defaults.iam_role_name",
           "var.self_managed_node_group_defaults"
          ]
         },
         "iam_role_path": {
          "references": [
           "each.value.iam_role_path",
           "each.value",
           "var.self_managed_node_group_defaults.iam_role_path",
           "var.self_managed_node_group_defaults"
          ]
         },
         "iam_role_permissions_boundary": {
          "references": [
           "each.value.iam_role_permissions_boundary",
           "each.value",
           "var.self_managed_node_group_defaults.iam_role_permissions_boundary",
           "var.self_managed_node_group_defaults"
          ]
         },
         "iam_role_tags": {
          "references": [
           "each.value.iam_role_tags",
           "each.value",
           "var.self_managed_node_group_defaults.iam_role_tags",
           "var.self_managed_node_group_defaults"
          ]
         },
         "iam_role_use_name_prefix": {
          "references": [
           "each.value.iam_role_use_name_prefix",
           "each.value",
           "var.self_managed_node_group_defaults.iam_role_use_name_prefix",
           "var.self_managed_node_group_defaults"
          ]
         },
         "initial_lifecycle_hooks": {
          "references": [
           "each.value.initial_lifecycle_hooks",
           "each.value",
           "var.self_managed_node_group_defaults.initial_lifecycle_hooks",
           "var.self_managed_node_group_defaults"
          ]
         },
         "instance_initiated_shutdown_behavior": {
          "references": [
           "each.value.instance_initiated_shutdown_behavior",
           "each.value",
           "var.self_managed_node_group_defaults.instance_initiated_shutdown_behavior",
           "var.self_managed_node_group_defaults"
          ]
         },
         "instance_market_options": {
          "references": [
           "each.value.instance_market_options",
           "each.value",
           "var.self_managed_node_group_defaults.instance_market_options",
           "var.self_managed_node_group_defaults"
          ]
         },
         "instance_refresh": {
          "references": [
           "each.value.instance_refresh",
           "each.value",
           "var.self_managed_node_group_defaults.instance_refresh",
           "var.self_managed_node_group_defaults"
          ]
         },
         "instance_type": {
          "references": [
           "each.value.instance_type",
           "each.value",
           "var.self_managed_node_group_defaults.instance_type",
           "var.self_managed_node_group_defaults"
          ]
         },
         "kernel_id": {
          "references": [
           "each.value.kernel_id",
           "each.value",
           "var.self_managed_node_group_defaults.kernel_id",
           "var.self_managed_node_group_defaults"
          ]
         },
         "key_name": {
          "references": [
           "each.value.key_name",
           "each.value",
           "var.self_managed_node_group_defaults.key_name",
           "var.self_managed_node_group_defaults"
          ]
         },
         "launch_template_default_version": {
          "references": [
           "each.value.launch_template_default_version",
           "each.value",
           "var.self_managed_node_group_defaults.launch_template_default_version",
           "var.self_managed_node_group_defaults"
          ]
         },
         "launch_template_description": {
          "references": [
           "each.value.launch_template_description",
           "each.value",
           "var.self_managed_node_group_defaults.launch_template_description",
           "var.self_managed_node_group_defaults",
           "each.value.name",
           "each.value",
           "each.key"
          ]
         },
         "launch_template_name": {
          "references": [
           "each.value.launch_template_name",
           "each.value",
           "var.self_managed_node_group_defaults.launch_template_name",
           "var.self_managed_node_group_defaults",
           "each.key"
          ]
         },
         "launch_template_tags": {
          "references": [
           "each.value.launch_template_tags",
           "each.value",
           "var.self_managed_node_group_defaults.launch_template_tags",
           "var.self_managed_node_group_defaults"
          ]
         },
         "launch_template_use_name_prefix": {
          "references": [
           "each.value.launch_template_use_name_prefix",
           "each.value",
           "var.self_managed_node_group_defaults.launch_template_use_name_prefix",
           "var.self_managed_node_group_defaults"
          ]
         },
         "launch_template_version": {
          "references": [
           "each.value.launch_template_version",
           "each.value",
           "var.self_managed_node_group_defaults.launch_template_version",
           "var.self_managed_node_group_defaults"
          ]
         },
         "license_specifications": {
          "references": [
           "each.value.license_specifications",
           "each.value",
           "var.self_managed_node_group_defaults.license_specifications",
           "var.self_managed_node_group_defaults"
          ]
         },
         "max_instance_lifetime": {
          "references": [
           "each.value.max_instance_lifetime",
           "each.value",
           "var.self_managed_node_group_defaults.max_instance_lifetime",
           "var.self_managed_node_group_defaults"
          ]
         },
         "max_size": {
          "references": [
           "each.value.max_size",
           "each.value",
           "var.self_managed_node_group_defaults.max_size",
           "var.self_managed_node_group_defaults"
          ]
         },
         "metadata_options": {
          "references": [
           "each.value.metadata_options",
           "each.value",
           "var.self_managed_node_group_defaults.metadata_options",
           "var.self_managed_node_group_defaults",
           "local.metadata_options"
          ]
         },
         "metrics_granularity": {
          "references": [
           "each.value.metrics_granularity",
           "each.value",
           "var.self_managed_node_group_defaults.metrics_granularity",
           "var.self_managed_node_group_defaults"
          ]
         },
         "min_elb_capacity": {
          "references": [
           "each.value.min_elb_capacity",
           "each.value",
           "var.self_managed_node_group_defaults.min_elb_capacity",
           "var.self_managed_node_group_defaults"
          ]
         },
         "min_size": {
          "references": [
           "each.value.min_size",
           "each.value",
           "var.self_managed_node_group_defaults.min_size",
           "var.self_managed_node_group_defaults"
          ]
         },
         "mixed_instances_policy": {
          "references": [
           "each.value.mixed_instances_policy",
           "each.value",
           "var.self_managed_node_group_defaults.mixed_instances_policy",
           "var.self_managed_node_group_defaults"
          ]
         },
         "name": {
          "references": [
           "each.value.name",
           "each.value",
           "each.key"
          ]
         },
         "network_interfaces": {
          "references": [
           "each.value.network_interfaces",
           "each.value",
           "var.self_managed_node_group_defaults.network_interfaces",
           "var.self_managed_node_group_defaults"
          ]
         },
         "placement": {
          "references": [
           "each.value.placement",
           "each.value",
           "var.self_managed_node_group_defaults.placement",
           "var.self_managed_node_group_defaults"
          ]
         },
         "placement_group": {
          "references": [
           "each.value.placement_group",
           "each.value",
           "var.self_managed_node_group_defaults.placement_group",
           "var.self_managed_node_group_defaults"
          ]
         },
         "platform": {
          "references": [
           "each.value.platform",
           "each.value",
           "var.self_managed_node_group_defaults.platform",
           "var.self_managed_node_group_defaults"
          ]
         },
         "post_bootstrap_user_data": {
          "references": [
           "each.value.post_bootstrap_user_data",
           "each.value",
           "var.self_managed_node_group_defaults.post_bootstrap_user_data",
           "var.self_managed_node_group_defaults"
          ]
         },
         "pre_bootstrap_user_data": {
          "references": [
           "each.value.pre_bootstrap_user_data",
           "each.value",
           "var.self_managed_node_group_defaults.pre_bootstrap_user_data",
           "var.self_managed_node_group_defaults"
          ]
         },
         "protect_from_scale_in": {
          "references": [
           "each.value.protect_from_scale_in",
           "each.value",
           "var.self_managed_node_group_defaults.protect_from_scale_in",
           "var.self_managed_node_group_defaults"
          ]
         },
         "ram_disk_id": {
          "references": [
           "each.value.ram_disk_id",
           "each.value",
           "var.self_managed_node_group_defaults.ram_disk_id",
           "var.self_managed_node_group_defaults"
          ]
         },
         "schedules": {
          "references": [
           "each.value.schedules",
           "each.value",
           "var.self_managed_node_group_defaults.schedules",
           "var.self_managed_node_group_defaults"
          ]
         },
         "security_group_description": {
          "references": [
           "each.value.security_group_description",
           "each.value",
           "var.self_managed_node_group_defaults.security_group_description",
           "var.self_managed_node_group_defaults"
          ]
         },
         "security_group_name": {
          "references": [
           "each.value.security_group_name",
           "each.value",
           "var.self_managed_node_group_defaults.security_group_name",
           "var.self_managed_node_group_defaults"
          ]
         },
         "security_group_rules": {
          "references": [
           "each.value.security_group_rules",
           "each.value",
           "var.self_managed_node_group_defaults.security_group_rules",
           "var.self_managed_node_group_defaults"
          ]
         },
         "security_group_tags": {
          "references": [
           "each.value.security_group_tags",
           "each.value",
           "var.self_managed_node_group_defaults.security_group_tags",
           "var.self_managed_node_group_defaults"
          ]
         },
         "security_group_use_name_prefix": {
          "references": [
           "each.value.security_group_use_name_prefix",
           "each.value",
           "var.self_managed_node_group_defaults.security_group_use_name_prefix",
           "var.self_managed_node_group_defaults"
          ]
         },
         "service_linked_role_arn": {
          "references": [
           "each.value.service_linked_role_arn",
           "each.value",
           "var.self_managed_node_group_defaults.service_linked_role_arn",
           "var.self_managed_node_group_defaults"
          ]
         },
         "subnet_ids": {
          "references": [
           "each.value.subnet_ids",
           "each.value",
           "var.self_managed_node_group_defaults.subnet_ids",
           "var.self_managed_node_group_defaults",
           "var.subnet_ids"
          ]
         },
         "suspended_processes": {
          "references": [
           "each.value.suspended_processes",
           "each.value",
           "var.self_managed_node_group_defaults.suspended_processes",
           "var.self_managed_node_group_defaults"
          ]
         },
         "tags": {
          "references": [
           "var.tags",
           "each.value.tags",
           "each.value",
           "var.self_managed_node_group_defaults.tags",
           "var.self_managed_node_group_defaults"
          ]
         },
         "target_group_arns": {
          "references": [
           "each.value.target_group_arns",
           "each.value",
           "var.self_managed_node_group_defaults.target_group_arns",
           "var.self_managed_node_group_defaults"
          ]
         },
         "termination_policies": {
          "references": [
           "each.value.termination_policies",
           "each.value",
           "var.self_managed_node_group_defaults.termination_policies",
           "var.self_managed_node_group_defaults"
          ]
         },
         "update_launch_template_default_version": {
          "references": [
           "each.value.update_launch_template_default_version",
           "each.value",
           "var.self_managed_node_group_defaults.update_launch_template_default_version",
           "var.self_managed_node_group_defaults"
          ]
         },
         "use_default_tags": {
          "references": [
           "each.value.use_default_tags",
           "each.value",
           "var.self_managed_node_group_defaults.use_default_tags",
           "var.self_managed_node_group_defaults"
          ]
         },
         "use_mixed_instances_policy": {
          "references": [
           "each.value.use_mixed_instances_policy",
           "each.value",
           "var.self_managed_node_group_defaults.use_mixed_instances_policy",
           "var.self_managed_node_group_defaults"
          ]
         },
         "use_name_prefix": {
          "references": [
           "each.value.use_name_prefix",
           "each.value",
           "var.self_managed_node_group_defaults.use_name_prefix",
           "var.self_managed_node_group_defaults"
          ]
         },
         "user_data_template_path": {
          "references": [
           "each.value.user_data_template_path",
           "each.value",
           "var.self_managed_node_group_defaults.user_data_template_path",
           "var.self_managed_node_group_defaults"
          ]
         },
         "vpc_id": {
          "references": [
           "each.value.vpc_id",
           "each.value",
           "var.self_managed_node_group_defaults.vpc_id",
           "var.self_managed_node_group_defaults",
           "var.vpc_id"
          ]
         },
         "vpc_security_group_ids": {
          "references": [
           "local.node_security_group_id",
           "each.value.vpc_security_group_ids",
           "each.value",
           "var.self_managed_node_group_defaults.vpc_security_group_ids",
           "var.self_managed_node_group_defaults"
          ]
         },
         "wait_for_capacity_timeout": {
          "references": [
           "each.value.wait_for_capacity_timeout",
           "each.value",
           "var.self_managed_node_group_defaults.wait_for_capacity_timeout",
           "var.self_managed_node_group_defaults"
          ]
         },
         "wait_for_elb_capacity": {
          "references": [
           "each.value.wait_for_elb_capacity",
           "each.value",
           "var.self_managed_node_group_defaults.wait_for_elb_capacity",
           "var.self_managed_node_group_defaults"
          ]
         },
         "warm_pool": {
          "references": [
           "each.value.warm_pool",
           "each.value",
           "var.self_managed_node_group_defaults.warm_pool",
           "var.self_managed_node_group_defaults"
          ]
         }
        },
        "for_each_expression": {
         "references": [
          "var.self_managed_node_groups",
          "var.create"
         ]
        },
        "module": {
         "module_calls": {
          "user_data": {
           "expressions": {
            "bootstrap_extra_args": {
             "references": [
              "var.bootstrap_extra_args"
             ]
            },
            "cluster_auth_base64": {
             "references": [
              "var.cluster_auth_base64"
             ]
            },
            "cluster_endpoint": {
             "references": [
              "var.cluster_endpoint"
             ]
            },
            "cluster_name": {
             "references": [
              "var.cluster_name"
             ]
            },
            "create": {
             "references": [
              "var.create"
             ]
            },
            "enable_bootstrap_user_data": {
             "constant_value": true
            },
            "is_eks_managed_node_group": {
             "constant_value": false
            },
            "platform": {
             "references": [
              "var.platform"
             ]
            },
            "post_bootstrap_user_data": {
             "references": [
              "var.post_bootstrap_user_data"
             ]
            },
            "pre_bootstrap_user_data": {
             "references": [
              "var.pre_bootstrap_user_data"
             ]
            },
            "user_data_template_path": {
             "references": [
              "var.user_data_template_path"
             ]
            }
           },
           "module": {
            "outputs": {
             "user_data": {
              "description": "Base64 encoded user data rendered for the provided inputs",
              "expression": {
               "references": [
                "local.platform",
                "var.platform"
               ]
              }
             }
            },
            "resources": [
             {
              "address": "data.cloudinit_config.linux_eks_managed_node_group",
              "count_expression": {
               "references": [
                "var.create",
                "var.platform",
                "var.is_eks_managed_node_group",
                "var.enable_bootstrap_user_data",
                "var.pre_bootstrap_user_data",
                "var.user_data_template_path"
               ]
              },
              "expressions": {
               "base64_encode": {
                "constant_value": true
               },
               "boundary": {
                "constant_value": "//"
               },
               "gzip": {
                "constant_value": false
               },
               "part": [
                {
                 "content": {
                  "references": [
                   "var.pre_bootstrap_user_data"
                  ]
                 },
                 "content_type": {
                  "constant_value": "text/x-shellscript"
                 }
                }
               ]
              },
              "mode": "data",
              "name": "linux_eks_managed_node_group",
              "provider_config_key": "module.eks.module.self_managed_node_group.module.user_data:cloudinit",
              "schema_version": 0,
              "type": "cloudinit_config"
             }
            ],
            "variables": {
             "bootstrap_extra_args": {
              "default": "",
              "description": "Additional arguments passed to the bootstrap script. When `platform` = `bottlerocket`; these are additional [settings](https://github.com/bottlerocket-os/bottlerocket#settings) that are provided to the Bottlerocket user data"
             },
             "cluster_auth_base64": {
              "default": "",
              "description": "Base64 encoded CA of associated EKS cluster"
             },
             "cluster_endpoint": {
              "default": "",
              "description": "Endpoint of associated EKS cluster"
             },
             "cluster_name": {
              "default": "",
              "description": "Name of the EKS cluster"
             },
             "cluster_service_ipv4_cidr": {
              "default": null,
              "description": "The CIDR block to assign Kubernetes service IP addresses from. If you don't specify a block, Kubernetes assigns addresses from either the 10.100.0.0/16 or 172.20.0.0/16 CIDR blocks"
             },
             "create": {
              "default": true,
              "description": "Determines whether to create user-data or not"
             },
             "enable_bootstrap_user_data": {
              "default": false,
              "description": "Determines whether the bootstrap configurations are populated within the user data template"
             },
             "is_eks_managed_node_group": {
              "default": true,
              "description": "Determines whether the user data is used on nodes in an EKS managed node group. Used to determine if user data will be appended or not"
             },
             "platform": {
              "default": "linux",
              "description": "Identifies if the OS platform is `bottlerocket`, `linux`, or `windows` based"
             },
             "post_bootstrap_user_data": {
              "default": "",
              "description": "User data that is appended to the user data script after of the EKS bootstrap script. Not used when `platform` = `bottlerocket`"
             },
             "pre_bootstrap_user_data": {
              "default": "",
              "description": "User data that is injected into the user data script ahead of the EKS bootstrap script. Not used when `platform` = `bottlerocket`"
             },
             "user_data_template_path": {
              "default": "",
              "description": "Path to a local, custom user data template file to use when rendering user data"
             }
            }
           },
           "source": "../_user_data"
          }
         },
         "outputs": {
          "autoscaling_group_arn": {
           "description": "The ARN for this autoscaling group",
           "expression": {
            "references": [
             "aws_autoscaling_group.this[0].arn",
             "aws_autoscaling_group.this[0]",
             "aws_autoscaling_group.this"
            ]
           }
          },
          "autoscaling_group_availability_zones": {
           "description": "The availability zones of the autoscaling group",
           "expression": {
            "references": [
             "aws_autoscaling_group.this[0].availability_zones",
             "aws_autoscaling_group.this[0]",
             "aws_autoscaling_group.this"
            ]
           }
          },
          "autoscaling_group_default_cooldown": {
           "description": "Time between a scaling activity and the succeeding scaling activity",
           "expression": {
            "references": [
             "aws_autoscaling_group.this[0].default_cooldown",
             "aws_autoscaling_group.this[0]",
             "aws_autoscaling_group.this"
            ]
           }
          },
          "autoscaling_group_desired_capacity": {
           "description": "The number of Amazon EC2 instances that should be running in the group",
           "expression": {
            "references": [
             "aws_autoscaling_group.this[0].desired_capacity",
             "aws_autoscaling_group.this[0]",
             "aws_autoscaling_group.this"
            ]
           }
          },
          "autoscaling_group_health_check_grace_period": {
           "description": "Time after instance comes into service before checking health",
           "expression": {
            "references": [
             "aws_autoscaling_group.this[0].health_check_grace_period",
             "aws_autoscaling_group.this[0]",
             "aws_autoscaling_group.this"
            ]
           }
          },
          "autoscaling_group_health_check_type": {
           "description": "EC2 or ELB. Controls how health checking is done",
           "expression": {
            "references": [
             "aws_autoscaling_group.this[0].health_check_type",
             "aws_autoscaling_group.this[0]",
             "aws_autoscaling_group.this"
            ]
           }
          },
          "autoscaling_group_id": {
           "description": "The autoscaling group id",
           "expression": {
            "references": [
             "aws_autoscaling_group.this[0].id",
             "aws_autoscaling_group.this[0]",
             "aws_autoscaling_group.this"
            ]
           }
          },
          "autoscaling_group_max_size": {
           "description": "The maximum size of the autoscaling group",
           "expression": {
            "references": [
             "aws_autoscaling_group.this[0].max_size",
             "aws_autoscaling_group.this[0]",
             "aws_autoscaling_group.this"
            ]
           }
          },
          "autoscaling_group_min_size": {
           "description": "The minimum size of the autoscaling group",
           "expression": {
            "references": [
             "aws_autoscaling_group.this[0].min_size",
             "aws_autoscaling_group.this[0]",
             "aws_autoscaling_group.this"
            ]
           }
          },
          "autoscaling_group_name": {
           "description": "The autoscaling group name",
           "expression": {
            "references": [
             "aws_autoscaling_group.this[0].name",
             "aws_autoscaling_group.this[0]",
             "aws_autoscaling_group.this"
            ]
           }
          },
          "autoscaling_group_schedule_arns": {
           "description": "ARNs of autoscaling group schedules",
           "expression": {
            "references": [
             "aws_autoscaling_schedule.this"
            ]
           }
          },
          "autoscaling_group_vpc_zone_identifier": {
           "description": "The VPC zone identifier",
           "expression": {
            "references": [
             "aws_autoscaling_group.this[0].vpc_zone_identifier",
             "aws_autoscaling_group.this[0]",
             "aws_autoscaling_group.this"
            ]
           }
          },
          "iam_instance_profile_arn": {
           "description": "ARN assigned by AWS to the instance profile",
           "expression": {
            "references": [
             "aws_iam_instance_profile.this[0].arn",
             "aws_iam_instance_profile.this[0]",
             "aws_iam_instance_profile.this",
             "var.iam_instance_profile_arn"
            ]
           }
          },
          "iam_instance_profile_id": {
           "description": "Instance profile's ID",
           "expression": {
            "references": [
             "aws_iam_instance_profile.this[0].id",
             "aws_iam_instance_profile.this[0]",
             "aws_iam_instance_profile.this"
            ]
           }
          },
          "iam_instance_profile_unique": {
           "description": "Stable and unique string identifying the IAM instance profile",
           "expression": {
            "references": [
             "aws_iam_instance_profile.this[0].unique_id",
             "aws_iam_instance_profile.this[0]",
             "aws_iam_instance_profile.this"
            ]
           }
          },
          "iam_role_arn": {
           "description": "The Amazon Resource Name (ARN) specifying the IAM role",
           "expression": {
            "references": [
             "aws_iam_role.this[0].arn",
             "aws_iam_role.this[0]",
             "aws_iam_role.this"
            ]
           }
          },
          "iam_role_name": {
           "description": "The name of the IAM role",
           "expression": {
            "references": [
             "aws_iam_role.this[0].name",
             "aws_iam_role.this[0]",
             "aws_iam_role.this"
            ]
           }
          },
          "iam_role_unique_id": {
           "description": "Stable and unique string identifying the IAM role",
           "expression": {
            "references": [
             "aws_iam_role.this[0].unique_id",
             "aws_iam_role.this[0]",
             "aws_iam_role.this"
            ]
           }
          },
          "image_id": {
           "description": "ID of the image",
           "expression": {
            "references": [
             "aws_launch_template.this[0].image_id",
             "aws_launch_template.this[0]",
             "aws_launch_template.this"
            ]
           }
          },
          "launch_template_arn": {
           "description": "The ARN of the launch template",
           "expression": {
            "references": [
             "aws_launch_template.this[0].arn",
             "aws_launch_template.this[0]",
             "aws_launch_template.this"
            ]
           }
          },
          "launch_template_id": {
           "description": "The ID of the launch template",
           "expression": {
            "references": [
             "aws_launch_template.this[0].id",
             "aws_launch_template.this[0]",
             "aws_launch_template.this"
            ]
           }
          },
          "launch_template_latest_version": {
           "description": "The latest version of the launch template",
           "expression": {
            "references": [
             "aws_launch_template.this[0].latest_version",
             "aws_launch_template.this[0]",
             "aws_launch_template.this"
            ]
           }
          },
          "launch_template_name": {
           "description": "The name of the launch template",
           "expression": {
            "references": [
             "aws_launch_template.this[0].name",
             "aws_launch_template.this[0]",
             "aws_launch_template.this"
            ]
           }
          },
          "platform": {
           "description": "Identifies if the OS platform is `bottlerocket`, `linux`, or `windows` based",
           "expression": {
            "references": [
             "var.platform"
            ]
           }
          },
          "security_group_arn": {
           "description": "Amazon Resource Name (ARN) of the security group",
           "expression": {
            "references": [
             "aws_security_group.this[0].arn",
             "aws_security_group.this[0]",
             "aws_security_group.this"
            ]
           }
          },
          "security_group_id": {
           "description": "ID of the security group",
           "expression": {
            "references": [
             "aws_security_group.this[0].id",
             "aws_security_group.this[0]",
             "aws_security_group.this"
            ]
           }
          },
          "user_data": {
           "description": "Base64 encoded user data",
           "expression": {
            "references": [
             "module.user_data.user_data",
             "module.user_data"
            ]
           }
          }
         },
         "resources": [
          {
           "address": "aws_autoscaling_group.this",
           "count_expression": {
            "references": [
             "var.create",
             "var.create_autoscaling_group"
            ]
           },
           "expressions": {
            "availability_zones": {
             "references": [
              "var.availability_zones"
             ]
            },
            "capacity_rebalance": {
             "references": [
              "var.capacity_rebalance"
             ]
            },
            "default_cooldown": {
             "references": [
              "var.default_cooldown"
             ]
            },
            "desired_capacity": {
             "references": [
              "var.desired_size"
             ]
            },
            "enabled_metrics": {
             "references": [
              "var.enabled_metrics"
             ]
            },
            "force_delete": {
             "references": [
              "var.force_delete"
             ]
            },
            "health_check_grace_period": {
             "references": [
              "var.health_check_grace_period"
             ]
            },
            "health_check_type": {
             "references": [
              "var.health_check_type"
             ]
            },
            "max_instance_lifetime": {
             "references": [
              "var.max_instance_lifetime"
             ]
            },
            "max_size": {
             "references": [
              "var.max_size"
             ]
            },
            "metrics_granularity": {
             "references": [
              "var.metrics_granularity"
             ]
            },
            "min_elb_capacity": {
             "references": [
              "var.min_elb_capacity"
             ]
            },
            "min_size": {
             "references": [
              "var.min_size"
             ]
            },
            "name": {
             "references": [
              "var.use_name_prefix",
              "var.name"
             ]
            },
            "name_prefix": {
             "references": [
              "var.use_name_prefix",
              "var.name"
             ]
            },
            "placement_group": {
             "references": [
              "var.placement_group"
             ]
            },
            "protect_from_scale_in": {
             "references": [
              "var.protect_from_scale_in"
             ]
            },
            "service_linked_role_arn": {
             "references": [
              "var.service_linked_role_arn"
             ]
            },
            "suspended_processes": {
             "references": [
              "var.suspended_processes"
             ]
            },
            "target_group_arns": {
             "references": [
              "var.target_group_arns"
             ]
            },
            "termination_policies": {
             "references": [
              "var.termination_policies"
             ]
            },
            "timeouts": {
             "delete": {
              "references": [
               "var.delete_timeout"
              ]
             }
            },
            "vpc_zone_identifier": {
             "references": [
              "var.subnet_ids"
             ]
            },
            "wait_for_capacity_timeout": {
             "references": [
              "var.wait_for_capacity_timeout"
             ]
            },
            "wait_for_elb_capacity": {
             "references": [
              "var.wait_for_elb_capacity"
             ]
            }
           },
           "mode": "managed",
           "name": "this",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_autoscaling_group"
          },
          {
           "address": "aws_autoscaling_schedule.this",
           "expressions": {
            "autoscaling_group_name": {
             "references": [
              "aws_autoscaling_group.this[0].name",
              "aws_autoscaling_group.this[0]",
              "aws_autoscaling_group.this"
             ]
            },
            "desired_capacity": {
             "references": [
              "each.value"
             ]
            },
            "end_time": {
             "references": [
              "each.value"
             ]
            },
            "max_size": {
             "references": [
              "each.value"
             ]
            },
            "min_size": {
             "references": [
              "each.value"
             ]
            },
            "recurrence": {
             "references": [
              "each.value"
             ]
            },
            "scheduled_action_name": {
             "references": [
              "each.key"
             ]
            },
            "start_time": {
             "references": [
              "each.value"
             ]
            },
            "time_zone": {
             "references": [
              "each.value"
             ]
            }
           },
           "for_each_expression": {
            "references": [
             "var.create",
             "var.create_schedule",
             "var.schedules"
            ]
           },
           "mode": "managed",
           "name": "this",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_autoscaling_schedule"
          },
          {
           "address": "aws_iam_instance_profile.this",
           "count_expression": {
            "references": [
             "var.create",
             "var.create_iam_instance_profile"
            ]
           },
           "expressions": {
            "name": {
             "references": [
              "var.iam_role_use_name_prefix",
              "local.iam_role_name"
             ]
            },
            "name_prefix": {
             "references": [
              "var.iam_role_use_name_prefix",
              "local.iam_role_name"
             ]
            },
            "path": {
             "references": [
              "var.iam_role_path"
             ]
            },
            "role": {
             "references": [
              "aws_iam_role.this[0].name",
              "aws_iam_role.this[0]",
              "aws_iam_role.this"
             ]
            },
            "tags": {
             "references": [
              "var.tags",
              "var.iam_role_tags"
             ]
            }
           },
           "mode": "managed",
           "name": "this",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_iam_instance_profile"
          },
          {
           "address": "aws_iam_role.this",
           "count_expression": {
            "references": [
             "var.create",
             "var.create_iam_instance_profile"
            ]
           },
           "expressions": {
            "assume_role_policy": {
             "references": [
              "data.aws_iam_policy_document.assume_role_policy[0].json",
              "data.aws_iam_policy_document.assume_role_policy[0]",
              "data.aws_iam_policy_document.assume_role_policy"
             ]
            },
            "description": {
             "references": [
              "var.iam_role_description"
             ]
            },
            "force_detach_policies": {
             "constant_value": true
            },
            "name": {
             "references": [
              "var.iam_role_use_name_prefix",
              "local.iam_role_name"
             ]
            },
            "name_prefix": {
             "references": [
              "var.iam_role_use_name_prefix",
              "local.iam_role_name"
             ]
            },
            "path": {
             "references": [
              "var.iam_role_path"
             ]
            },
            "permissions_boundary": {
             "references": [
              "var.iam_role_permissions_boundary"
             ]
            },
            "tags": {
             "references": [
              "var.tags",
              "var.iam_role_tags"
             ]
            }
           },
           "mode": "managed",
           "name": "this",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_iam_role"
          },
          {
           "address": "aws_iam_role_policy_attachment.this",
           "expressions": {
            "policy_arn": {
             "references": [
              "each.value"
             ]
            },
            "role": {
             "references": [
              "aws_iam_role.this[0].name",
              "aws_iam_role.this[0]",
              "aws_iam_role.this"
             ]
            }
           },
           "for_each_expression": {
            "references": [
             "var.create",
             "var.create_iam_instance_profile",
             "local.iam_role_policy_prefix",
             "local.iam_role_policy_prefix",
             "var.iam_role_attach_cni_policy",
             "local.cni_policy",
             "var.iam_role_additional_policies"
            ]
           },
           "mode": "managed",
           "name": "this",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_iam_role_policy_attachment"
          },
          {
           "address": "aws_launch_template.this",
           "count_expression": {
            "references": [
             "var.create",
             "var.create_launch_template"
            ]
           },
           "depends_on": [
            "aws_security_group_rule.this",
            "aws_iam_role_policy_attachment.this"
           ],
           "expressions": {
            "default_version": {
             "references": [
              "var.launch_template_default_version"
             ]
            },
            "description": {
             "references": [
              "var.launch_template_description"
             ]
            },
            "disable_api_termination": {
             "references": [
              "var.disable_api_termination"
             ]
            },
            "ebs_optimized": {
             "references": [
              "var.ebs_optimized"
             ]
            },
            "iam_instance_profile": [
             {
              "arn": {
               "references": [
                "var.create_iam_instance_profile",
                "aws_iam_instance_profile.this[0].arn",
                "aws_iam_instance_profile.this[0]",
                "aws_iam_instance_profile.this",
                "var.iam_instance_profile_arn"
               ]
              }
             }
            ],
            "image_id": {
             "references": [
              "var.ami_id",
              "data.aws_ami.eks_default[0].image_id",
              "data.aws_ami.eks_default[0]",
              "data.aws_ami.eks_default"
             ]
            },
            "instance_initiated_shutdown_behavior": {
             "references": [
              "var.instance_initiated_shutdown_behavior"
             ]
            },
            "instance_type": {
             "references": [
              "var.instance_type"
             ]
            },
            "kernel_id": {
             "references": [
              "var.kernel_id"
             ]
            },
            "key_name": {
             "references": [
              "var.key_name"
             ]
            },
            "name": {
             "references": [
              "var.launch_template_use_name_prefix",
              "local.launch_template_name_int"
             ]
            },
            "name_prefix": {
             "references": [
              "var.launch_template_use_name_prefix",
              "local.launch_template_name_int"
             ]
            },
            "ram_disk_id": {
             "references": [
              "var.ram_disk_id"
             ]
            },
            "tags": {
             "references": [
              "var.tags"
             ]
            },
            "update_default_version": {
             "references": [
              "var.update_launch_template_default_version"
             ]
            },
            "user_data": {
             "references": [
              "module.user_data.user_data",
              "module.user_data"
             ]
            },
            "vpc_security_group_ids": {
             "references": [
              "var.network_interfaces",
              "local.security_group_ids"
             ]
            }
           },
           "mode": "managed",
           "name": "this",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_launch_template"
          },
          {
           "address": "aws_security_group.this",
           "count_expression": {
            "references": [
             "local.create_security_group"
            ]
           },
           "expressions": {
            "description": {
             "references": [
              "var.security_group_description"
             ]
            },
            "name": {
             "references": [
              "var.security_group_use_name_prefix",
              "local.security_group_name"
             ]
            },
            "name_prefix": {
             "references": [
              "var.security_group_use_name_prefix",
              "local.security_group_name"
             ]
            },
            "tags": {
             "references": [
              "var.tags",
              "local.security_group_name",
              "var.security_group_tags"
             ]
            },
            "vpc_id": {
             "references": [
              "var.vpc_id"
             ]
            }
           },
           "mode": "managed",
           "name": "this",
           "provider_config_key": "aws",
           "schema_version": 1,
           "type": "aws_security_group"
          },
          {
           "address": "aws_security_group_rule.this",
           "expressions": {
            "cidr_blocks": {
             "references": [
              "each.value.cidr_blocks",
              "each.value"
             ]
            },
            "description": {
             "references": [
              "each.value.description",
              "each.value"
             ]
            },
            "from_port": {
             "references": [
              "each.value.from_port",
              "each.value"
             ]
            },
            "ipv6_cidr_blocks": {
             "references": [
              "each.value.ipv6_cidr_blocks",
              "each.value"
             ]
            },
            "prefix_list_ids": {
             "references": [
              "each.value.prefix_list_ids",
              "each.value"
             ]
            },
            "protocol": {
             "references": [
              "each.value.protocol",
              "each.value"
             ]
            },
            "security_group_id": {
             "references": [
              "aws_security_group.this[0].id",
              "aws_security_group.this[0]",
              "aws_security_group.this"
             ]
            },
            "self": {
             "references": [
              "each.value.self",
              "each.value"
             ]
            },
            "source_security_group_id": {
             "references": [
              "each.value.source_security_group_id",
              "each.value",
              "each.value.source_cluster_security_group",
              "each.value",
              "var.cluster_security_group_id"
             ]
            },
            "to_port": {
             "references": [
              "each.value.to_port",
              "each.value"
             ]
            },
            "type": {
             "references": [
              "each.value.type",
              "each.value"
             ]
            }
           },
           "for_each_expression": {
            "references": [
             "var.security_group_rules",
             "local.create_security_group"
            ]
           },
           "mode": "managed",
           "name": "this",
           "provider_config_key": "aws",
           "schema_version": 2,
           "type": "aws_security_group_rule"
          },
          {
           "address": "data.aws_ami.eks_default",
           "count_expression": {
            "references": [
             "var.create"
            ]
           },
           "expressions": {
            "filter": [
             {
              "name": {
               "constant_value": "name"
              },
              "values": {
               "references": [
                "var.cluster_version"
               ]
              }
             }
            ],
            "most_recent": {
             "constant_value": true
            },
            "owners": {
             "constant_value": [
              "amazon"
             ]
            }
           },
           "mode": "data",
           "name": "eks_default",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_ami"
          },
          {
           "address": "data.aws_caller_identity.current",
           "mode": "data",
           "name": "current",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_caller_identity"
          },
          {
           "address": "data.aws_default_tags.current",
           "mode": "data",
           "name": "current",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_default_tags"
          },
          {
           "address": "data.aws_iam_policy_document.assume_role_policy",
           "count_expression": {
            "references": [
             "var.create",
             "var.create_iam_instance_profile"
            ]
           },
           "expressions": {
            "statement": [
             {
              "actions": {
               "constant_value": [
                "sts:AssumeRole"
               ]
              },
              "principals": [
               {
                "identifiers": {
                 "references": [
                  "data.aws_partition.current.dns_suffix",
                  "data.aws_partition.current"
                 ]
                },
                "type": {
                 "constant_value": "Service"
                }
               }
              ],
              "sid": {
               "constant_value": "EKSNodeAssumeRole"
              }
             }
            ]
           },
           "mode": "data",
           "name": "assume_role_policy",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_iam_policy_document"
          },
          {
           "address": "data.aws_partition.current",
           "mode": "data",
           "name": "current",
           "provider_config_key": "aws",
           "schema_version": 0,
           "type": "aws_partition"
          }
         ],
         "variables": {
          "ami_id": {
           "default": "",
           "description": "The AMI from which to launch the instance"
          },
          "autoscaling_group_tags": {
           "default": {},
           "description": "A map of additional tags to add to the autoscaling group created. Tags are applied to the autoscaling group only and are NOT propagated to instances"
          },
          "availability_zones": {
           "default": null,
           "description": "A list of one or more availability zones for the group. Used for EC2-Classic and default subnets when not specified with `subnet_ids` argument. Conflicts with `subnet_ids`"
          },
          "block_device_mappings": {
           "default": {},
           "description": "Specify volumes to attach to the instance besides the volumes specified by the AMI"
          },
          "bootstrap_extra_args": {
           "default": "",
           "description": "Additional arguments passed to the bootstrap script. When `platform` = `bottlerocket`; these are additional [settings](https://github.com/bottlerocket-os/bottlerocket#settings) that are provided to the Bottlerocket user data"
          },
          "capacity_rebalance": {
           "default": null,
           "description": "Indicates whether capacity rebalance is enabled"
          },
          "capacity_reservation_specification": {
           "default": {},
           "description": "Targeting for EC2 capacity reservations"
          },
          "cluster_auth_base64": {
           "default": "",
           "description": "Base64 encoded CA of associated EKS cluster"
          },
          "cluster_endpoint": {
           "default": "",
           "description": "Endpoint of associated EKS cluster"
          },
          "cluster_ip_family": {
           "default": null,
           "description": "The IP family used to assign Kubernetes pod and service addresses. Valid values are `ipv4` (default) and `ipv6`"
          },
          "cluster_name": {
           "default": "",
           "description": "Name of associated EKS cluster"
          },
          "cluster_primary_security_group_id": {
           "default": null,
           "description": "The ID of the EKS cluster primary security group to associate with the instance(s). This is the security group that is automatically created by the EKS service"
          },
          "cluster_security_group_id": {
           "default": null,
           "description": "Cluster control plane security group ID"
          },
          "cluster_version": {
           "default": null,
           "description": "Kubernetes cluster version - used to lookup default AMI ID if one is not provided"
          },
          "cpu_options": {
           "default": {},
           "description": "The CPU options for the instance"
          },
          "create": {
           "default": true,
           "description": "Determines whether to create self managed node group or not"
          },
          "create_autoscaling_group": {
           "default": true,
           "description": "Determines whether to create autoscaling group or not"
          },
          "create_iam_instance_profile": {
           "default": true,
           "description": "Determines whether an IAM instance profile is created or to use an existing IAM instance profile"
          },
          "create_launch_template": {
           "default": true,
           "description": "Determines whether to create launch template or not"
          },
          "create_schedule": {
           "default": true,
           "description": "Determines whether to create autoscaling group schedule or not"
          },
          "create_security_group": {
           "default": true,
           "description": "Determines whether to create a security group"
          },
          "credit_specification": {
           "default": {},
           "description": "Customize the credit specification of the instance"
          },
          "default_cooldown": {
           "default": null,
           "description": "The amount of time, in seconds, after a scaling activity completes before another scaling activity can start"
          },
          "delete_timeout": {
           "default": null,
           "description": "Delete timeout to wait for destroying autoscaling group"
          },
          "desired_size": {
           "default": 1,
           "description": "The number of Amazon EC2 instances that should be running in the autoscaling group"
          },
          "disable_api_termination": {
           "default": null,
           "description": "If true, enables EC2 instance termination protection"
          },
          "ebs_optimized": {
           "default": null,
           "description": "If true, the launched EC2 instance will be EBS-optimized"
          },
          "elastic_gpu_specifications": {
           "default": {},
           "description": "The elastic GPU to attach to the instance"
          },
          "elastic_inference_accelerator": {
           "default": {},
           "description": "Configuration block containing an Elastic Inference Accelerator to attach to the instance"
          },
          "enable_monitoring": {
           "default": true,
           "description": "Enables/disables detailed monitoring"
          },
          "enabled_metrics": {
           "default": [],
           "description": "A list of metrics to collect. The allowed values are `GroupDesiredCapacity`, `GroupInServiceCapacity`, `GroupPendingCapacity`, `GroupMinSize`, `GroupMaxSize`, `GroupInServiceInstances`, `GroupPendingInstances`, `GroupStandbyInstances`, `GroupStandbyCapacity`, `GroupTerminatingCapacity`, `GroupTerminatingInstances`, `GroupTotalCapacity`, `GroupTotalInstances`"
          },
          "enclave_options": {
           "default": {},
           "description": "Enable Nitro Enclaves on launched instances"
          },
          "force_delete": {
           "default": null,
           "description": "Allows deleting the Auto Scaling Group without waiting for all instances in the pool to terminate. You can force an Auto Scaling Group to delete even if it's in the process of scaling a resource. Normally, Terraform drains all the instances before deleting the group. This bypasses that behavior and potentially leaves resources dangling"
          },
          "health_check_grace_period": {
           "default": null,
           "description": "Time (in seconds) after instance comes into service before checking health"
          },
          "health_check_type": {
           "default": null,
           "description": "`EC2` or `ELB`. Controls how health checking is done"
          },
          "hibernation_options": {
           "default": {},
           "description": "The hibernation options for the instance"
          },
          "iam_instance_profile_arn": {
           "default": null,
           "description": "Amazon Resource Name (ARN) of an existing IAM instance profile that provides permissions for the node group. Required if `create_iam_instance_profile` = `false`"
          },
          "iam_role_additional_policies": {
           "default": [],
           "description": "Additional policies to be added to the IAM role"
          },
          "iam_role_attach_cni_policy": {
           "default": true,
           "description": "Whether to attach the `AmazonEKS_CNI_Policy`/`AmazonEKS_CNI_IPv6_Policy` IAM policy to the IAM IAM role. WARNING: If set `false` the permissions must be assigned to the `aws-node` DaemonSet pods via another method or nodes will not be able to join the cluster"
          },
          "iam_role_description": {
           "default": null,
           "description": "Description of the role"
          },
          "iam_role_name": {
           "default": null,
           "description": "Name to use on IAM role created"
          },
          "iam_role_path": {
           "default": null,
           "description": "IAM role path"
          },
          "iam_role_permissions_boundary": {
           "default": null,
           "description": "ARN of the policy that is used to set the permissions boundary for the IAM role"
          },
          "iam_role_tags": {
           "default": {},
           "description": "A map of additional tags to add to the IAM role created"
          },
          "iam_role_use_name_prefix": {
           "default": true,
           "description": "Determines whether cluster IAM role name (`iam_role_name`) is used as a prefix"
          },
          "initial_lifecycle_hooks": {
           "default": [],
           "description": "One or more Lifecycle Hooks to attach to the Auto Scaling Group before instances are launched. The syntax is exactly the same as the separate `aws_autoscaling_lifecycle_hook` resource, without the `autoscaling_group_name` attribute. Please note that this will only work when creating a new Auto Scaling Group. For all other use-cases, please use `aws_autoscaling_lifecycle_hook` resource"
          },
          "instance_initiated_shutdown_behavior": {
           "default": null,
           "description": "Shutdown behavior for the instance. Can be `stop` or `terminate`. (Default: `stop`)"
          },
          "instance_market_options": {
           "default": {},
           "description": "The market (purchasing) option for the instance"
          },
          "instance_refresh": {
           "default": {},
           "description": "If this block is configured, start an Instance Refresh when this Auto Scaling Group is updated"
          },
          "instance_type": {
           "default": "",
           "description": "The type of the instance to launch"
          },
          "kernel_id": {
           "default": null,
           "description": "The kernel ID"
          },
          "key_name": {
           "default": null,
           "description": "The key name that should be used for the instance"
          },
          "launch_template_default_version": {
           "default": null,
           "description": "Default Version of the launch template"
          },
          "launch_template_description": {
           "default": null,
           "description": "Description of the launch template"
          },
          "launch_template_name": {
           "default": null,
           "description": "Launch template name - either to be created (`var.create_launch_template` = `true`) or existing (`var.create_launch_template` = `false`)"
          },
          "launch_template_tags": {
           "default": {},
           "description": "A map of additional tags to add to the tag_specifications of launch template created"
          },
          "launch_template_use_name_prefix": {
           "default": true,
           "description": "Determines whether to use `launch_template_name` as is or create a unique name beginning with the `launch_template_name` as the prefix"
          },
          "launch_template_version": {
           "default": null,
           "description": "Launch template version. Can be version number, `$Latest`, or `$Default`"
          },
          "license_specifications": {
           "default": {},
           "description": "A list of license specifications to associate with"
          },
          "max_instance_lifetime": {
           "default": null,
           "description": "The maximum amount of time, in seconds, that an instance can be in service, values must be either equal to 0 or between 604800 and 31536000 seconds"
          },
          "max_size": {
           "default": 3,
           "description": "The maximum size of the autoscaling group"
          },
          "metadata_options": {
           "default": {
            "http_endpoint": "enabled",
            "http_put_response_hop_limit": "2",
            "http_tokens": "required"
           },
           "description": "Customize the metadata options for the instance"
          },
          "metrics_granularity": {
           "default": null,
           "description": "The granularity to associate with the metrics to collect. The only valid value is `1Minute`"
          },
          "min_elb_capacity": {
           "default": null,
           "description": "Setting this causes Terraform to wait for this number of instances to show up healthy in the ELB only on creation. Updates will not wait on ELB instance number changes"
          },
          "min_size": {
           "default": 0,
           "description": "The minimum size of the autoscaling group"
          },
          "mixed_instances_policy": {
           "default": null,
           "description": "Configuration block containing settings to define launch targets for Auto Scaling groups"
          },
          "name": {
           "default": "",
           "description": "Name of the Self managed Node Group"
          },
          "network_interfaces": {
           "default": [],
           "description": "Customize network interfaces to be attached at instance boot time"
          },
          "placement": {
           "default": {},
           "description": "The placement of the instance"
          },
          "placement_group": {
           "default": null,
           "description": "The name of the placement group into which you'll launch your instances, if any"
          },
          "platform": {
           "default": "linux",
           "description": "Identifies if the OS platform is `bottlerocket`, `linux`, or `windows` based"
          },
          "post_bootstrap_user_data": {
           "default": "",
           "description": "User data that is appended to the user data script after of the EKS bootstrap script. Not used when `platform` = `bottlerocket`"
          },
          "pre_bootstrap_user_data": {
           "default": "",
           "description": "User data that is injected into the user data script ahead of the EKS bootstrap script. Not used when `platform` = `bottlerocket`"
          },
          "protect_from_scale_in": {
           "default": false,
           "description": "Allows setting instance protection. The autoscaling group will not select instances with this setting for termination during scale in events."
          },
          "ram_disk_id": {
           "default": null,
           "description": "The ID of the ram disk"
          },
          "schedules": {
           "default": {},
           "description": "Map of autoscaling group schedule to create"
          },
          "security_group_description": {
           "default": "EKS self-managed node group security group",
           "description": "Description for the security group created"
          },
          "security_group_name": {
           "default": null,
           "description": "Name to use on security group created"
          },
          "security_group_rules": {
           "default": {},
           "description": "List of security group rules to add to the security group created"
          },
          "security_group_tags": {
           "default": {},
           "description": "A map of additional tags to add to the security group created"
          },
          "security_group_use_name_prefix": {
           "default": true,
           "description": "Determines whether the security group name (`security_group_name`) is used as a prefix"
          },
          "service_linked_role_arn": {
           "default": null,
           "description": "The ARN of the service-linked role that the ASG will use to call other AWS services"
          },
          "subnet_ids": {
           "default": null,
           "description": "A list of subnet IDs to launch resources in. Subnets automatically determine which availability zones the group will reside. Conflicts with `availability_zones`"
          },
          "suspended_processes": {
           "default": [],
           "description": "A list of processes to suspend for the Auto Scaling Group. The allowed values are `Launch`, `Terminate`, `HealthCheck`, `ReplaceUnhealthy`, `AZRebalance`, `AlarmNotification`, `ScheduledActions`, `AddToLoadBalancer`. Note that if you suspend either the `Launch` or `Terminate` process types, it can prevent your Auto Scaling Group from functioning properly"
          },
          "tags": {
           "default": {},
           "description": "A map of tags to add to all resources"
          },
          "target_group_arns": {
           "default": [],
           "description": "A set of `aws_alb_target_group` ARNs, for use with Application or Network Load Balancing"
          },
          "termination_policies": {
           "default": [],
           "description": "A list of policies to decide how the instances in the Auto Scaling Group should be terminated. The allowed values are `OldestInstance`, `NewestInstance`, `OldestLaunchConfiguration`, `ClosestToNextInstanceHour`, `OldestLaunchTemplate`, `AllocationStrategy`, `Default`"
          },
          "update_launch_template_default_version": {
           "default": true,
           "description": "Whether to update Default Version each update. Conflicts with `launch_template_default_version`"
          },
          "use_default_tags": {
           "default": false,
           "description": "Enables/disables the use of provider default tags in the tag_specifications of the Auto Scaling group"
          },
          "use_mixed_instances_policy": {
           "default": false,
           "description": "Determines whether to use a mixed instances policy in the autoscaling group or not"
          },
          "use_name_prefix": {
           "default": true,
           "description": "Determines whether to use `name` as is or create a unique name beginning with the `name` as the prefix"
          },
          "user_data_template_path": {
           "default": "",
           "description": "Path to a local, custom user data template file to use when rendering user data"
          },
          "vpc_id": {
           "default": null,
           "description": "ID of the VPC where the security group/nodes will be provisioned"
          },
          "vpc_security_group_ids": {
           "default": [],
           "description": "A list of security group IDs to associate"
          },
          "wait_for_capacity_timeout": {
           "default": null,
           "description": "A maximum duration that Terraform should wait for ASG instances to be healthy before timing out. (See also Waiting for Capacity below.) Setting this to '0' causes Terraform to skip all Capacity Waiting behavior."
          },
          "wait_for_elb_capacity": {
           "default": null,
           "description": "Setting this will cause Terraform to wait for exactly this number of healthy instances in all attached load balancers on both create and update operations. Takes precedence over `min_elb_capacity` behavior."
          },
          "warm_pool": {
           "default": {},
           "description": "If this block is configured, add a Warm Pool to the specified Auto Scaling group"
          }
         }
        },
        "source": "./modules/self-managed-node-group"
       }
      },
      "outputs": {
       "aws_auth_configmap_yaml": {
        "description": "[DEPRECATED - use `var.manage_aws_auth_configmap`] Formatted yaml output for base aws-auth configmap containing roles used in cluster node groups/fargate profiles",
        "expression": {
         "references": [
          "path.module",
          "module.eks_managed_node_group",
          "module.self_managed_node_group",
          "module.self_managed_node_group",
          "module.fargate_profile"
         ]
        }
       },
       "cloudwatch_log_group_arn": {
        "description": "Arn of cloudwatch log group created",
        "expression": {
         "references": [
          "aws_cloudwatch_log_group.this[0].arn",
          "aws_cloudwatch_log_group.this[0]",
          "aws_cloudwatch_log_group.this"
         ]
        }
       },
       "cloudwatch_log_group_name": {
        "description": "Name of cloudwatch log group created",
        "expression": {
         "references": [
          "aws_cloudwatch_log_group.this[0].name",
          "aws_cloudwatch_log_group.this[0]",
          "aws_cloudwatch_log_group.this"
         ]
        }
       },
       "cluster_addons": {
        "description": "Map of attribute maps for all EKS cluster addons enabled",
        "expression": {
         "references": [
          "aws_eks_addon.this"
         ]
        }
       },
       "cluster_arn": {
        "description": "The Amazon Resource Name (ARN) of the cluster",
        "expression": {
         "references": [
          "aws_eks_cluster.this[0].arn",
          "aws_eks_cluster.this[0]",
          "aws_eks_cluster.this"
         ]
        }
       },
       "cluster_certificate_authority_data": {
        "description": "Base64 encoded certificate data required to communicate with the cluster",
        "expression": {
         "references": [
          "aws_eks_cluster.this[0].certificate_authority[0].data",
          "aws_eks_cluster.this[0].certificate_authority[0]",
          "aws_eks_cluster.this[0].certificate_authority",
          "aws_eks_cluster.this[0]",
          "aws_eks_cluster.this"
         ]
        }
       },
       "cluster_endpoint": {
        "description": "Endpoint for your Kubernetes API server",
        "expression": {
         "references": [
          "aws_eks_cluster.this[0].endpoint",
          "aws_eks_cluster.this[0]",
          "aws_eks_cluster.this"
         ]
        }
       },
       "cluster_iam_role_arn": {
        "description": "IAM role ARN of the EKS cluster",
        "expression": {
         "references": [
          "aws_iam_role.this[0].arn",
          "aws_iam_role.this[0]",
          "aws_iam_role.this"
         ]
        }
       },
       "cluster_iam_role_name": {
        "description": "IAM role name of the EKS cluster",
        "expression": {
         "references": [
          "aws_iam_role.this[0].name",
          "aws_iam_role.this[0]",
          "aws_iam_role.this"
         ]
        }
       },
       "cluster_iam_role_unique_id": {
        "description": "Stable and unique string identifying the IAM role",
        "expression": {
         "references": [
          "aws_iam_role.this[0].unique_id",
          "aws_iam_role.this[0]",
          "aws_iam_role.this"
         ]
        }
       },
       "cluster_id": {
        "description": "The name/id of the EKS cluster. Will block on cluster creation until the cluster is really ready",
        "expression": {
         "references": [
          "aws_eks_cluster.this[0].id",
          "aws_eks_cluster.this[0]",
          "aws_eks_cluster.this"
         ]
        }
       },
       "cluster_identity_providers": {
        "description": "Map of attribute maps for all EKS identity providers enabled",
        "expression": {
         "references": [
          "aws_eks_identity_provider_config.this"
         ]
        }
       },
       "cluster_oidc_issuer_url": {
        "description": "The URL on the EKS cluster for the OpenID Connect identity provider",
        "expression": {
         "references": [
          "aws_eks_cluster.this[0].identity[0].oidc[0].issuer",
          "aws_eks_cluster.this[0].identity[0].oidc[0]",
          "aws_eks_cluster.this[0].identity[0].oidc",
          "aws_eks_cluster.this[0].identity[0]",
          "aws_eks_cluster.this[0].identity",
          "aws_eks_cluster.this[0]",
          "aws_eks_cluster.this"
         ]
        }
       },
       "cluster_platform_version": {
        "description": "Platform version for the cluster",
        "expression": {
         "references": [
          "aws_eks_cluster.this[0].platform_version",
          "aws_eks_cluster.this[0]",
          "aws_eks_cluster.this"
         ]
        }
       },
       "cluster_primary_security_group_id": {
        "description": "Cluster security group that was created by Amazon EKS for the cluster. Managed node groups use this security group for control-plane-to-data-plane communication. Referred to as 'Cluster security group' in the EKS console",
        "expression": {
         "references": [
          "aws_eks_cluster.this[0].vpc_config[0].cluster_security_group_id",
          "aws_eks_cluster.this[0].vpc_config[0]",
          "aws_eks_cluster.this[0].vpc_config",
          "aws_eks_cluster.this[0]",
          "aws_eks_cluster.this"
         ]
        }
       },
       "cluster_security_group_arn": {
        "description": "Amazon Resource Name (ARN) of the cluster security group",
        "expression": {
         "references": [
          "aws_security_group.cluster[0].arn",
          "aws_security_group.cluster[0]",
          "aws_security_group.cluster"
         ]
        }
       },
       "cluster_security_group_id": {
        "description": "ID of the cluster security group",
        "expression": {
         "references": [
          "aws_security_group.cluster[0].id",
          "aws_security_group.cluster[0]",
          "aws_security_group.cluster"
         ]
        }
       },
       "cluster_status": {
        "description": "Status of the EKS cluster. One of `CREATING`, `ACTIVE`, `DELETING`, `FAILED`",
        "expression": {
         "references": [
          "aws_eks_cluster.this[0].status",
          "aws_eks_cluster.this[0]",
          "aws_eks_cluster.this"
         ]
        }
       },
       "cluster_tls_certificate_sha1_fingerprint": {
        "description": "The SHA1 fingerprint of the public key of the cluster's certificate",
        "expression": {
         "references": [
          "data.tls_certificate.this[0].certificates[0].sha1_fingerprint",
          "data.tls_certificate.this[0].certificates[0]",
          "data.tls_certificate.this[0].certificates",
          "data.tls_certificate.this[0]",
          "data.tls_certificate.this"
         ]
        }
       },
       "cluster_version": {
        "description": "The Kubernetes version for the cluster",
        "expression": {
         "references": [
          "aws_eks_cluster.this[0].version",
          "aws_eks_cluster.this[0]",
          "aws_eks_cluster.this"
         ]
        }
       },
       "eks_managed_node_groups": {
        "description": "Map of attribute maps for all EKS managed node groups created",
        "expression": {
         "references": [
          "module.eks_managed_node_group"
         ]
        }
       },
       "eks_managed_node_groups_autoscaling_group_names": {
        "description": "List of the autoscaling group names created by EKS managed node groups",
        "expression": {
         "references": [
          "module.eks_managed_node_group"
         ]
        }
       },
       "fargate_profiles": {
        "description": "Map of attribute maps for all EKS Fargate Profiles created",
        "expression": {
         "references": [
          "module.fargate_profile"
         ]
        }
       },
       "kms_key_arn": {
        "description": "The Amazon Resource Name (ARN) of the key",
        "expression": {
         "references": [
          "module.kms.key_arn",
          "module.kms"
         ]
        }
       },
       "kms_key_id": {
        "description": "The globally unique identifier for the key",
        "expression": {
         "references": [
          "module.kms.key_id",
          "module.kms"
         ]
        }
       },
       "kms_key_policy": {
        "description": "The IAM resource policy set on the key",
        "expression": {
         "references": [
          "module.kms.key_policy",
          "module.kms"
         ]
        }
       },
       "node_security_group_arn": {
        "description": "Amazon Resource Name (ARN) of the node shared security group",
        "expression": {
         "references": [
          "aws_security_group.node[0].arn",
          "aws_security_group.node[0]",
          "aws_security_group.node"
         ]
        }
       },
       "node_security_group_id": {
        "description": "ID of the node shared security group",
        "expression": {
         "references": [
          "aws_security_group.node[0].id",
          "aws_security_group.node[0]",
          "aws_security_group.node"
         ]
        }
       },
       "oidc_provider": {
        "description": "The OpenID Connect identity provider (issuer URL without leading `https://`)",
        "expression": {
         "references": [
          "aws_eks_cluster.this[0].identity[0].oidc[0].issuer",
          "aws_eks_cluster.this[0].identity[0].oidc[0]",
          "aws_eks_cluster.this[0].identity[0].oidc",
          "aws_eks_cluster.this[0].identity[0]",
          "aws_eks_cluster.this[0].identity",
          "aws_eks_cluster.this[0]",
          "aws_eks_cluster.this"
         ]
        }
       },
       "oidc_provider_arn": {
        "description": "The ARN of the OIDC Provider if `enable_irsa = true`",
        "expression": {
         "references": [
          "aws_iam_openid_connect_provider.oidc_provider[0].arn",
          "aws_iam_openid_connect_provider.oidc_provider[0]",
          "aws_iam_openid_connect_provider.oidc_provider"
         ]
        }
       },
       "self_managed_node_groups": {
        "description": "Map of attribute maps for all self managed node groups created",
        "expression": {
         "references": [
          "module.self_managed_node_group"
         ]
        }
       },
       "self_managed_node_groups_autoscaling_group_names": {
        "description": "List of the autoscaling group names created by self-managed node groups",
        "expression": {
         "references": [
          "module.self_managed_node_group"
         ]
        }
       }
      },
      "resources": [
       {
        "address": "aws_cloudwatch_log_group.this",
        "count_expression": {
         "references": [
          "local.create",
          "var.create_cloudwatch_log_group"
         ]
        },
        "expressions": {
         "kms_key_id": {
          "references": [
           "var.cloudwatch_log_group_kms_key_id"
          ]
         },
         "name": {
          "references": [
           "var.cluster_name"
          ]
         },
         "retention_in_days": {
          "references": [
           "var.cloudwatch_log_group_retention_in_days"
          ]
         },
         "tags": {
          "references": [
           "var.tags"
          ]
         }
        },
        "mode": "managed",
        "name": "this",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_cloudwatch_log_group"
       },
       {
        "address": "aws_ec2_tag.cluster_primary_security_group",
        "expressions": {
         "key": {
          "references": [
           "each.key"
          ]
         },
         "resource_id": {
          "references": [
           "aws_eks_cluster.this[0].vpc_config[0].cluster_security_group_id",
           "aws_eks_cluster.this[0].vpc_config[0]",
           "aws_eks_cluster.this[0].vpc_config",
           "aws_eks_cluster.this[0]",
           "aws_eks_cluster.this"
          ]
         },
         "value": {
          "references": [
           "each.value"
          ]
         }
        },
        "for_each_expression": {
         "references": [
          "var.tags",
          "var.cluster_tags",
          "data.aws_default_tags.current.tags",
          "data.aws_default_tags.current",
          "local.create",
          "var.create_cluster_primary_security_group_tags"
         ]
        },
        "mode": "managed",
        "name": "cluster_primary_security_group",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_ec2_tag"
       },
       {
        "address": "aws_eks_addon.this",
        "depends_on": [
         "module.fargate_profile",
         "module.eks_managed_node_group",
         "module.self_managed_node_group"
        ],
        "expressions": {
         "addon_name": {
          "references": [
           "each.value.name",
           "each.value",
           "each.key"
          ]
         },
         "addon_version": {
          "references": [
           "each.value"
          ]
         },
         "cluster_name": {
          "references": [
           "aws_eks_cluster.this[0].name",
           "aws_eks_cluster.this[0]",
           "aws_eks_cluster.this"
          ]
         },
         "resolve_conflicts": {
          "references": [
           "each.value"
          ]
         },
         "service_account_role_arn": {
          "references": [
           "each.value"
          ]
         },
         "tags": {
          "references": [
           "var.tags"
          ]
         }
        },
        "for_each_expression": {
         "references": [
          "var.cluster_addons",
          "local.create"
         ]
        },
        "mode": "managed",
        "name": "this",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_eks_addon"
       },
       {
        "address": "aws_eks_cluster.this",
        "count_expression": {
         "references": [
          "local.create"
         ]
        },
        "depends_on": [
         "aws_iam_role_policy_attachment.this",
         "aws_security_group_rule.cluster",
         "aws_security_group_rule.node",
         "aws_cloudwatch_log_group.this"
        ],
        "expressions": {
         "enabled_cluster_log_types": {
          "references": [
           "var.cluster_enabled_log_types"
          ]
         },
         "kubernetes_network_config": [
          {
           "ip_family": {
            "references": [
             "var.cluster_ip_family"
            ]
           },
           "service_ipv4_cidr": {
            "references": [
             "var.cluster_service_ipv4_cidr"
            ]
           }
          }
         ],
         "name": {
          "references": [
           "var.cluster_name"
          ]
         },
         "role_arn": {
          "references": [
           "local.cluster_role"
          ]
         },
         "tags": {
          "references": [
           "var.tags",
           "var.cluster_tags"
          ]
         },
         "timeouts": {
          "create": {
           "references": [
            "var.cluster_timeouts"
           ]
          },
          "delete": {
           "references": [
            "var.cluster_timeouts"
           ]
          },
          "update": {
           "references": [
            "var.cluster_timeouts"
           ]
          }
         },
         "version": {
          "references": [
           "var.cluster_version"
          ]
         },
         "vpc_config": [
          {
           "endpoint_private_access": {
            "references": [
             "var.cluster_endpoint_private_access"
            ]
           },
           "endpoint_public_access": {
            "references": [
             "var.cluster_endpoint_public_access"
            ]
           },
           "public_access_cidrs": {
            "references": [
             "var.cluster_endpoint_public_access_cidrs"
            ]
           },
           "security_group_ids": {
            "references": [
             "var.cluster_additional_security_group_ids",
             "local.cluster_security_group_id"
            ]
           },
           "subnet_ids": {
            "references": [
             "var.control_plane_subnet_ids",
             "var.subnet_ids"
            ]
           }
          }
         ]
        },
        "mode": "managed",
        "name": "this",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_eks_cluster"
       },
       {
        "address": "aws_eks_identity_provider_config.this",
        "expressions": {
         "cluster_name": {
          "references": [
           "aws_eks_cluster.this[0].name",
           "aws_eks_cluster.this[0]",
           "aws_eks_cluster.this"
          ]
         },
         "oidc": [
          {
           "client_id": {
            "references": [
             "each.value.client_id",
             "each.value"
            ]
           },
           "groups_claim": {
            "references": [
             "each.value"
            ]
           },
           "groups_prefix": {
            "references": [
             "each.value"
            ]
           },
           "identity_provider_config_name": {
            "references": [
             "each.value.identity_provider_config_name",
             "each.value",
             "each.key"
            ]
           },
           "issuer_url": {
            "references": [
             "each.value.issuer_url",
             "each.value",
             "aws_eks_cluster.this[0].identity[0].oidc[0].issuer",
             "aws_eks_cluster.this[0].identity[0].oidc[0]",
             "aws_eks_cluster.this[0].identity[0].oidc",
             "aws_eks_cluster.this[0].identity[0]",
             "aws_eks_cluster.this[0].identity",
             "aws_eks_cluster.this[0]",
             "aws_eks_cluster.this"
            ]
           },
           "required_claims": {
            "references": [
             "each.value"
            ]
           },
           "username_claim": {
            "references": [
             "each.value"
            ]
           },
           "username_prefix": {
            "references": [
             "each.value"
            ]
           }
          }
         ],
         "tags": {
          "references": [
           "var.tags"
          ]
         }
        },
        "for_each_expression": {
         "references": [
          "var.cluster_identity_providers",
          "local.create"
         ]
        },
        "mode": "managed",
        "name": "this",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_eks_identity_provider_config"
       },
       {
        "address": "aws_iam_openid_connect_provider.oidc_provider",
        "count_expression": {
         "references": [
          "local.create",
          "var.enable_irsa"
         ]
        },
        "expressions": {
         "client_id_list": {
          "references": [
           "local.dns_suffix",
           "var.openid_connect_audiences"
          ]
         },
         "tags": {
          "references": [
           "var.cluster_name",
           "var.tags"
          ]
         },
         "thumbprint_list": {
          "references": [
           "data.tls_certificate.this[0].certificates[0].sha1_fingerprint",
           "data.tls_certificate.this[0].certificates[0]",
           "data.tls_certificate.this[0].certificates",
           "data.tls_certificate.this[0]",
           "data.tls_certificate.this",
           "var.custom_oidc_thumbprints"
          ]
         },
         "url": {
          "references": [
           "aws_eks_cluster.this[0].identity[0].oidc[0].issuer",
           "aws_eks_cluster.this[0].identity[0].oidc[0]",
           "aws_eks_cluster.this[0].identity[0].oidc",
           "aws_eks_cluster.this[0].identity[0]",
           "aws_eks_cluster.this[0].identity",
           "aws_eks_cluster.this[0]",
           "aws_eks_cluster.this"
          ]
         }
        },
        "mode": "managed",
        "name": "oidc_provider",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_iam_openid_connect_provider"
       },
       {
        "address": "aws_iam_policy.cluster_encryption",
        "count_expression": {
         "references": [
          "local.create_iam_role",
          "var.attach_cluster_encryption_policy",
          "var.cluster_encryption_config"
         ]
        },
        "expressions": {
         "description": {
          "references": [
           "var.cluster_encryption_policy_description"
          ]
         },
         "name": {
          "references": [
           "var.cluster_encryption_policy_use_name_prefix",
           "local.cluster_encryption_policy_name"
          ]
         },
         "name_prefix": {
          "references": [
           "var.cluster_encryption_policy_use_name_prefix",
           "local.cluster_encryption_policy_name"
          ]
         },
         "path": {
          "references": [
           "var.cluster_encryption_policy_path"
          ]
         },
         "policy": {
          "references": [
           "var.create_kms_key",
           "module.kms.key_arn",
           "module.kms",
           "var.cluster_encryption_config"
          ]
         },
         "tags": {
          "references": [
           "var.tags",
           "var.cluster_encryption_policy_tags"
          ]
         }
        },
        "mode": "managed",
        "name": "cluster_encryption",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_iam_policy"
       },
       {
        "address": "aws_iam_policy.cni_ipv6_policy",
        "count_expression": {
         "references": [
          "var.create",
          "var.create_cni_ipv6_iam_policy"
         ]
        },
        "expressions": {
         "description": {
          "constant_value": "IAM policy for EKS CNI to assign IPV6 addresses"
         },
         "name": {
          "constant_value": "AmazonEKS_CNI_IPv6_Policy"
         },
         "policy": {
          "references": [
           "data.aws_iam_policy_document.cni_ipv6_policy[0].json",
           "data.aws_iam_policy_document.cni_ipv6_policy[0]",
           "data.aws_iam_policy_document.cni_ipv6_policy"
          ]
         },
         "tags": {
          "references": [
           "var.tags"
          ]
         }
        },
        "mode": "managed",
        "name": "cni_ipv6_policy",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_iam_policy"
       },
       {
        "address": "aws_iam_role.this",
        "count_expression": {
         "references": [
          "local.create_iam_role"
         ]
        },
        "expressions": {
         "assume_role_policy": {
          "references": [
           "data.aws_iam_policy_document.assume_role_policy[0].json",
           "data.aws_iam_policy_document.assume_role_policy[0]",
           "data.aws_iam_policy_document.assume_role_policy"
          ]
         },
         "description": {
          "references": [
           "var.iam_role_description"
          ]
         },
         "force_detach_policies": {
          "constant_value": true
         },
         "name": {
          "references": [
           "var.iam_role_use_name_prefix",
           "local.iam_role_name"
          ]
         },
         "name_prefix": {
          "references": [
           "var.iam_role_use_name_prefix",
           "local.iam_role_name",
           "var.prefix_separator"
          ]
         },
         "path": {
          "references": [
           "var.iam_role_path"
          ]
         },
         "permissions_boundary": {
          "references": [
           "var.iam_role_permissions_boundary"
          ]
         },
         "tags": {
          "references": [
           "var.tags",
           "var.iam_role_tags"
          ]
         }
        },
        "mode": "managed",
        "name": "this",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_iam_role"
       },
       {
        "address": "aws_iam_role_policy_attachment.cluster_encryption",
        "count_expression": {
         "references": [
          "local.create_iam_role",
          "var.attach_cluster_encryption_policy",
          "var.cluster_encryption_config"
         ]
        },
        "expressions": {
         "policy_arn": {
          "references": [
           "aws_iam_policy.cluster_encryption[0].arn",
           "aws_iam_policy.cluster_encryption[0]",
           "aws_iam_policy.cluster_encryption"
          ]
         },
         "role": {
          "references": [
           "aws_iam_role.this[0].name",
           "aws_iam_role.this[0]",
           "aws_iam_role.this"
          ]
         }
        },
        "mode": "managed",
        "name": "cluster_encryption",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_iam_role_policy_attachment"
       },
       {
        "address": "aws_iam_role_policy_attachment.this",
        "expressions": {
         "policy_arn": {
          "references": [
           "each.value"
          ]
         },
         "role": {
          "references": [
           "aws_iam_role.this[0].name",
           "aws_iam_role.this[0]",
           "aws_iam_role.this"
          ]
         }
        },
        "for_each_expression": {
         "references": [
          "local.create_iam_role",
          "local.policy_arn_prefix",
          "local.policy_arn_prefix",
          "var.iam_role_additional_policies"
         ]
        },
        "mode": "managed",
        "name": "this",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_iam_role_policy_attachment"
       },
       {
        "address": "aws_security_group.cluster",
        "count_expression": {
         "references": [
          "local.create_cluster_sg"
         ]
        },
        "expressions": {
         "description": {
          "references": [
           "var.cluster_security_group_description"
          ]
         },
         "name": {
          "references": [
           "var.cluster_security_group_use_name_prefix",
           "local.cluster_sg_name"
          ]
         },
         "name_prefix": {
          "references": [
           "var.cluster_security_group_use_name_prefix",
           "local.cluster_sg_name",
           "var.prefix_separator"
          ]
         },
         "tags": {
          "references": [
           "var.tags",
           "local.cluster_sg_name",
           "var.cluster_security_group_tags"
          ]
         },
         "vpc_id": {
          "references": [
           "var.vpc_id"
          ]
         }
        },
        "mode": "managed",
        "name": "cluster",
        "provider_config_key": "aws",
        "schema_version": 1,
        "type": "aws_security_group"
       },
       {
        "address": "aws_security_group.node",
        "count_expression": {
         "references": [
          "local.create_node_sg"
         ]
        },
        "expressions": {
         "description": {
          "references": [
           "var.node_security_group_description"
          ]
         },
         "name": {
          "references": [
           "var.node_security_group_use_name_prefix",
           "local.node_sg_name"
          ]
         },
         "name_prefix": {
          "references": [
           "var.node_security_group_use_name_prefix",
           "local.node_sg_name",
           "var.prefix_separator"
          ]
         },
         "tags": {
          "references": [
           "var.tags",
           "local.node_sg_name",
           "var.cluster_name",
           "var.node_security_group_tags"
          ]
         },
         "vpc_id": {
          "references": [
           "var.vpc_id"
          ]
         }
        },
        "mode": "managed",
        "name": "node",
        "provider_config_key": "aws",
        "schema_version": 1,
        "type": "aws_security_group"
       },
       {
        "address": "aws_security_group_rule.cluster",
        "expressions": {
         "cidr_blocks": {
          "references": [
           "each.value.cidr_blocks",
           "each.value"
          ]
         },
         "description": {
          "references": [
           "each.value.description",
           "each.value"
          ]
         },
         "from_port": {
          "references": [
           "each.value.from_port",
           "each.value"
          ]
         },
         "ipv6_cidr_blocks": {
          "references": [
           "each.value.ipv6_cidr_blocks",
           "each.value"
          ]
         },
         "prefix_list_ids": {
          "references": [
           "each.value.prefix_list_ids",
           "each.value"
          ]
         },
         "protocol": {
          "references": [
           "each.value.protocol",
           "each.value"
          ]
         },
         "security_group_id": {
          "references": [
           "aws_security_group.cluster[0].id",
           "aws_security_group.cluster[0]",
           "aws_security_group.cluster"
          ]
         },
         "self": {
          "references": [
           "each.value.self",
           "each.value"
          ]
         },
         "source_security_group_id": {
          "references": [
           "each.value.source_security_group_id",
           "each.value",
           "each.value.source_node_security_group",
           "each.value",
           "local.node_security_group_id"
          ]
         },
         "to_port": {
          "references": [
           "each.value.to_port",
           "each.value"
          ]
         },
         "type": {
          "references": [
           "each.value.type",
           "each.value"
          ]
         }
        },
        "for_each_expression": {
         "references": [
          "local.cluster_security_group_rules",
          "var.cluster_security_group_additional_rules",
          "local.create_cluster_sg"
         ]
        },
        "mode": "managed",
        "name": "cluster",
        "provider_config_key": "aws",
        "schema_version": 2,
        "type": "aws_security_group_rule"
       },
       {
        "address": "aws_security_group_rule.node",
        "expressions": {
         "cidr_blocks": {
          "references": [
           "each.value.cidr_blocks",
           "each.value"
          ]
         },
         "description": {
          "references": [
           "each.value.description",
           "each.value"
          ]
         },
         "from_port": {
          "references": [
           "each.value.from_port",
           "each.value"
          ]
         },
         "ipv6_cidr_blocks": {
          "references": [
           "each.value.ipv6_cidr_blocks",
           "each.value"
          ]
         },
         "prefix_list_ids": {
          "references": [
           "each.value.prefix_list_ids",
           "each.value"
          ]
         },
         "protocol": {
          "references": [
           "each.value.protocol",
           "each.value"
          ]
         },
         "security_group_id": {
          "references": [
           "aws_security_group.node[0].id",
           "aws_security_group.node[0]",
           "aws_security_group.node"
          ]
         },
         "self": {
          "references": [
           "each.value.self",
           "each.value"
          ]
         },
         "source_security_group_id": {
          "references": [
           "each.value.source_security_group_id",
           "each.value",
           "each.value.source_cluster_security_group",
           "each.value",
           "local.cluster_security_group_id"
          ]
         },
         "to_port": {
          "references": [
           "each.value.to_port",
           "each.value"
          ]
         },
         "type": {
          "references": [
           "each.value.type",
           "each.value"
          ]
         }
        },
        "for_each_expression": {
         "references": [
          "local.node_security_group_rules",
          "var.node_security_group_additional_rules",
          "local.create_node_sg"
         ]
        },
        "mode": "managed",
        "name": "node",
        "provider_config_key": "aws",
        "schema_version": 2,
        "type": "aws_security_group_rule"
       },
       {
        "address": "kubernetes_config_map.aws_auth",
        "count_expression": {
         "references": [
          "var.create",
          "var.create_aws_auth_configmap"
         ]
        },
        "expressions": {
         "data": {
          "references": [
           "local.aws_auth_configmap_data"
          ]
         },
         "metadata": [
          {
           "name": {
            "constant_value": "aws-auth"
           },
           "namespace": {
            "constant_value": "kube-system"
           }
          }
         ]
        },
        "mode": "managed",
        "name": "aws_auth",
        "provider_config_key": "kubernetes",
        "schema_version": 0,
        "type": "kubernetes_config_map"
       },
       {
        "address": "kubernetes_config_map_v1_data.aws_auth",
        "count_expression": {
         "references": [
          "var.create",
          "var.manage_aws_auth_configmap"
         ]
        },
        "depends_on": [
         "kubernetes_config_map.aws_auth"
        ],
        "expressions": {
         "data": {
          "references": [
           "local.aws_auth_configmap_data"
          ]
         },
         "force": {
          "constant_value": true
         },
         "metadata": [
          {
           "name": {
            "constant_value": "aws-auth"
           },
           "namespace": {
            "constant_value": "kube-system"
           }
          }
         ]
        },
        "mode": "managed",
        "name": "aws_auth",
        "provider_config_key": "kubernetes",
        "schema_version": 0,
        "type": "kubernetes_config_map_v1_data"
       },
       {
        "address": "data.aws_caller_identity.current",
        "mode": "data",
        "name": "current",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_caller_identity"
       },
       {
        "address": "data.aws_default_tags.current",
        "mode": "data",
        "name": "current",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_default_tags"
       },
       {
        "address": "data.aws_iam_policy_document.assume_role_policy",
        "count_expression": {
         "references": [
          "local.create",
          "var.create_iam_role"
         ]
        },
        "expressions": {
         "statement": [
          {
           "actions": {
            "constant_value": [
             "sts:AssumeRole"
            ]
           },
           "principals": [
            {
             "identifiers": {
              "references": [
               "local.dns_suffix"
              ]
             },
             "type": {
              "constant_value": "Service"
             }
            }
           ],
           "sid": {
            "constant_value": "EKSClusterAssumeRole"
           }
          }
         ]
        },
        "mode": "data",
        "name": "assume_role_policy",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_iam_policy_document"
       },
       {
        "address": "data.aws_iam_policy_document.cni_ipv6_policy",
        "count_expression": {
         "references": [
          "var.create",
          "var.create_cni_ipv6_iam_policy"
         ]
        },
        "expressions": {
         "statement": [
          {
           "actions": {
            "constant_value": [
             "ec2:AssignIpv6Addresses",
             "ec2:DescribeInstances",
             "ec2:DescribeTags",
             "ec2:DescribeNetworkInterfaces",
             "ec2:DescribeInstanceTypes"
            ]
           },
           "resources": {
            "constant_value": [
             "*"
            ]
           },
           "sid": {
            "constant_value": "AssignDescribe"
           }
          },
          {
           "actions": {
            "constant_value": [
             "ec2:CreateTags"
            ]
           },
           "resources": {
            "references": [
             "data.aws_partition.current.partition",
             "data.aws_partition.current"
            ]
           },
           "sid": {
            "constant_value": "CreateTags"
           }
          }
         ]
        },
        "mode": "data",
        "name": "cni_ipv6_policy",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_iam_policy_document"
       },
       {
        "address": "data.aws_partition.current",
        "mode": "data",
        "name": "current",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_partition"
       },
       {
        "address": "data.tls_certificate.this",
        "count_expression": {
         "references": [
          "local.create",
          "var.enable_irsa"
         ]
        },
        "expressions": {
         "url": {
          "references": [
           "aws_eks_cluster.this[0].identity[0].oidc[0].issuer",
           "aws_eks_cluster.this[0].identity[0].oidc[0]",
           "aws_eks_cluster.this[0].identity[0].oidc",
           "aws_eks_cluster.this[0].identity[0]",
           "aws_eks_cluster.this[0].identity",
           "aws_eks_cluster.this[0]",
           "aws_eks_cluster.this"
          ]
         }
        },
        "mode": "data",
        "name": "this",
        "provider_config_key": "module.eks:tls",
        "schema_version": 0,
        "type": "tls_certificate"
       }
      ],
      "variables": {
       "attach_cluster_encryption_policy": {
        "default": true,
        "description": "Indicates whether or not to attach an additional policy for the cluster IAM role to utilize the encryption key provided"
       },
       "aws_auth_accounts": {
        "default": [],
        "description": "List of account maps to add to the aws-auth configmap"
       },
       "aws_auth_fargate_profile_pod_execution_role_arns": {
        "default": [],
        "description": "List of Fargate profile pod execution role ARNs to add to the aws-auth configmap"
       },
       "aws_auth_node_iam_role_arns_non_windows": {
        "default": [],
        "description": "List of non-Windows based node IAM role ARNs to add to the aws-auth configmap"
       },
       "aws_auth_node_iam_role_arns_windows": {
        "default": [],
        "description": "List of Windows based node IAM role ARNs to add to the aws-auth configmap"
       },
       "aws_auth_roles": {
        "default": [],
        "description": "List of role maps to add to the aws-auth configmap"
       },
       "aws_auth_users": {
        "default": [],
        "description": "List of user maps to add to the aws-auth configmap"
       },
       "cloudwatch_log_group_kms_key_id": {
        "default": null,
        "description": "If a KMS Key ARN is set, this key will be used to encrypt the corresponding log group. Please be sure that the KMS Key has an appropriate key policy (https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/encrypt-log-data-kms.html)"
       },
       "cloudwatch_log_group_retention_in_days": {
        "default": 90,
        "description": "Number of days to retain log events. Default retention - 90 days"
       },
       "cluster_additional_security_group_ids": {
        "default": [],
        "description": "List of additional, externally created security group IDs to attach to the cluster control plane"
       },
       "cluster_addons": {
        "default": {},
        "description": "Map of cluster addon configurations to enable for the cluster. Addon name can be the map keys or set with `name`"
       },
       "cluster_enabled_log_types": {
        "default": [
         "audit",
         "api",
         "authenticator"
        ],
        "description": "A list of the desired control plane logs to enable. For more information, see Amazon EKS Control Plane Logging documentation (https://docs.aws.amazon.com/eks/latest/userguide/control-plane-logs.html)"
       },
       "cluster_encryption_config": {
        "default": [],
        "description": "Configuration block with encryption configuration for the cluster"
       },
       "cluster_encryption_policy_description": {
        "default": "Cluster encryption policy to allow cluster role to utilize CMK provided",
        "description": "Description of the cluster encryption policy created"
       },
       "cluster_encryption_policy_name": {
        "default": null,
        "description": "Name to use on cluster encryption policy created"
       },
       "cluster_encryption_policy_path": {
        "default": null,
        "description": "Cluster encryption policy path"
       },
       "cluster_encryption_policy_tags": {
        "default": {},
        "description": "A map of additional tags to add to the cluster encryption policy created"
       },
       "cluster_encryption_policy_use_name_prefix": {
        "default": true,
        "description": "Determines whether cluster encryption policy name (`cluster_encryption_policy_name`) is used as a prefix"
       },
       "cluster_endpoint_private_access": {
        "default": false,
        "description": "Indicates whether or not the Amazon EKS private API server endpoint is enabled"
       },
       "cluster_endpoint_public_access": {
        "default": true,
        "description": "Indicates whether or not the Amazon EKS public API server endpoint is enabled"
       },
       "cluster_endpoint_public_access_cidrs": {
        "default": [
         "0.0.0.0/0"
        ],
        "description": "List of CIDR blocks which can access the Amazon EKS public API server endpoint"
       },
       "cluster_iam_role_dns_suffix": {
        "default": null,
        "description": "Base DNS domain name for the current partition (e.g., amazonaws.com in AWS Commercial, amazonaws.com.cn in AWS China)"
       },
       "cluster_identity_providers": {
        "default": {},
        "description": "Map of cluster identity provider configurations to enable for the cluster. Note - this is different/separate from IRSA"
       },
       "cluster_ip_family": {
        "default": null,
        "description": "The IP family used to assign Kubernetes pod and service addresses. Valid values are `ipv4` (default) and `ipv6`. You can only specify an IP family when you create a cluster, changing this value will force a new cluster to be created"
       },
       "cluster_name": {
        "default": "",
        "description": "Name of the EKS cluster"
       },
       "cluster_security_group_additional_rules": {
        "default": {},
        "description": "List of additional security group rules to add to the cluster security group created. Set `source_node_security_group = true` inside rules to set the `node_security_group` as source"
       },
       "cluster_security_group_description": {
        "default": "EKS cluster security group",
        "description": "Description of the cluster security group created"
       },
       "cluster_security_group_id": {
        "default": "",
        "description": "Existing security group ID to be attached to the cluster. Required if `create_cluster_security_group` = `false`"
       },
       "cluster_security_group_name": {
        "default": null,
        "description": "Name to use on cluster security group created"
       },
       "cluster_security_group_tags": {
        "default": {},
        "description": "A map of additional tags to add to the cluster security group created"
       },
       "cluster_security_group_use_name_prefix": {
        "default": true,
        "description": "Determines whether cluster security group name (`cluster_security_group_name`) is used as a prefix"
       },
       "cluster_service_ipv4_cidr": {
        "default": null,
        "description": "The CIDR block to assign Kubernetes service IP addresses from. If you don't specify a block, Kubernetes assigns addresses from either the 10.100.0.0/16 or 172.20.0.0/16 CIDR blocks"
       },
       "cluster_tags": {
        "default": {},
        "description": "A map of additional tags to add to the cluster"
       },
       "cluster_timeouts": {
        "default": {},
        "description": "Create, update, and delete timeout configurations for the cluster"
       },
       "cluster_version": {
        "default": null,
        "description": "Kubernetes `\u003cmajor\u003e.\u003cminor\u003e` version to use for the EKS cluster (i.e.: `1.22`)"
       },
       "control_plane_subnet_ids": {
        "default": [],
        "description": "A list of subnet IDs where the EKS cluster control plane (ENIs) will be provisioned. Used for expanding the pool of subnets used by nodes/node groups without replacing the EKS control plane"
       },
       "create": {
        "default": true,
        "description": "Controls if EKS resources should be created (affects nearly all resources)"
       },
       "create_aws_auth_configmap": {
        "default": false,
        "description": "Determines whether to create the aws-auth configmap. NOTE - this is only intended for scenarios where the configmap does not exist (i.e. - when using only self-managed node groups). Most users should use `manage_aws_auth_configmap`"
       },
       "create_cloudwatch_log_group": {
        "default": true,
        "description": "Determines whether a log group is created by this module for the cluster logs. If not, AWS will automatically create one if logging is enabled"
       },
       "create_cluster_primary_security_group_tags": {
        "default": true,
        "description": "Indicates whether or not to tag the cluster's primary security group. This security group is created by the EKS service, not the module, and therefore tagging is handled after cluster creation"
       },
       "create_cluster_security_group": {
        "default": true,
        "description": "Determines if a security group is created for the cluster or use the existing `cluster_security_group_id`"
       },
       "create_cni_ipv6_iam_policy": {
        "default": false,
        "description": "Determines whether to create an [`AmazonEKS_CNI_IPv6_Policy`](https://docs.aws.amazon.com/eks/latest/userguide/cni-iam-role.html#cni-iam-role-create-ipv6-policy)"
       },
       "create_iam_role": {
        "default": true,
        "description": "Determines whether a an IAM role is created or to use an existing IAM role"
       },
       "create_kms_key": {
        "default": false,
        "description": "Controls if a KMS key for cluster encryption should be created"
       },
       "create_node_security_group": {
        "default": true,
        "description": "Determines whether to create a security group for the node groups or use the existing `node_security_group_id`"
       },
       "custom_oidc_thumbprints": {
        "default": [],
        "description": "Additional list of server certificate thumbprints for the OpenID Connect (OIDC) identity provider's server certificate(s)"
       },
       "eks_managed_node_group_defaults": {
        "default": {},
        "description": "Map of EKS managed node group default configurations"
       },
       "eks_managed_node_groups": {
        "default": {},
        "description": "Map of EKS managed node group definitions to create"
       },
       "enable_irsa": {
        "default": true,
        "description": "Determines whether to create an OpenID Connect Provider for EKS to enable IRSA"
       },
       "enable_kms_key_rotation": {
        "default": true,
        "description": "Specifies whether key rotation is enabled. Defaults to `true`"
       },
       "fargate_profile_defaults": {
        "default": {},
        "description": "Map of Fargate Profile default configurations"
       },
       "fargate_profiles": {
        "default": {},
        "description": "Map of Fargate Profile definitions to create"
       },
       "iam_role_additional_policies": {
        "default": [],
        "description": "Additional policies to be added to the IAM role"
       },
       "iam_role_arn": {
        "default": null,
        "description": "Existing IAM role ARN for the cluster. Required if `create_iam_role` is set to `false`"
       },
       "iam_role_description": {
        "default": null,
        "description": "Description of the role"
       },
       "iam_role_name": {
        "default": null,
        "description": "Name to use on IAM role created"
       },
       "iam_role_path": {
        "default": null,
        "description": "Cluster IAM role path"
       },
       "iam_role_permissions_boundary": {
        "default": null,
        "description": "ARN of the policy that is used to set the permissions boundary for the IAM role"
       },
       "iam_role_tags": {
        "default": {},
        "description": "A map of additional tags to add to the IAM role created"
       },
       "iam_role_use_name_prefix": {
        "default": true,
        "description": "Determines whether the IAM role name (`iam_role_name`) is used as a prefix"
       },
       "kms_key_administrators": {
        "default": [],
        "description": "A list of IAM ARNs for [key administrators](https://docs.aws.amazon.com/kms/latest/developerguide/key-policy-default.html#key-policy-default-allow-administrators). If no value is provided, the current caller identity is used to ensure at least one key admin is available"
       },
       "kms_key_aliases": {
        "default": [],
        "description": "A list of aliases to create. Note - due to the use of `toset()`, values must be static strings and not computed values"
       },
       "kms_key_deletion_window_in_days": {
        "default": null,
        "description": "The waiting period, specified in number of days. After the waiting period ends, AWS KMS deletes the KMS key. If you specify a value, it must be between `7` and `30`, inclusive. If you do not specify a value, it defaults to `30`"
       },
       "kms_key_description": {
        "default": null,
        "description": "The description of the key as viewed in AWS console"
       },
       "kms_key_enable_default_policy": {
        "default": false,
        "description": "Specifies whether to enable the default key policy. Defaults to `false`"
       },
       "kms_key_override_policy_documents": {
        "default": [],
        "description": "List of IAM policy documents that are merged together into the exported document. In merging, statements with non-blank `sid`s will override statements with the same `sid`"
       },
       "kms_key_owners": {
        "default": [],
        "description": "A list of IAM ARNs for those who will have full key permissions (`kms:*`)"
       },
       "kms_key_service_users": {
        "default": [],
        "description": "A list of IAM ARNs for [key service users](https://docs.aws.amazon.com/kms/latest/developerguide/key-policy-default.html#key-policy-service-integration)"
       },
       "kms_key_source_policy_documents": {
        "default": [],
        "description": "List of IAM policy documents that are merged together into the exported document. Statements must have unique `sid`s"
       },
       "kms_key_users": {
        "default": [],
        "description": "A list of IAM ARNs for [key users](https://docs.aws.amazon.com/kms/latest/developerguide/key-policy-default.html#key-policy-default-allow-users)"
       },
       "manage_aws_auth_configmap": {
        "default": false,
        "description": "Determines whether to manage the aws-auth configmap"
       },
       "node_security_group_additional_rules": {
        "default": {},
        "description": "List of additional security group rules to add to the node security group created. Set `source_cluster_security_group = true` inside rules to set the `cluster_security_group` as source"
       },
       "node_security_group_description": {
        "default": "EKS node shared security group",
        "description": "Description of the node security group created"
       },
       "node_security_group_id": {
        "default": "",
        "description": "ID of an existing security group to attach to the node groups created"
       },
       "node_security_group_name": {
        "default": null,
        "description": "Name to use on node security group created"
       },
       "node_security_group_ntp_ipv4_cidr_block": {
        "default": [
         "0.0.0.0/0"
        ],
        "description": "IPv4 CIDR block to allow NTP egress. Default is public IP space, but [Amazon Time Sync Service](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/set-time.html) can be used as well with `[\"169.254.169.123/32\"]`"
       },
       "node_security_group_ntp_ipv6_cidr_block": {
        "default": [
         "::/0"
        ],
        "description": "IPv4 CIDR block to allow NTP egress. Default is public IP space, but [Amazon Time Sync Service](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/set-time.html) can be used as well with `[\"fd00:ec2::123/128\"]`"
       },
       "node_security_group_tags": {
        "default": {},
        "description": "A map of additional tags to add to the node security group created"
       },
       "node_security_group_use_name_prefix": {
        "default": true,
        "description": "Determines whether node security group name (`node_security_group_name`) is used as a prefix"
       },
       "openid_connect_audiences": {
        "default": [],
        "description": "List of OpenID Connect audience client IDs to add to the IRSA provider"
       },
       "prefix_separator": {
        "default": "-",
        "description": "The separator to use between the prefix and the generated timestamp for resource names"
       },
       "putin_khuylo": {
        "default": true,
        "description": "Do you agree that Putin doesn't respect Ukrainian sovereignty and territorial integrity? More info: https://en.wikipedia.org/wiki/Putin_khuylo!"
       },
       "self_managed_node_group_defaults": {
        "default": {},
        "description": "Map of self-managed node group default configurations"
       },
       "self_managed_node_groups": {
        "default": {},
        "description": "Map of self-managed node group definitions to create"
       },
       "subnet_ids": {
        "default": [],
        "description": "A list of subnet IDs where the nodes/node groups will be provisioned. If `control_plane_subnet_ids` is not provided, the EKS cluster control plane (ENIs) will be provisioned in these subnets"
       },
       "tags": {
        "default": {},
        "description": "A map of tags to add to all resources"
       },
       "vpc_id": {
        "default": null,
        "description": "ID of the VPC where the cluster and its nodes will be provisioned"
       }
      }
     },
     "source": "terraform-aws-modules/eks/aws",
     "version_constraint": "18.30.3"
    },
    "eks-kubeconfig": {
     "depends_on": [
      "module.eks"
     ],
     "expressions": {
      "cluster_id": {
       "references": [
        "module.eks.cluster_id",
        "module.eks"
       ]
      }
     },
     "module": {
      "outputs": {
       "kubeconfig": {
        "description": "kubeconfig for the AWS EKS cluster",
        "expression": {
         "references": [
          "local.kubeconfig"
         ]
        }
       }
      },
      "resources": [
       {
        "address": "data.aws_eks_cluster.this",
        "expressions": {
         "name": {
          "references": [
           "var.cluster_id"
          ]
         }
        },
        "mode": "data",
        "name": "this",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_eks_cluster"
       },
       {
        "address": "data.aws_eks_cluster_auth.ephemeral",
        "expressions": {
         "name": {
          "references": [
           "var.cluster_id"
          ]
         }
        },
        "mode": "data",
        "name": "ephemeral",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_eks_cluster_auth"
       }
      ],
      "variables": {
       "cluster_id": {
        "description": "Cluster ID of the AWS EKS cluster for which kubeconfig needs to be generated"
       }
      }
     },
     "source": "hyperbadger/eks-kubeconfig/aws",
     "version_constraint": "1.0.0"
    },
    "vpc": {
     "expressions": {
      "azs": {
       "references": [
        "data.aws_availability_zones.available.names",
        "data.aws_availability_zones.available"
       ]
      },
      "cidr": {
       "constant_value": "172.16.0.0/16"
      },
      "enable_dns_hostnames": {
       "constant_value": true
      },
      "enable_nat_gateway": {
       "constant_value": true
      },
      "name": {
       "constant_value": "k8s-vpc"
      },
      "private_subnet_tags": {
       "references": [
        "local.cluster_name"
       ]
      },
      "private_subnets": {
       "constant_value": [
        "172.16.1.0/24",
        "172.16.2.0/24",
        "172.16.3.0/24"
       ]
      },
      "public_subnet_tags": {
       "references": [
        "local.cluster_name"
       ]
      },
      "public_subnets": {
       "constant_value": [
        "172.16.4.0/24",
        "172.16.5.0/24",
        "172.16.6.0/24"
       ]
      },
      "single_nat_gateway": {
       "constant_value": true
      }
     },
     "module": {
      "outputs": {
       "azs": {
        "description": "A list of availability zones specified as argument to this module",
        "expression": {
         "references": [
          "var.azs"
         ]
        }
       },
       "cgw_arns": {
        "description": "List of ARNs of Customer Gateway",
        "expression": {
         "references": [
          "aws_customer_gateway.this"
         ]
        }
       },
       "cgw_ids": {
        "description": "List of IDs of Customer Gateway",
        "expression": {
         "references": [
          "aws_customer_gateway.this"
         ]
        }
       },
       "database_internet_gateway_route_id": {
        "description": "ID of the database internet gateway route",
        "expression": {
         "references": [
          "aws_route.database_internet_gateway[0].id",
          "aws_route.database_internet_gateway[0]",
          "aws_route.database_internet_gateway"
         ]
        }
       },
       "database_ipv6_egress_route_id": {
        "description": "ID of the database IPv6 egress route",
        "expression": {
         "references": [
          "aws_route.database_ipv6_egress[0].id",
          "aws_route.database_ipv6_egress[0]",
          "aws_route.database_ipv6_egress"
         ]
        }
       },
       "database_nat_gateway_route_ids": {
        "description": "List of IDs of the database nat gateway route",
        "expression": {
         "references": [
          "aws_route.database_nat_gateway"
         ]
        }
       },
       "database_network_acl_arn": {
        "description": "ARN of the database network ACL",
        "expression": {
         "references": [
          "aws_network_acl.database[0].arn",
          "aws_network_acl.database[0]",
          "aws_network_acl.database"
         ]
        }
       },
       "database_network_acl_id": {
        "description": "ID of the database network ACL",
        "expression": {
         "references": [
          "aws_network_acl.database[0].id",
          "aws_network_acl.database[0]",
          "aws_network_acl.database"
         ]
        }
       },
       "database_route_table_association_ids": {
        "description": "List of IDs of the database route table association",
        "expression": {
         "references": [
          "aws_route_table_association.database"
         ]
        }
       },
       "database_route_table_ids": {
        "description": "List of IDs of database route tables",
        "expression": {
         "references": [
          "aws_route_table.database",
          "aws_route_table.private"
         ]
        }
       },
       "database_subnet_arns": {
        "description": "List of ARNs of database subnets",
        "expression": {
         "references": [
          "aws_subnet.database"
         ]
        }
       },
       "database_subnet_group": {
        "description": "ID of database subnet group",
        "expression": {
         "references": [
          "aws_db_subnet_group.database[0].id",
          "aws_db_subnet_group.database[0]",
          "aws_db_subnet_group.database"
         ]
        }
       },
       "database_subnet_group_name": {
        "description": "Name of database subnet group",
        "expression": {
         "references": [
          "aws_db_subnet_group.database[0].name",
          "aws_db_subnet_group.database[0]",
          "aws_db_subnet_group.database"
         ]
        }
       },
       "database_subnets": {
        "description": "List of IDs of database subnets",
        "expression": {
         "references": [
          "aws_subnet.database"
         ]
        }
       },
       "database_subnets_cidr_blocks": {
        "description": "List of cidr_blocks of database subnets",
        "expression": {
         "references": [
          "aws_subnet.database"
         ]
        }
       },
       "database_subnets_ipv6_cidr_blocks": {
        "description": "List of IPv6 cidr_blocks of database subnets in an IPv6 enabled VPC",
        "expression": {
         "references": [
          "aws_subnet.database"
         ]
        }
       },
       "default_network_acl_id": {
        "description": "The ID of the default network ACL",
        "expression": {
         "references": [
          "aws_vpc.this[0].default_network_acl_id",
          "aws_vpc.this[0]",
          "aws_vpc.this"
         ]
        }
       },
       "default_route_table_id": {
        "description": "The ID of the default route table",
        "expression": {
         "references": [
          "aws_vpc.this[0].default_route_table_id",
          "aws_vpc.this[0]",
          "aws_vpc.this"
         ]
        }
       },
       "default_security_group_id": {
        "description": "The ID of the security group created by default on VPC creation",
        "expression": {
         "references": [
          "aws_vpc.this[0].default_security_group_id",
          "aws_vpc.this[0]",
          "aws_vpc.this"
         ]
        }
       },
       "default_vpc_arn": {
        "description": "The ARN of the Default VPC",
        "expression": {
         "references": [
          "aws_default_vpc.this[0].arn",
          "aws_default_vpc.this[0]",
          "aws_default_vpc.this"
         ]
        }
       },
       "default_vpc_cidr_block": {
        "description": "The CIDR block of the Default VPC",
        "expression": {
         "references": [
          "aws_default_vpc.this[0].cidr_block",
          "aws_default_vpc.this[0]",
          "aws_default_vpc.this"
         ]
        }
       },
       "default_vpc_default_network_acl_id": {
        "description": "The ID of the default network ACL of the Default VPC",
        "expression": {
         "references": [
          "aws_default_vpc.this[0].default_network_acl_id",
          "aws_default_vpc.this[0]",
          "aws_default_vpc.this"
         ]
        }
       },
       "default_vpc_default_route_table_id": {
        "description": "The ID of the default route table of the Default VPC",
        "expression": {
         "references": [
          "aws_default_vpc.this[0].default_route_table_id",
          "aws_default_vpc.this[0]",
          "aws_default_vpc.this"
         ]
        }
       },
       "default_vpc_default_security_group_id": {
        "description": "The ID of the security group created by default on Default VPC creation",
        "expression": {
         "references": [
          "aws_default_vpc.this[0].default_security_group_id",
          "aws_default_vpc.this[0]",
          "aws_default_vpc.this"
         ]
        }
       },
       "default_vpc_enable_dns_hostnames": {
        "description": "Whether or not the Default VPC has DNS hostname support",
        "expression": {
         "references": [
          "aws_default_vpc.this[0].enable_dns_hostnames",
          "aws_default_vpc.this[0]",
          "aws_default_vpc.this"
         ]
        }
       },
       "default_vpc_enable_dns_support": {
        "description": "Whether or not the Default VPC has DNS support",
        "expression": {
         "references": [
          "aws_default_vpc.this[0].enable_dns_support",
          "aws_default_vpc.this[0]",
          "aws_default_vpc.this"
         ]
        }
       },
       "default_vpc_id": {
        "description": "The ID of the Default VPC",
        "expression": {
         "references": [
          "aws_default_vpc.this[0].id",
          "aws_default_vpc.this[0]",
          "aws_default_vpc.this"
         ]
        }
       },
       "default_vpc_instance_tenancy": {
        "description": "Tenancy of instances spin up within Default VPC",
        "expression": {
         "references": [
          "aws_default_vpc.this[0].instance_tenancy",
          "aws_default_vpc.this[0]",
          "aws_default_vpc.this"
         ]
        }
       },
       "default_vpc_main_route_table_id": {
        "description": "The ID of the main route table associated with the Default VPC",
        "expression": {
         "references": [
          "aws_default_vpc.this[0].main_route_table_id",
          "aws_default_vpc.this[0]",
          "aws_default_vpc.this"
         ]
        }
       },
       "dhcp_options_id": {
        "description": "The ID of the DHCP options",
        "expression": {
         "references": [
          "aws_vpc_dhcp_options.this[0].id",
          "aws_vpc_dhcp_options.this[0]",
          "aws_vpc_dhcp_options.this"
         ]
        }
       },
       "egress_only_internet_gateway_id": {
        "description": "The ID of the egress only Internet Gateway",
        "expression": {
         "references": [
          "aws_egress_only_internet_gateway.this[0].id",
          "aws_egress_only_internet_gateway.this[0]",
          "aws_egress_only_internet_gateway.this"
         ]
        }
       },
       "elasticache_network_acl_arn": {
        "description": "ARN of the elasticache network ACL",
        "expression": {
         "references": [
          "aws_network_acl.elasticache[0].arn",
          "aws_network_acl.elasticache[0]",
          "aws_network_acl.elasticache"
         ]
        }
       },
       "elasticache_network_acl_id": {
        "description": "ID of the elasticache network ACL",
        "expression": {
         "references": [
          "aws_network_acl.elasticache[0].id",
          "aws_network_acl.elasticache[0]",
          "aws_network_acl.elasticache"
         ]
        }
       },
       "elasticache_route_table_association_ids": {
        "description": "List of IDs of the elasticache route table association",
        "expression": {
         "references": [
          "aws_route_table_association.elasticache"
         ]
        }
       },
       "elasticache_route_table_ids": {
        "description": "List of IDs of elasticache route tables",
        "expression": {
         "references": [
          "aws_route_table.elasticache",
          "aws_route_table.private"
         ]
        }
       },
       "elasticache_subnet_arns": {
        "description": "List of ARNs of elasticache subnets",
        "expression": {
         "references": [
          "aws_subnet.elasticache"
         ]
        }
       },
       "elasticache_subnet_group": {
        "description": "ID of elasticache subnet group",
        "expression": {
         "references": [
          "aws_elasticache_subnet_group.elasticache[0].id",
          "aws_elasticache_subnet_group.elasticache[0]",
          "aws_elasticache_subnet_group.elasticache"
         ]
        }
       },
       "elasticache_subnet_group_name": {
        "description": "Name of elasticache subnet group",
        "expression": {
         "references": [
          "aws_elasticache_subnet_group.elasticache[0].name",
          "aws_elasticache_subnet_group.elasticache[0]",
          "aws_elasticache_subnet_group.elasticache"
         ]
        }
       },
       "elasticache_subnets": {
        "description": "List of IDs of elasticache subnets",
        "expression": {
         "references": [
          "aws_subnet.elasticache"
         ]
        }
       },
       "elasticache_subnets_cidr_blocks": {
        "description": "List of cidr_blocks of elasticache subnets",
        "expression": {
         "references": [
          "aws_subnet.elasticache"
         ]
        }
       },
       "elasticache_subnets_ipv6_cidr_blocks": {
        "description": "List of IPv6 cidr_blocks of elasticache subnets in an IPv6 enabled VPC",
        "expression": {
         "references": [
          "aws_subnet.elasticache"
         ]
        }
       },
       "igw_arn": {
        "description": "The ARN of the Internet Gateway",
        "expression": {
         "references": [
          "aws_internet_gateway.this[0].arn",
          "aws_internet_gateway.this[0]",
          "aws_internet_gateway.this"
         ]
        }
       },
       "igw_id": {
        "description": "The ID of the Internet Gateway",
        "expression": {
         "references": [
          "aws_internet_gateway.this[0].id",
          "aws_internet_gateway.this[0]",
          "aws_internet_gateway.this"
         ]
        }
       },
       "intra_network_acl_arn": {
        "description": "ARN of the intra network ACL",
        "expression": {
         "references": [
          "aws_network_acl.intra[0].arn",
          "aws_network_acl.intra[0]",
          "aws_network_acl.intra"
         ]
        }
       },
       "intra_network_acl_id": {
        "description": "ID of the intra network ACL",
        "expression": {
         "references": [
          "aws_network_acl.intra[0].id",
          "aws_network_acl.intra[0]",
          "aws_network_acl.intra"
         ]
        }
       },
       "intra_route_table_association_ids": {
        "description": "List of IDs of the intra route table association",
        "expression": {
         "references": [
          "aws_route_table_association.intra"
         ]
        }
       },
       "intra_route_table_ids": {
        "description": "List of IDs of intra route tables",
        "expression": {
         "references": [
          "aws_route_table.intra"
         ]
        }
       },
       "intra_subnet_arns": {
        "description": "List of ARNs of intra subnets",
        "expression": {
         "references": [
          "aws_subnet.intra"
         ]
        }
       },
       "intra_subnets": {
        "description": "List of IDs of intra subnets",
        "expression": {
         "references": [
          "aws_subnet.intra"
         ]
        }
       },
       "intra_subnets_cidr_blocks": {
        "description": "List of cidr_blocks of intra subnets",
        "expression": {
         "references": [
          "aws_subnet.intra"
         ]
        }
       },
       "intra_subnets_ipv6_cidr_blocks": {
        "description": "List of IPv6 cidr_blocks of intra subnets in an IPv6 enabled VPC",
        "expression": {
         "references": [
          "aws_subnet.intra"
         ]
        }
       },
       "name": {
        "description": "The name of the VPC specified as argument to this module",
        "expression": {
         "references": [
          "var.name"
         ]
        }
       },
       "nat_ids": {
        "description": "List of allocation ID of Elastic IPs created for AWS NAT Gateway",
        "expression": {
         "references": [
          "aws_eip.nat"
         ]
        }
       },
       "nat_public_ips": {
        "description": "List of public Elastic IPs created for AWS NAT Gateway",
        "expression": {
         "references": [
          "var.reuse_nat_ips",
          "var.external_nat_ips",
          "aws_eip.nat"
         ]
        }
       },
       "natgw_ids": {
        "description": "List of NAT Gateway IDs",
        "expression": {
         "references": [
          "aws_nat_gateway.this"
         ]
        }
       },
       "outpost_network_acl_arn": {
        "description": "ARN of the outpost network ACL",
        "expression": {
         "references": [
          "aws_network_acl.outpost[0].arn",
          "aws_network_acl.outpost[0]",
          "aws_network_acl.outpost"
         ]
        }
       },
       "outpost_network_acl_id": {
        "description": "ID of the outpost network ACL",
        "expression": {
         "references": [
          "aws_network_acl.outpost[0].id",
          "aws_network_acl.outpost[0]",
          "aws_network_acl.outpost"
         ]
        }
       },
       "outpost_subnet_arns": {
        "description": "List of ARNs of outpost subnets",
        "expression": {
         "references": [
          "aws_subnet.outpost"
         ]
        }
       },
       "outpost_subnets": {
        "description": "List of IDs of outpost subnets",
        "expression": {
         "references": [
          "aws_subnet.outpost"
         ]
        }
       },
       "outpost_subnets_cidr_blocks": {
        "description": "List of cidr_blocks of outpost subnets",
        "expression": {
         "references": [
          "aws_subnet.outpost"
         ]
        }
       },
       "outpost_subnets_ipv6_cidr_blocks": {
        "description": "List of IPv6 cidr_blocks of outpost subnets in an IPv6 enabled VPC",
        "expression": {
         "references": [
          "aws_subnet.outpost"
         ]
        }
       },
       "private_ipv6_egress_route_ids": {
        "description": "List of IDs of the ipv6 egress route",
        "expression": {
         "references": [
          "aws_route.private_ipv6_egress"
         ]
        }
       },
       "private_nat_gateway_route_ids": {
        "description": "List of IDs of the private nat gateway route",
        "expression": {
         "references": [
          "aws_route.private_nat_gateway"
         ]
        }
       },
       "private_network_acl_arn": {
        "description": "ARN of the private network ACL",
        "expression": {
         "references": [
          "aws_network_acl.private[0].arn",
          "aws_network_acl.private[0]",
          "aws_network_acl.private"
         ]
        }
       },
       "private_network_acl_id": {
        "description": "ID of the private network ACL",
        "expression": {
         "references": [
          "aws_network_acl.private[0].id",
          "aws_network_acl.private[0]",
          "aws_network_acl.private"
         ]
        }
       },
       "private_route_table_association_ids": {
        "description": "List of IDs of the private route table association",
        "expression": {
         "references": [
          "aws_route_table_association.private"
         ]
        }
       },
       "private_route_table_ids": {
        "description": "List of IDs of private route tables",
        "expression": {
         "references": [
          "aws_route_table.private"
         ]
        }
       },
       "private_subnet_arns": {
        "description": "List of ARNs of private subnets",
        "expression": {
         "references": [
          "aws_subnet.private"
         ]
        }
       },
       "private_subnets": {
        "description": "List of IDs of private subnets",
        "expression": {
         "references": [
          "aws_subnet.private"
         ]
        }
       },
       "private_subnets_cidr_blocks": {
        "description": "List of cidr_blocks of private subnets",
        "expression": {
         "references": [
          "aws_subnet.private"
         ]
        }
       },
       "private_subnets_ipv6_cidr_blocks": {
        "description": "List of IPv6 cidr_blocks of private subnets in an IPv6 enabled VPC",
        "expression": {
         "references": [
          "aws_subnet.private"
         ]
        }
       },
       "public_internet_gateway_ipv6_route_id": {
        "description": "ID of the IPv6 internet gateway route",
        "expression": {
         "references": [
          "aws_route.public_internet_gateway_ipv6[0].id",
          "aws_route.public_internet_gateway_ipv6[0]",
          "aws_route.public_internet_gateway_ipv6"
         ]
        }
       },
       "public_internet_gateway_route_id": {
        "description": "ID of the internet gateway route",
        "expression": {
         "references": [
          "aws_route.public_internet_gateway[0].id",
          "aws_route.public_internet_gateway[0]",
          "aws_route.public_internet_gateway"
         ]
        }
       },
       "public_network_acl_arn": {
        "description": "ARN of the public network ACL",
        "expression": {
         "references": [
          "aws_network_acl.public[0].arn",
          "aws_network_acl.public[0]",
          "aws_network_acl.public"
         ]
        }
       },
       "public_network_acl_id": {
        "description": "ID of the public network ACL",
        "expression": {
         "references": [
          "aws_network_acl.public[0].id",
          "aws_network_acl.public[0]",
          "aws_network_acl.public"
         ]
        }
       },
       "public_route_table_association_ids": {
        "description": "List of IDs of the public route table association",
        "expression": {
         "references": [
          "aws_route_table_association.public"
         ]
        }
       },
       "public_route_table_ids": {
        "description": "List of IDs of public route tables",
        "expression": {
         "references": [
          "aws_route_table.public"
         ]
        }
       },
       "public_subnet_arns": {
        "description": "List of ARNs of public subnets",
        "expression": {
         "references": [
          "aws_subnet.public"
         ]
        }
       },
       "public_subnets": {
        "description": "List of IDs of public subnets",
        "expression": {
         "references": [
          "aws_subnet.public"
         ]
        }
       },
       "public_subnets_cidr_blocks": {
        "description": "List of cidr_blocks of public subnets",
        "expression": {
         "references": [
          "aws_subnet.public"
         ]
        }
       },
       "public_subnets_ipv6_cidr_blocks": {
        "description": "List of IPv6 cidr_blocks of public subnets in an IPv6 enabled VPC",
        "expression": {
         "references": [
          "aws_subnet.public"
         ]
        }
       },
       "redshift_network_acl_arn": {
        "description": "ARN of the redshift network ACL",
        "expression": {
         "references": [
          "aws_network_acl.redshift[0].arn",
          "aws_network_acl.redshift[0]",
          "aws_network_acl.redshift"
         ]
        }
       },
       "redshift_network_acl_id": {
        "description": "ID of the redshift network ACL",
        "expression": {
         "references": [
          "aws_network_acl.redshift[0].id",
          "aws_network_acl.redshift[0]",
          "aws_network_acl.redshift"
         ]
        }
       },
       "redshift_public_route_table_association_ids": {
        "description": "List of IDs of the public redshift route table association",
        "expression": {
         "references": [
          "aws_route_table_association.redshift_public"
         ]
        }
       },
       "redshift_route_table_association_ids": {
        "description": "List of IDs of the redshift route table association",
        "expression": {
         "references": [
          "aws_route_table_association.redshift"
         ]
        }
       },
       "redshift_route_table_ids": {
        "description": "List of IDs of redshift route tables",
        "expression": {
         "references": [
          "aws_route_table.redshift",
          "aws_route_table.redshift",
          "var.enable_public_redshift",
          "aws_route_table.public",
          "aws_route_table.private"
         ]
        }
       },
       "redshift_subnet_arns": {
        "description": "List of ARNs of redshift subnets",
        "expression": {
         "references": [
          "aws_subnet.redshift"
         ]
        }
       },
       "redshift_subnet_group": {
        "description": "ID of redshift subnet group",
        "expression": {
         "references": [
          "aws_redshift_subnet_group.redshift[0].id",
          "aws_redshift_subnet_group.redshift[0]",
          "aws_redshift_subnet_group.redshift"
         ]
        }
       },
       "redshift_subnets": {
        "description": "List of IDs of redshift subnets",
        "expression": {
         "references": [
          "aws_subnet.redshift"
         ]
        }
       },
       "redshift_subnets_cidr_blocks": {
        "description": "List of cidr_blocks of redshift subnets",
        "expression": {
         "references": [
          "aws_subnet.redshift"
         ]
        }
       },
       "redshift_subnets_ipv6_cidr_blocks": {
        "description": "List of IPv6 cidr_blocks of redshift subnets in an IPv6 enabled VPC",
        "expression": {
         "references": [
          "aws_subnet.redshift"
         ]
        }
       },
       "this_customer_gateway": {
        "description": "Map of Customer Gateway attributes",
        "expression": {
         "references": [
          "aws_customer_gateway.this"
         ]
        }
       },
       "vgw_arn": {
        "description": "The ARN of the VPN Gateway",
        "expression": {
         "references": [
          "aws_vpn_gateway.this[0].arn",
          "aws_vpn_gateway.this[0]",
          "aws_vpn_gateway.this"
         ]
        }
       },
       "vgw_id": {
        "description": "The ID of the VPN Gateway",
        "expression": {
         "references": [
          "aws_vpn_gateway.this[0].id",
          "aws_vpn_gateway.this[0]",
          "aws_vpn_gateway.this",
          "aws_vpn_gateway_attachment.this[0].vpn_gateway_id",
          "aws_vpn_gateway_attachment.this[0]",
          "aws_vpn_gateway_attachment.this"
         ]
        }
       },
       "vpc_arn": {
        "description": "The ARN of the VPC",
        "expression": {
         "references": [
          "aws_vpc.this[0].arn",
          "aws_vpc.this[0]",
          "aws_vpc.this"
         ]
        }
       },
       "vpc_cidr_block": {
        "description": "The CIDR block of the VPC",
        "expression": {
         "references": [
          "aws_vpc.this[0].cidr_block",
          "aws_vpc.this[0]",
          "aws_vpc.this"
         ]
        }
       },
       "vpc_enable_dns_hostnames": {
        "description": "Whether or not the VPC has DNS hostname support",
        "expression": {
         "references": [
          "aws_vpc.this[0].enable_dns_hostnames",
          "aws_vpc.this[0]",
          "aws_vpc.this"
         ]
        }
       },
       "vpc_enable_dns_support": {
        "description": "Whether or not the VPC has DNS support",
        "expression": {
         "references": [
          "aws_vpc.this[0].enable_dns_support",
          "aws_vpc.this[0]",
          "aws_vpc.this"
         ]
        }
       },
       "vpc_flow_log_cloudwatch_iam_role_arn": {
        "description": "The ARN of the IAM role used when pushing logs to Cloudwatch log group",
        "expression": {
         "references": [
          "local.flow_log_iam_role_arn"
         ]
        }
       },
       "vpc_flow_log_destination_arn": {
        "description": "The ARN of the destination for VPC Flow Logs",
        "expression": {
         "references": [
          "local.flow_log_destination_arn"
         ]
        }
       },
       "vpc_flow_log_destination_type": {
        "description": "The type of the destination for VPC Flow Logs",
        "expression": {
         "references": [
          "var.flow_log_destination_type"
         ]
        }
       },
       "vpc_flow_log_id": {
        "description": "The ID of the Flow Log resource",
        "expression": {
         "references": [
          "aws_flow_log.this[0].id",
          "aws_flow_log.this[0]",
          "aws_flow_log.this"
         ]
        }
       },
       "vpc_id": {
        "description": "The ID of the VPC",
        "expression": {
         "references": [
          "aws_vpc.this[0].id",
          "aws_vpc.this[0]",
          "aws_vpc.this"
         ]
        }
       },
       "vpc_instance_tenancy": {
        "description": "Tenancy of instances spin up within VPC",
        "expression": {
         "references": [
          "aws_vpc.this[0].instance_tenancy",
          "aws_vpc.this[0]",
          "aws_vpc.this"
         ]
        }
       },
       "vpc_ipv6_association_id": {
        "description": "The association ID for the IPv6 CIDR block",
        "expression": {
         "references": [
          "aws_vpc.this[0].ipv6_association_id",
          "aws_vpc.this[0]",
          "aws_vpc.this"
         ]
        }
       },
       "vpc_ipv6_cidr_block": {
        "description": "The IPv6 CIDR block",
        "expression": {
         "references": [
          "aws_vpc.this[0].ipv6_cidr_block",
          "aws_vpc.this[0]",
          "aws_vpc.this"
         ]
        }
       },
       "vpc_main_route_table_id": {
        "description": "The ID of the main route table associated with this VPC",
        "expression": {
         "references": [
          "aws_vpc.this[0].main_route_table_id",
          "aws_vpc.this[0]",
          "aws_vpc.this"
         ]
        }
       },
       "vpc_owner_id": {
        "description": "The ID of the AWS account that owns the VPC",
        "expression": {
         "references": [
          "aws_vpc.this[0].owner_id",
          "aws_vpc.this[0]",
          "aws_vpc.this"
         ]
        }
       },
       "vpc_secondary_cidr_blocks": {
        "description": "List of secondary CIDR blocks of the VPC",
        "expression": {
         "references": [
          "aws_vpc_ipv4_cidr_block_association.this"
         ]
        }
       }
      },
      "resources": [
       {
        "address": "aws_cloudwatch_log_group.flow_log",
        "count_expression": {
         "references": [
          "local.create_flow_log_cloudwatch_log_group"
         ]
        },
        "expressions": {
         "kms_key_id": {
          "references": [
           "var.flow_log_cloudwatch_log_group_kms_key_id"
          ]
         },
         "name": {
          "references": [
           "var.flow_log_cloudwatch_log_group_name_prefix",
           "local.flow_log_cloudwatch_log_group_name_suffix"
          ]
         },
         "retention_in_days": {
          "references": [
           "var.flow_log_cloudwatch_log_group_retention_in_days"
          ]
         },
         "tags": {
          "references": [
           "var.tags",
           "var.vpc_flow_log_tags"
          ]
         }
        },
        "mode": "managed",
        "name": "flow_log",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_cloudwatch_log_group"
       },
       {
        "address": "aws_customer_gateway.this",
        "expressions": {
         "bgp_asn": {
          "references": [
           "each.value[\"bgp_asn\"]",
           "each.value"
          ]
         },
         "device_name": {
          "references": [
           "each.value"
          ]
         },
         "ip_address": {
          "references": [
           "each.value[\"ip_address\"]",
           "each.value"
          ]
         },
         "tags": {
          "references": [
           "var.name",
           "each.key",
           "var.tags",
           "var.customer_gateway_tags"
          ]
         },
         "type": {
          "constant_value": "ipsec.1"
         }
        },
        "for_each_expression": {
         "references": [
          "var.customer_gateways"
         ]
        },
        "mode": "managed",
        "name": "this",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_customer_gateway"
       },
       {
        "address": "aws_db_subnet_group.database",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.database_subnets",
          "var.create_database_subnet_group"
         ]
        },
        "expressions": {
         "description": {
          "references": [
           "var.name"
          ]
         },
         "name": {
          "references": [
           "var.database_subnet_group_name",
           "var.name"
          ]
         },
         "subnet_ids": {
          "references": [
           "aws_subnet.database"
          ]
         },
         "tags": {
          "references": [
           "var.database_subnet_group_name",
           "var.name",
           "var.tags",
           "var.database_subnet_group_tags"
          ]
         }
        },
        "mode": "managed",
        "name": "database",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_db_subnet_group"
       },
       {
        "address": "aws_default_network_acl.this",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.manage_default_network_acl"
         ]
        },
        "expressions": {
         "default_network_acl_id": {
          "references": [
           "aws_vpc.this[0].default_network_acl_id",
           "aws_vpc.this[0]",
           "aws_vpc.this"
          ]
         },
         "subnet_ids": {
          "constant_value": null
         },
         "tags": {
          "references": [
           "var.default_network_acl_name",
           "var.name",
           "var.tags",
           "var.default_network_acl_tags"
          ]
         }
        },
        "mode": "managed",
        "name": "this",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_default_network_acl"
       },
       {
        "address": "aws_default_route_table.default",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.manage_default_route_table"
         ]
        },
        "expressions": {
         "default_route_table_id": {
          "references": [
           "aws_vpc.this[0].default_route_table_id",
           "aws_vpc.this[0]",
           "aws_vpc.this"
          ]
         },
         "propagating_vgws": {
          "references": [
           "var.default_route_table_propagating_vgws"
          ]
         },
         "tags": {
          "references": [
           "var.default_route_table_name",
           "var.name",
           "var.tags",
           "var.default_route_table_tags"
          ]
         },
         "timeouts": {
          "create": {
           "constant_value": "5m"
          },
          "update": {
           "constant_value": "5m"
          }
         }
        },
        "mode": "managed",
        "name": "default",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_default_route_table"
       },
       {
        "address": "aws_default_security_group.this",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.manage_default_security_group"
         ]
        },
        "expressions": {
         "tags": {
          "references": [
           "var.default_security_group_name",
           "var.name",
           "var.tags",
           "var.default_security_group_tags"
          ]
         },
         "vpc_id": {
          "references": [
           "aws_vpc.this[0].id",
           "aws_vpc.this[0]",
           "aws_vpc.this"
          ]
         }
        },
        "mode": "managed",
        "name": "this",
        "provider_config_key": "aws",
        "schema_version": 1,
        "type": "aws_default_security_group"
       },
       {
        "address": "aws_default_vpc.this",
        "count_expression": {
         "references": [
          "var.manage_default_vpc"
         ]
        },
        "expressions": {
         "enable_classiclink": {
          "constant_value": null
         },
         "enable_dns_hostnames": {
          "references": [
           "var.default_vpc_enable_dns_hostnames"
          ]
         },
         "enable_dns_support": {
          "references": [
           "var.default_vpc_enable_dns_support"
          ]
         },
         "tags": {
          "references": [
           "var.default_vpc_name",
           "var.tags",
           "var.default_vpc_tags"
          ]
         }
        },
        "mode": "managed",
        "name": "this",
        "provider_config_key": "aws",
        "schema_version": 1,
        "type": "aws_default_vpc"
       },
       {
        "address": "aws_egress_only_internet_gateway.this",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.create_egress_only_igw",
          "var.enable_ipv6",
          "local.max_subnet_length"
         ]
        },
        "expressions": {
         "tags": {
          "references": [
           "var.name",
           "var.tags",
           "var.igw_tags"
          ]
         },
         "vpc_id": {
          "references": [
           "local.vpc_id"
          ]
         }
        },
        "mode": "managed",
        "name": "this",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_egress_only_internet_gateway"
       },
       {
        "address": "aws_eip.nat",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.enable_nat_gateway",
          "var.reuse_nat_ips",
          "local.nat_gateway_count"
         ]
        },
        "expressions": {
         "tags": {
          "references": [
           "var.name",
           "var.azs",
           "var.single_nat_gateway",
           "count.index",
           "var.tags",
           "var.nat_eip_tags"
          ]
         },
         "vpc": {
          "constant_value": true
         }
        },
        "mode": "managed",
        "name": "nat",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_eip"
       },
       {
        "address": "aws_elasticache_subnet_group.elasticache",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.elasticache_subnets",
          "var.create_elasticache_subnet_group"
         ]
        },
        "expressions": {
         "description": {
          "references": [
           "var.name"
          ]
         },
         "name": {
          "references": [
           "var.elasticache_subnet_group_name",
           "var.name"
          ]
         },
         "subnet_ids": {
          "references": [
           "aws_subnet.elasticache"
          ]
         },
         "tags": {
          "references": [
           "var.elasticache_subnet_group_name",
           "var.name",
           "var.tags",
           "var.elasticache_subnet_group_tags"
          ]
         }
        },
        "mode": "managed",
        "name": "elasticache",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_elasticache_subnet_group"
       },
       {
        "address": "aws_flow_log.this",
        "count_expression": {
         "references": [
          "local.enable_flow_log"
         ]
        },
        "expressions": {
         "iam_role_arn": {
          "references": [
           "local.flow_log_iam_role_arn"
          ]
         },
         "log_destination": {
          "references": [
           "local.flow_log_destination_arn"
          ]
         },
         "log_destination_type": {
          "references": [
           "var.flow_log_destination_type"
          ]
         },
         "log_format": {
          "references": [
           "var.flow_log_log_format"
          ]
         },
         "max_aggregation_interval": {
          "references": [
           "var.flow_log_max_aggregation_interval"
          ]
         },
         "tags": {
          "references": [
           "var.tags",
           "var.vpc_flow_log_tags"
          ]
         },
         "traffic_type": {
          "references": [
           "var.flow_log_traffic_type"
          ]
         },
         "vpc_id": {
          "references": [
           "local.vpc_id"
          ]
         }
        },
        "mode": "managed",
        "name": "this",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_flow_log"
       },
       {
        "address": "aws_iam_policy.vpc_flow_log_cloudwatch",
        "count_expression": {
         "references": [
          "local.create_flow_log_cloudwatch_iam_role"
         ]
        },
        "expressions": {
         "name_prefix": {
          "constant_value": "vpc-flow-log-to-cloudwatch-"
         },
         "policy": {
          "references": [
           "data.aws_iam_policy_document.vpc_flow_log_cloudwatch[0].json",
           "data.aws_iam_policy_document.vpc_flow_log_cloudwatch[0]",
           "data.aws_iam_policy_document.vpc_flow_log_cloudwatch"
          ]
         },
         "tags": {
          "references": [
           "var.tags",
           "var.vpc_flow_log_tags"
          ]
         }
        },
        "mode": "managed",
        "name": "vpc_flow_log_cloudwatch",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_iam_policy"
       },
       {
        "address": "aws_iam_role.vpc_flow_log_cloudwatch",
        "count_expression": {
         "references": [
          "local.create_flow_log_cloudwatch_iam_role"
         ]
        },
        "expressions": {
         "assume_role_policy": {
          "references": [
           "data.aws_iam_policy_document.flow_log_cloudwatch_assume_role[0].json",
           "data.aws_iam_policy_document.flow_log_cloudwatch_assume_role[0]",
           "data.aws_iam_policy_document.flow_log_cloudwatch_assume_role"
          ]
         },
         "name_prefix": {
          "constant_value": "vpc-flow-log-role-"
         },
         "permissions_boundary": {
          "references": [
           "var.vpc_flow_log_permissions_boundary"
          ]
         },
         "tags": {
          "references": [
           "var.tags",
           "var.vpc_flow_log_tags"
          ]
         }
        },
        "mode": "managed",
        "name": "vpc_flow_log_cloudwatch",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_iam_role"
       },
       {
        "address": "aws_iam_role_policy_attachment.vpc_flow_log_cloudwatch",
        "count_expression": {
         "references": [
          "local.create_flow_log_cloudwatch_iam_role"
         ]
        },
        "expressions": {
         "policy_arn": {
          "references": [
           "aws_iam_policy.vpc_flow_log_cloudwatch[0].arn",
           "aws_iam_policy.vpc_flow_log_cloudwatch[0]",
           "aws_iam_policy.vpc_flow_log_cloudwatch"
          ]
         },
         "role": {
          "references": [
           "aws_iam_role.vpc_flow_log_cloudwatch[0].name",
           "aws_iam_role.vpc_flow_log_cloudwatch[0]",
           "aws_iam_role.vpc_flow_log_cloudwatch"
          ]
         }
        },
        "mode": "managed",
        "name": "vpc_flow_log_cloudwatch",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_iam_role_policy_attachment"
       },
       {
        "address": "aws_internet_gateway.this",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.create_igw",
          "var.public_subnets"
         ]
        },
        "expressions": {
         "tags": {
          "references": [
           "var.name",
           "var.tags",
           "var.igw_tags"
          ]
         },
         "vpc_id": {
          "references": [
           "local.vpc_id"
          ]
         }
        },
        "mode": "managed",
        "name": "this",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_internet_gateway"
       },
       {
        "address": "aws_nat_gateway.this",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.enable_nat_gateway",
          "local.nat_gateway_count"
         ]
        },
        "depends_on": [
         "aws_internet_gateway.this"
        ],
        "expressions": {
         "allocation_id": {
          "references": [
           "local.nat_gateway_ips",
           "var.single_nat_gateway",
           "count.index"
          ]
         },
         "subnet_id": {
          "references": [
           "aws_subnet.public",
           "var.single_nat_gateway",
           "count.index"
          ]
         },
         "tags": {
          "references": [
           "var.name",
           "var.azs",
           "var.single_nat_gateway",
           "count.index",
           "var.tags",
           "var.nat_gateway_tags"
          ]
         }
        },
        "mode": "managed",
        "name": "this",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_nat_gateway"
       },
       {
        "address": "aws_network_acl.database",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.database_dedicated_network_acl",
          "var.database_subnets"
         ]
        },
        "expressions": {
         "subnet_ids": {
          "references": [
           "aws_subnet.database"
          ]
         },
         "tags": {
          "references": [
           "var.name",
           "var.database_subnet_suffix",
           "var.tags",
           "var.database_acl_tags"
          ]
         },
         "vpc_id": {
          "references": [
           "local.vpc_id"
          ]
         }
        },
        "mode": "managed",
        "name": "database",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_network_acl"
       },
       {
        "address": "aws_network_acl.elasticache",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.elasticache_dedicated_network_acl",
          "var.elasticache_subnets"
         ]
        },
        "expressions": {
         "subnet_ids": {
          "references": [
           "aws_subnet.elasticache"
          ]
         },
         "tags": {
          "references": [
           "var.name",
           "var.elasticache_subnet_suffix",
           "var.tags",
           "var.elasticache_acl_tags"
          ]
         },
         "vpc_id": {
          "references": [
           "local.vpc_id"
          ]
         }
        },
        "mode": "managed",
        "name": "elasticache",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_network_acl"
       },
       {
        "address": "aws_network_acl.intra",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.intra_dedicated_network_acl",
          "var.intra_subnets"
         ]
        },
        "expressions": {
         "subnet_ids": {
          "references": [
           "aws_subnet.intra"
          ]
         },
         "tags": {
          "references": [
           "var.name",
           "var.intra_subnet_suffix",
           "var.tags",
           "var.intra_acl_tags"
          ]
         },
         "vpc_id": {
          "references": [
           "local.vpc_id"
          ]
         }
        },
        "mode": "managed",
        "name": "intra",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_network_acl"
       },
       {
        "address": "aws_network_acl.outpost",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.outpost_dedicated_network_acl",
          "var.outpost_subnets"
         ]
        },
        "expressions": {
         "subnet_ids": {
          "references": [
           "aws_subnet.outpost"
          ]
         },
         "tags": {
          "references": [
           "var.name",
           "var.outpost_subnet_suffix",
           "var.tags",
           "var.outpost_acl_tags"
          ]
         },
         "vpc_id": {
          "references": [
           "local.vpc_id"
          ]
         }
        },
        "mode": "managed",
        "name": "outpost",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_network_acl"
       },
       {
        "address": "aws_network_acl.private",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.private_dedicated_network_acl",
          "var.private_subnets"
         ]
        },
        "expressions": {
         "subnet_ids": {
          "references": [
           "aws_subnet.private"
          ]
         },
         "tags": {
          "references": [
           "var.name",
           "var.private_subnet_suffix",
           "var.tags",
           "var.private_acl_tags"
          ]
         },
         "vpc_id": {
          "references": [
           "local.vpc_id"
          ]
         }
        },
        "mode": "managed",
        "name": "private",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_network_acl"
       },
       {
        "address": "aws_network_acl.public",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.public_dedicated_network_acl",
          "var.public_subnets"
         ]
        },
        "expressions": {
         "subnet_ids": {
          "references": [
           "aws_subnet.public"
          ]
         },
         "tags": {
          "references": [
           "var.name",
           "var.public_subnet_suffix",
           "var.tags",
           "var.public_acl_tags"
          ]
         },
         "vpc_id": {
          "references": [
           "local.vpc_id"
          ]
         }
        },
        "mode": "managed",
        "name": "public",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_network_acl"
       },
       {
        "address": "aws_network_acl.redshift",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.redshift_dedicated_network_acl",
          "var.redshift_subnets"
         ]
        },
        "expressions": {
         "subnet_ids": {
          "references": [
           "aws_subnet.redshift"
          ]
         },
         "tags": {
          "references": [
           "var.name",
           "var.redshift_subnet_suffix",
           "var.tags",
           "var.redshift_acl_tags"
          ]
         },
         "vpc_id": {
          "references": [
           "local.vpc_id"
          ]
         }
        },
        "mode": "managed",
        "name": "redshift",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_network_acl"
       },
       {
        "address": "aws_network_acl_rule.database_inbound",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.database_dedicated_network_acl",
          "var.database_subnets",
          "var.database_inbound_acl_rules"
         ]
        },
        "expressions": {
         "cidr_block": {
          "references": [
           "var.database_inbound_acl_rules",
           "count.index"
          ]
         },
         "egress": {
          "constant_value": false
         },
         "from_port": {
          "references": [
           "var.database_inbound_acl_rules",
           "count.index"
          ]
         },
         "icmp_code": {
          "references": [
           "var.database_inbound_acl_rules",
           "count.index"
          ]
         },
         "icmp_type": {
          "references": [
           "var.database_inbound_acl_rules",
           "count.index"
          ]
         },
         "ipv6_cidr_block": {
          "references": [
           "var.database_inbound_acl_rules",
           "count.index"
          ]
         },
         "network_acl_id": {
          "references": [
           "aws_network_acl.database[0].id",
           "aws_network_acl.database[0]",
           "aws_network_acl.database"
          ]
         },
         "protocol": {
          "references": [
           "var.database_inbound_acl_rules",
           "count.index"
          ]
         },
         "rule_action": {
          "references": [
           "var.database_inbound_acl_rules",
           "count.index"
          ]
         },
         "rule_number": {
          "references": [
           "var.database_inbound_acl_rules",
           "count.index"
          ]
         },
         "to_port": {
          "references": [
           "var.database_inbound_acl_rules",
           "count.index"
          ]
         }
        },
        "mode": "managed",
        "name": "database_inbound",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_network_acl_rule"
       },
       {
        "address": "aws_network_acl_rule.database_outbound",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.database_dedicated_network_acl",
          "var.database_subnets",
          "var.database_outbound_acl_rules"
         ]
        },
        "expressions": {
         "cidr_block": {
          "references": [
           "var.database_outbound_acl_rules",
           "count.index"
          ]
         },
         "egress": {
          "constant_value": true
         },
         "from_port": {
          "references": [
           "var.database_outbound_acl_rules",
           "count.index"
          ]
         },
         "icmp_code": {
          "references": [
           "var.database_outbound_acl_rules",
           "count.index"
          ]
         },
         "icmp_type": {
          "references": [
           "var.database_outbound_acl_rules",
           "count.index"
          ]
         },
         "ipv6_cidr_block": {
          "references": [
           "var.database_outbound_acl_rules",
           "count.index"
          ]
         },
         "network_acl_id": {
          "references": [
           "aws_network_acl.database[0].id",
           "aws_network_acl.database[0]",
           "aws_network_acl.database"
          ]
         },
         "protocol": {
          "references": [
           "var.database_outbound_acl_rules",
           "count.index"
          ]
         },
         "rule_action": {
          "references": [
           "var.database_outbound_acl_rules",
           "count.index"
          ]
         },
         "rule_number": {
          "references": [
           "var.database_outbound_acl_rules",
           "count.index"
          ]
         },
         "to_port": {
          "references": [
           "var.database_outbound_acl_rules",
           "count.index"
          ]
         }
        },
        "mode": "managed",
        "name": "database_outbound",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_network_acl_rule"
       },
       {
        "address": "aws_network_acl_rule.elasticache_inbound",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.elasticache_dedicated_network_acl",
          "var.elasticache_subnets",
          "var.elasticache_inbound_acl_rules"
         ]
        },
        "expressions": {
         "cidr_block": {
          "references": [
           "var.elasticache_inbound_acl_rules",
           "count.index"
          ]
         },
         "egress": {
          "constant_value": false
         },
         "from_port": {
          "references": [
           "var.elasticache_inbound_acl_rules",
           "count.index"
          ]
         },
         "icmp_code": {
          "references": [
           "var.elasticache_inbound_acl_rules",
           "count.index"
          ]
         },
         "icmp_type": {
          "references": [
           "var.elasticache_inbound_acl_rules",
           "count.index"
          ]
         },
         "ipv6_cidr_block": {
          "references": [
           "var.elasticache_inbound_acl_rules",
           "count.index"
          ]
         },
         "network_acl_id": {
          "references": [
           "aws_network_acl.elasticache[0].id",
           "aws_network_acl.elasticache[0]",
           "aws_network_acl.elasticache"
          ]
         },
         "protocol": {
          "references": [
           "var.elasticache_inbound_acl_rules",
           "count.index"
          ]
         },
         "rule_action": {
          "references": [
           "var.elasticache_inbound_acl_rules",
           "count.index"
          ]
         },
         "rule_number": {
          "references": [
           "var.elasticache_inbound_acl_rules",
           "count.index"
          ]
         },
         "to_port": {
          "references": [
           "var.elasticache_inbound_acl_rules",
           "count.index"
          ]
         }
        },
        "mode": "managed",
        "name": "elasticache_inbound",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_network_acl_rule"
       },
       {
        "address": "aws_network_acl_rule.elasticache_outbound",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.elasticache_dedicated_network_acl",
          "var.elasticache_subnets",
          "var.elasticache_outbound_acl_rules"
         ]
        },
        "expressions": {
         "cidr_block": {
          "references": [
           "var.elasticache_outbound_acl_rules",
           "count.index"
          ]
         },
         "egress": {
          "constant_value": true
         },
         "from_port": {
          "references": [
           "var.elasticache_outbound_acl_rules",
           "count.index"
          ]
         },
         "icmp_code": {
          "references": [
           "var.elasticache_outbound_acl_rules",
           "count.index"
          ]
         },
         "icmp_type": {
          "references": [
           "var.elasticache_outbound_acl_rules",
           "count.index"
          ]
         },
         "ipv6_cidr_block": {
          "references": [
           "var.elasticache_outbound_acl_rules",
           "count.index"
          ]
         },
         "network_acl_id": {
          "references": [
           "aws_network_acl.elasticache[0].id",
           "aws_network_acl.elasticache[0]",
           "aws_network_acl.elasticache"
          ]
         },
         "protocol": {
          "references": [
           "var.elasticache_outbound_acl_rules",
           "count.index"
          ]
         },
         "rule_action": {
          "references": [
           "var.elasticache_outbound_acl_rules",
           "count.index"
          ]
         },
         "rule_number": {
          "references": [
           "var.elasticache_outbound_acl_rules",
           "count.index"
          ]
         },
         "to_port": {
          "references": [
           "var.elasticache_outbound_acl_rules",
           "count.index"
          ]
         }
        },
        "mode": "managed",
        "name": "elasticache_outbound",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_network_acl_rule"
       },
       {
        "address": "aws_network_acl_rule.intra_inbound",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.intra_dedicated_network_acl",
          "var.intra_subnets",
          "var.intra_inbound_acl_rules"
         ]
        },
        "expressions": {
         "cidr_block": {
          "references": [
           "var.intra_inbound_acl_rules",
           "count.index"
          ]
         },
         "egress": {
          "constant_value": false
         },
         "from_port": {
          "references": [
           "var.intra_inbound_acl_rules",
           "count.index"
          ]
         },
         "icmp_code": {
          "references": [
           "var.intra_inbound_acl_rules",
           "count.index"
          ]
         },
         "icmp_type": {
          "references": [
           "var.intra_inbound_acl_rules",
           "count.index"
          ]
         },
         "ipv6_cidr_block": {
          "references": [
           "var.intra_inbound_acl_rules",
           "count.index"
          ]
         },
         "network_acl_id": {
          "references": [
           "aws_network_acl.intra[0].id",
           "aws_network_acl.intra[0]",
           "aws_network_acl.intra"
          ]
         },
         "protocol": {
          "references": [
           "var.intra_inbound_acl_rules",
           "count.index"
          ]
         },
         "rule_action": {
          "references": [
           "var.intra_inbound_acl_rules",
           "count.index"
          ]
         },
         "rule_number": {
          "references": [
           "var.intra_inbound_acl_rules",
           "count.index"
          ]
         },
         "to_port": {
          "references": [
           "var.intra_inbound_acl_rules",
           "count.index"
          ]
         }
        },
        "mode": "managed",
        "name": "intra_inbound",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_network_acl_rule"
       },
       {
        "address": "aws_network_acl_rule.intra_outbound",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.intra_dedicated_network_acl",
          "var.intra_subnets",
          "var.intra_outbound_acl_rules"
         ]
        },
        "expressions": {
         "cidr_block": {
          "references": [
           "var.intra_outbound_acl_rules",
           "count.index"
          ]
         },
         "egress": {
          "constant_value": true
         },
         "from_port": {
          "references": [
           "var.intra_outbound_acl_rules",
           "count.index"
          ]
         },
         "icmp_code": {
          "references": [
           "var.intra_outbound_acl_rules",
           "count.index"
          ]
         },
         "icmp_type": {
          "references": [
           "var.intra_outbound_acl_rules",
           "count.index"
          ]
         },
         "ipv6_cidr_block": {
          "references": [
           "var.intra_outbound_acl_rules",
           "count.index"
          ]
         },
         "network_acl_id": {
          "references": [
           "aws_network_acl.intra[0].id",
           "aws_network_acl.intra[0]",
           "aws_network_acl.intra"
          ]
         },
         "protocol": {
          "references": [
           "var.intra_outbound_acl_rules",
           "count.index"
          ]
         },
         "rule_action": {
          "references": [
           "var.intra_outbound_acl_rules",
           "count.index"
          ]
         },
         "rule_number": {
          "references": [
           "var.intra_outbound_acl_rules",
           "count.index"
          ]
         },
         "to_port": {
          "references": [
           "var.intra_outbound_acl_rules",
           "count.index"
          ]
         }
        },
        "mode": "managed",
        "name": "intra_outbound",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_network_acl_rule"
       },
       {
        "address": "aws_network_acl_rule.outpost_inbound",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.outpost_dedicated_network_acl",
          "var.outpost_subnets",
          "var.outpost_inbound_acl_rules"
         ]
        },
        "expressions": {
         "cidr_block": {
          "references": [
           "var.outpost_inbound_acl_rules",
           "count.index"
          ]
         },
         "egress": {
          "constant_value": false
         },
         "from_port": {
          "references": [
           "var.outpost_inbound_acl_rules",
           "count.index"
          ]
         },
         "icmp_code": {
          "references": [
           "var.outpost_inbound_acl_rules",
           "count.index"
          ]
         },
         "icmp_type": {
          "references": [
           "var.outpost_inbound_acl_rules",
           "count.index"
          ]
         },
         "ipv6_cidr_block": {
          "references": [
           "var.outpost_inbound_acl_rules",
           "count.index"
          ]
         },
         "network_acl_id": {
          "references": [
           "aws_network_acl.outpost[0].id",
           "aws_network_acl.outpost[0]",
           "aws_network_acl.outpost"
          ]
         },
         "protocol": {
          "references": [
           "var.outpost_inbound_acl_rules",
           "count.index"
          ]
         },
         "rule_action": {
          "references": [
           "var.outpost_inbound_acl_rules",
           "count.index"
          ]
         },
         "rule_number": {
          "references": [
           "var.outpost_inbound_acl_rules",
           "count.index"
          ]
         },
         "to_port": {
          "references": [
           "var.outpost_inbound_acl_rules",
           "count.index"
          ]
         }
        },
        "mode": "managed",
        "name": "outpost_inbound",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_network_acl_rule"
       },
       {
        "address": "aws_network_acl_rule.outpost_outbound",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.outpost_dedicated_network_acl",
          "var.outpost_subnets",
          "var.outpost_outbound_acl_rules"
         ]
        },
        "expressions": {
         "cidr_block": {
          "references": [
           "var.outpost_outbound_acl_rules",
           "count.index"
          ]
         },
         "egress": {
          "constant_value": true
         },
         "from_port": {
          "references": [
           "var.outpost_outbound_acl_rules",
           "count.index"
          ]
         },
         "icmp_code": {
          "references": [
           "var.outpost_outbound_acl_rules",
           "count.index"
          ]
         },
         "icmp_type": {
          "references": [
           "var.outpost_outbound_acl_rules",
           "count.index"
          ]
         },
         "ipv6_cidr_block": {
          "references": [
           "var.outpost_outbound_acl_rules",
           "count.index"
          ]
         },
         "network_acl_id": {
          "references": [
           "aws_network_acl.outpost[0].id",
           "aws_network_acl.outpost[0]",
           "aws_network_acl.outpost"
          ]
         },
         "protocol": {
          "references": [
           "var.outpost_outbound_acl_rules",
           "count.index"
          ]
         },
         "rule_action": {
          "references": [
           "var.outpost_outbound_acl_rules",
           "count.index"
          ]
         },
         "rule_number": {
          "references": [
           "var.outpost_outbound_acl_rules",
           "count.index"
          ]
         },
         "to_port": {
          "references": [
           "var.outpost_outbound_acl_rules",
           "count.index"
          ]
         }
        },
        "mode": "managed",
        "name": "outpost_outbound",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_network_acl_rule"
       },
       {
        "address": "aws_network_acl_rule.private_inbound",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.private_dedicated_network_acl",
          "var.private_subnets",
          "var.private_inbound_acl_rules"
         ]
        },
        "expressions": {
         "cidr_block": {
          "references": [
           "var.private_inbound_acl_rules",
           "count.index"
          ]
         },
         "egress": {
          "constant_value": false
         },
         "from_port": {
          "references": [
           "var.private_inbound_acl_rules",
           "count.index"
          ]
         },
         "icmp_code": {
          "references": [
           "var.private_inbound_acl_rules",
           "count.index"
          ]
         },
         "icmp_type": {
          "references": [
           "var.private_inbound_acl_rules",
           "count.index"
          ]
         },
         "ipv6_cidr_block": {
          "references": [
           "var.private_inbound_acl_rules",
           "count.index"
          ]
         },
         "network_acl_id": {
          "references": [
           "aws_network_acl.private[0].id",
           "aws_network_acl.private[0]",
           "aws_network_acl.private"
          ]
         },
         "protocol": {
          "references": [
           "var.private_inbound_acl_rules",
           "count.index"
          ]
         },
         "rule_action": {
          "references": [
           "var.private_inbound_acl_rules",
           "count.index"
          ]
         },
         "rule_number": {
          "references": [
           "var.private_inbound_acl_rules",
           "count.index"
          ]
         },
         "to_port": {
          "references": [
           "var.private_inbound_acl_rules",
           "count.index"
          ]
         }
        },
        "mode": "managed",
        "name": "private_inbound",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_network_acl_rule"
       },
       {
        "address": "aws_network_acl_rule.private_outbound",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.private_dedicated_network_acl",
          "var.private_subnets",
          "var.private_outbound_acl_rules"
         ]
        },
        "expressions": {
         "cidr_block": {
          "references": [
           "var.private_outbound_acl_rules",
           "count.index"
          ]
         },
         "egress": {
          "constant_value": true
         },
         "from_port": {
          "references": [
           "var.private_outbound_acl_rules",
           "count.index"
          ]
         },
         "icmp_code": {
          "references": [
           "var.private_outbound_acl_rules",
           "count.index"
          ]
         },
         "icmp_type": {
          "references": [
           "var.private_outbound_acl_rules",
           "count.index"
          ]
         },
         "ipv6_cidr_block": {
          "references": [
           "var.private_outbound_acl_rules",
           "count.index"
          ]
         },
         "network_acl_id": {
          "references": [
           "aws_network_acl.private[0].id",
           "aws_network_acl.private[0]",
           "aws_network_acl.private"
          ]
         },
         "protocol": {
          "references": [
           "var.private_outbound_acl_rules",
           "count.index"
          ]
         },
         "rule_action": {
          "references": [
           "var.private_outbound_acl_rules",
           "count.index"
          ]
         },
         "rule_number": {
          "references": [
           "var.private_outbound_acl_rules",
           "count.index"
          ]
         },
         "to_port": {
          "references": [
           "var.private_outbound_acl_rules",
           "count.index"
          ]
         }
        },
        "mode": "managed",
        "name": "private_outbound",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_network_acl_rule"
       },
       {
        "address": "aws_network_acl_rule.public_inbound",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.public_dedicated_network_acl",
          "var.public_subnets",
          "var.public_inbound_acl_rules"
         ]
        },
        "expressions": {
         "cidr_block": {
          "references": [
           "var.public_inbound_acl_rules",
           "count.index"
          ]
         },
         "egress": {
          "constant_value": false
         },
         "from_port": {
          "references": [
           "var.public_inbound_acl_rules",
           "count.index"
          ]
         },
         "icmp_code": {
          "references": [
           "var.public_inbound_acl_rules",
           "count.index"
          ]
         },
         "icmp_type": {
          "references": [
           "var.public_inbound_acl_rules",
           "count.index"
          ]
         },
         "ipv6_cidr_block": {
          "references": [
           "var.public_inbound_acl_rules",
           "count.index"
          ]
         },
         "network_acl_id": {
          "references": [
           "aws_network_acl.public[0].id",
           "aws_network_acl.public[0]",
           "aws_network_acl.public"
          ]
         },
         "protocol": {
          "references": [
           "var.public_inbound_acl_rules",
           "count.index"
          ]
         },
         "rule_action": {
          "references": [
           "var.public_inbound_acl_rules",
           "count.index"
          ]
         },
         "rule_number": {
          "references": [
           "var.public_inbound_acl_rules",
           "count.index"
          ]
         },
         "to_port": {
          "references": [
           "var.public_inbound_acl_rules",
           "count.index"
          ]
         }
        },
        "mode": "managed",
        "name": "public_inbound",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_network_acl_rule"
       },
       {
        "address": "aws_network_acl_rule.public_outbound",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.public_dedicated_network_acl",
          "var.public_subnets",
          "var.public_outbound_acl_rules"
         ]
        },
        "expressions": {
         "cidr_block": {
          "references": [
           "var.public_outbound_acl_rules",
           "count.index"
          ]
         },
         "egress": {
          "constant_value": true
         },
         "from_port": {
          "references": [
           "var.public_outbound_acl_rules",
           "count.index"
          ]
         },
         "icmp_code": {
          "references": [
           "var.public_outbound_acl_rules",
           "count.index"
          ]
         },
         "icmp_type": {
          "references": [
           "var.public_outbound_acl_rules",
           "count.index"
          ]
         },
         "ipv6_cidr_block": {
          "references": [
           "var.public_outbound_acl_rules",
           "count.index"
          ]
         },
         "network_acl_id": {
          "references": [
           "aws_network_acl.public[0].id",
           "aws_network_acl.public[0]",
           "aws_network_acl.public"
          ]
         },
         "protocol": {
          "references": [
           "var.public_outbound_acl_rules",
           "count.index"
          ]
         },
         "rule_action": {
          "references": [
           "var.public_outbound_acl_rules",
           "count.index"
          ]
         },
         "rule_number": {
          "references": [
           "var.public_outbound_acl_rules",
           "count.index"
          ]
         },
         "to_port": {
          "references": [
           "var.public_outbound_acl_rules",
           "count.index"
          ]
         }
        },
        "mode": "managed",
        "name": "public_outbound",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_network_acl_rule"
       },
       {
        "address": "aws_network_acl_rule.redshift_inbound",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.redshift_dedicated_network_acl",
          "var.redshift_subnets",
          "var.redshift_inbound_acl_rules"
         ]
        },
        "expressions": {
         "cidr_block": {
          "references": [
           "var.redshift_inbound_acl_rules",
           "count.index"
          ]
         },
         "egress": {
          "constant_value": false
         },
         "from_port": {
          "references": [
           "var.redshift_inbound_acl_rules",
           "count.index"
          ]
         },
         "icmp_code": {
          "references": [
           "var.redshift_inbound_acl_rules",
           "count.index"
          ]
         },
         "icmp_type": {
          "references": [
           "var.redshift_inbound_acl_rules",
           "count.index"
          ]
         },
         "ipv6_cidr_block": {
          "references": [
           "var.redshift_inbound_acl_rules",
           "count.index"
          ]
         },
         "network_acl_id": {
          "references": [
           "aws_network_acl.redshift[0].id",
           "aws_network_acl.redshift[0]",
           "aws_network_acl.redshift"
          ]
         },
         "protocol": {
          "references": [
           "var.redshift_inbound_acl_rules",
           "count.index"
          ]
         },
         "rule_action": {
          "references": [
           "var.redshift_inbound_acl_rules",
           "count.index"
          ]
         },
         "rule_number": {
          "references": [
           "var.redshift_inbound_acl_rules",
           "count.index"
          ]
         },
         "to_port": {
          "references": [
           "var.redshift_inbound_acl_rules",
           "count.index"
          ]
         }
        },
        "mode": "managed",
        "name": "redshift_inbound",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_network_acl_rule"
       },
       {
        "address": "aws_network_acl_rule.redshift_outbound",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.redshift_dedicated_network_acl",
          "var.redshift_subnets",
          "var.redshift_outbound_acl_rules"
         ]
        },
        "expressions": {
         "cidr_block": {
          "references": [
           "var.redshift_outbound_acl_rules",
           "count.index"
          ]
         },
         "egress": {
          "constant_value": true
         },
         "from_port": {
          "references": [
           "var.redshift_outbound_acl_rules",
           "count.index"
          ]
         },
         "icmp_code": {
          "references": [
           "var.redshift_outbound_acl_rules",
           "count.index"
          ]
         },
         "icmp_type": {
          "references": [
           "var.redshift_outbound_acl_rules",
           "count.index"
          ]
         },
         "ipv6_cidr_block": {
          "references": [
           "var.redshift_outbound_acl_rules",
           "count.index"
          ]
         },
         "network_acl_id": {
          "references": [
           "aws_network_acl.redshift[0].id",
           "aws_network_acl.redshift[0]",
           "aws_network_acl.redshift"
          ]
         },
         "protocol": {
          "references": [
           "var.redshift_outbound_acl_rules",
           "count.index"
          ]
         },
         "rule_action": {
          "references": [
           "var.redshift_outbound_acl_rules",
           "count.index"
          ]
         },
         "rule_number": {
          "references": [
           "var.redshift_outbound_acl_rules",
           "count.index"
          ]
         },
         "to_port": {
          "references": [
           "var.redshift_outbound_acl_rules",
           "count.index"
          ]
         }
        },
        "mode": "managed",
        "name": "redshift_outbound",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_network_acl_rule"
       },
       {
        "address": "aws_redshift_subnet_group.redshift",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.redshift_subnets",
          "var.create_redshift_subnet_group"
         ]
        },
        "expressions": {
         "description": {
          "references": [
           "var.name"
          ]
         },
         "name": {
          "references": [
           "var.redshift_subnet_group_name",
           "var.name"
          ]
         },
         "subnet_ids": {
          "references": [
           "aws_subnet.redshift"
          ]
         },
         "tags": {
          "references": [
           "var.redshift_subnet_group_name",
           "var.name",
           "var.tags",
           "var.redshift_subnet_group_tags"
          ]
         }
        },
        "mode": "managed",
        "name": "redshift",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_redshift_subnet_group"
       },
       {
        "address": "aws_route.database_internet_gateway",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.create_igw",
          "var.create_database_subnet_route_table",
          "var.database_subnets",
          "var.create_database_internet_gateway_route",
          "var.create_database_nat_gateway_route"
         ]
        },
        "expressions": {
         "destination_cidr_block": {
          "constant_value": "0.0.0.0/0"
         },
         "gateway_id": {
          "references": [
           "aws_internet_gateway.this[0].id",
           "aws_internet_gateway.this[0]",
           "aws_internet_gateway.this"
          ]
         },
         "route_table_id": {
          "references": [
           "aws_route_table.database[0].id",
           "aws_route_table.database[0]",
           "aws_route_table.database"
          ]
         },
         "timeouts": {
          "create": {
           "constant_value": "5m"
          }
         }
        },
        "mode": "managed",
        "name": "database_internet_gateway",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_route"
       },
       {
        "address": "aws_route.database_ipv6_egress",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.create_egress_only_igw",
          "var.enable_ipv6",
          "var.create_database_subnet_route_table",
          "var.database_subnets",
          "var.create_database_internet_gateway_route"
         ]
        },
        "expressions": {
         "destination_ipv6_cidr_block": {
          "constant_value": "::/0"
         },
         "egress_only_gateway_id": {
          "references": [
           "aws_egress_only_internet_gateway.this[0].id",
           "aws_egress_only_internet_gateway.this[0]",
           "aws_egress_only_internet_gateway.this"
          ]
         },
         "route_table_id": {
          "references": [
           "aws_route_table.database[0].id",
           "aws_route_table.database[0]",
           "aws_route_table.database"
          ]
         },
         "timeouts": {
          "create": {
           "constant_value": "5m"
          }
         }
        },
        "mode": "managed",
        "name": "database_ipv6_egress",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_route"
       },
       {
        "address": "aws_route.database_nat_gateway",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.create_database_subnet_route_table",
          "var.database_subnets",
          "var.create_database_internet_gateway_route",
          "var.create_database_nat_gateway_route",
          "var.enable_nat_gateway",
          "var.single_nat_gateway",
          "var.database_subnets"
         ]
        },
        "expressions": {
         "destination_cidr_block": {
          "constant_value": "0.0.0.0/0"
         },
         "nat_gateway_id": {
          "references": [
           "aws_nat_gateway.this",
           "count.index"
          ]
         },
         "route_table_id": {
          "references": [
           "aws_route_table.database",
           "count.index"
          ]
         },
         "timeouts": {
          "create": {
           "constant_value": "5m"
          }
         }
        },
        "mode": "managed",
        "name": "database_nat_gateway",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_route"
       },
       {
        "address": "aws_route.private_ipv6_egress",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.create_egress_only_igw",
          "var.enable_ipv6",
          "var.private_subnets"
         ]
        },
        "expressions": {
         "destination_ipv6_cidr_block": {
          "constant_value": "::/0"
         },
         "egress_only_gateway_id": {
          "references": [
           "aws_egress_only_internet_gateway.this"
          ]
         },
         "route_table_id": {
          "references": [
           "aws_route_table.private",
           "count.index"
          ]
         }
        },
        "mode": "managed",
        "name": "private_ipv6_egress",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_route"
       },
       {
        "address": "aws_route.private_nat_gateway",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.enable_nat_gateway",
          "local.nat_gateway_count"
         ]
        },
        "expressions": {
         "destination_cidr_block": {
          "references": [
           "var.nat_gateway_destination_cidr_block"
          ]
         },
         "nat_gateway_id": {
          "references": [
           "aws_nat_gateway.this",
           "count.index"
          ]
         },
         "route_table_id": {
          "references": [
           "aws_route_table.private",
           "count.index"
          ]
         },
         "timeouts": {
          "create": {
           "constant_value": "5m"
          }
         }
        },
        "mode": "managed",
        "name": "private_nat_gateway",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_route"
       },
       {
        "address": "aws_route.public_internet_gateway",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.create_igw",
          "var.public_subnets"
         ]
        },
        "expressions": {
         "destination_cidr_block": {
          "constant_value": "0.0.0.0/0"
         },
         "gateway_id": {
          "references": [
           "aws_internet_gateway.this[0].id",
           "aws_internet_gateway.this[0]",
           "aws_internet_gateway.this"
          ]
         },
         "route_table_id": {
          "references": [
           "aws_route_table.public[0].id",
           "aws_route_table.public[0]",
           "aws_route_table.public"
          ]
         },
         "timeouts": {
          "create": {
           "constant_value": "5m"
          }
         }
        },
        "mode": "managed",
        "name": "public_internet_gateway",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_route"
       },
       {
        "address": "aws_route.public_internet_gateway_ipv6",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.create_igw",
          "var.enable_ipv6",
          "var.public_subnets"
         ]
        },
        "expressions": {
         "destination_ipv6_cidr_block": {
          "constant_value": "::/0"
         },
         "gateway_id": {
          "references": [
           "aws_internet_gateway.this[0].id",
           "aws_internet_gateway.this[0]",
           "aws_internet_gateway.this"
          ]
         },
         "route_table_id": {
          "references": [
           "aws_route_table.public[0].id",
           "aws_route_table.public[0]",
           "aws_route_table.public"
          ]
         }
        },
        "mode": "managed",
        "name": "public_internet_gateway_ipv6",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_route"
       },
       {
        "address": "aws_route_table.database",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.create_database_subnet_route_table",
          "var.database_subnets",
          "var.single_nat_gateway",
          "var.create_database_internet_gateway_route",
          "var.database_subnets"
         ]
        },
        "expressions": {
         "tags": {
          "references": [
           "var.single_nat_gateway",
           "var.create_database_internet_gateway_route",
           "var.name",
           "var.database_subnet_suffix",
           "var.name",
           "var.database_subnet_suffix",
           "var.azs",
           "count.index",
           "var.tags",
           "var.database_route_table_tags"
          ]
         },
         "vpc_id": {
          "references": [
           "local.vpc_id"
          ]
         }
        },
        "mode": "managed",
        "name": "database",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_route_table"
       },
       {
        "address": "aws_route_table.elasticache",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.create_elasticache_subnet_route_table",
          "var.elasticache_subnets"
         ]
        },
        "expressions": {
         "tags": {
          "references": [
           "var.name",
           "var.elasticache_subnet_suffix",
           "var.tags",
           "var.elasticache_route_table_tags"
          ]
         },
         "vpc_id": {
          "references": [
           "local.vpc_id"
          ]
         }
        },
        "mode": "managed",
        "name": "elasticache",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_route_table"
       },
       {
        "address": "aws_route_table.intra",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.intra_subnets"
         ]
        },
        "expressions": {
         "tags": {
          "references": [
           "var.name",
           "var.intra_subnet_suffix",
           "var.tags",
           "var.intra_route_table_tags"
          ]
         },
         "vpc_id": {
          "references": [
           "local.vpc_id"
          ]
         }
        },
        "mode": "managed",
        "name": "intra",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_route_table"
       },
       {
        "address": "aws_route_table.private",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "local.max_subnet_length",
          "local.nat_gateway_count"
         ]
        },
        "expressions": {
         "tags": {
          "references": [
           "var.single_nat_gateway",
           "var.name",
           "var.private_subnet_suffix",
           "var.name",
           "var.private_subnet_suffix",
           "var.azs",
           "count.index",
           "var.tags",
           "var.private_route_table_tags"
          ]
         },
         "vpc_id": {
          "references": [
           "local.vpc_id"
          ]
         }
        },
        "mode": "managed",
        "name": "private",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_route_table"
       },
       {
        "address": "aws_route_table.public",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.public_subnets"
         ]
        },
        "expressions": {
         "tags": {
          "references": [
           "var.name",
           "var.public_subnet_suffix",
           "var.tags",
           "var.public_route_table_tags"
          ]
         },
         "vpc_id": {
          "references": [
           "local.vpc_id"
          ]
         }
        },
        "mode": "managed",
        "name": "public",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_route_table"
       },
       {
        "address": "aws_route_table.redshift",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.create_redshift_subnet_route_table",
          "var.redshift_subnets"
         ]
        },
        "expressions": {
         "tags": {
          "references": [
           "var.name",
           "var.redshift_subnet_suffix",
           "var.tags",
           "var.redshift_route_table_tags"
          ]
         },
         "vpc_id": {
          "references": [
           "local.vpc_id"
          ]
         }
        },
        "mode": "managed",
        "name": "redshift",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_route_table"
       },
       {
        "address": "aws_route_table_association.database",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.database_subnets",
          "var.database_subnets"
         ]
        },
        "expressions": {
         "route_table_id": {
          "references": [
           "aws_route_table.database",
           "aws_route_table.private",
           "var.create_database_subnet_route_table",
           "var.single_nat_gateway",
           "var.create_database_internet_gateway_route",
           "count.index",
           "count.index"
          ]
         },
         "subnet_id": {
          "references": [
           "aws_subnet.database",
           "count.index"
          ]
         }
        },
        "mode": "managed",
        "name": "database",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_route_table_association"
       },
       {
        "address": "aws_route_table_association.elasticache",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.elasticache_subnets",
          "var.elasticache_subnets"
         ]
        },
        "expressions": {
         "route_table_id": {
          "references": [
           "aws_route_table.elasticache",
           "aws_route_table.private",
           "var.single_nat_gateway",
           "var.create_elasticache_subnet_route_table",
           "count.index"
          ]
         },
         "subnet_id": {
          "references": [
           "aws_subnet.elasticache",
           "count.index"
          ]
         }
        },
        "mode": "managed",
        "name": "elasticache",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_route_table_association"
       },
       {
        "address": "aws_route_table_association.intra",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.intra_subnets",
          "var.intra_subnets"
         ]
        },
        "expressions": {
         "route_table_id": {
          "references": [
           "aws_route_table.intra"
          ]
         },
         "subnet_id": {
          "references": [
           "aws_subnet.intra",
           "count.index"
          ]
         }
        },
        "mode": "managed",
        "name": "intra",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_route_table_association"
       },
       {
        "address": "aws_route_table_association.outpost",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.outpost_subnets",
          "var.outpost_subnets"
         ]
        },
        "expressions": {
         "route_table_id": {
          "references": [
           "aws_route_table.private",
           "var.single_nat_gateway",
           "count.index"
          ]
         },
         "subnet_id": {
          "references": [
           "aws_subnet.outpost",
           "count.index"
          ]
         }
        },
        "mode": "managed",
        "name": "outpost",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_route_table_association"
       },
       {
        "address": "aws_route_table_association.private",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.private_subnets",
          "var.private_subnets"
         ]
        },
        "expressions": {
         "route_table_id": {
          "references": [
           "aws_route_table.private",
           "var.single_nat_gateway",
           "count.index"
          ]
         },
         "subnet_id": {
          "references": [
           "aws_subnet.private",
           "count.index"
          ]
         }
        },
        "mode": "managed",
        "name": "private",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_route_table_association"
       },
       {
        "address": "aws_route_table_association.public",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.public_subnets",
          "var.public_subnets"
         ]
        },
        "expressions": {
         "route_table_id": {
          "references": [
           "aws_route_table.public[0].id",
           "aws_route_table.public[0]",
           "aws_route_table.public"
          ]
         },
         "subnet_id": {
          "references": [
           "aws_subnet.public",
           "count.index"
          ]
         }
        },
        "mode": "managed",
        "name": "public",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_route_table_association"
       },
       {
        "address": "aws_route_table_association.redshift",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.redshift_subnets",
          "var.enable_public_redshift",
          "var.redshift_subnets"
         ]
        },
        "expressions": {
         "route_table_id": {
          "references": [
           "aws_route_table.redshift",
           "aws_route_table.private",
           "var.single_nat_gateway",
           "var.create_redshift_subnet_route_table",
           "count.index"
          ]
         },
         "subnet_id": {
          "references": [
           "aws_subnet.redshift",
           "count.index"
          ]
         }
        },
        "mode": "managed",
        "name": "redshift",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_route_table_association"
       },
       {
        "address": "aws_route_table_association.redshift_public",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.redshift_subnets",
          "var.enable_public_redshift",
          "var.redshift_subnets"
         ]
        },
        "expressions": {
         "route_table_id": {
          "references": [
           "aws_route_table.redshift",
           "aws_route_table.public",
           "var.single_nat_gateway",
           "var.create_redshift_subnet_route_table",
           "count.index"
          ]
         },
         "subnet_id": {
          "references": [
           "aws_subnet.redshift",
           "count.index"
          ]
         }
        },
        "mode": "managed",
        "name": "redshift_public",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_route_table_association"
       },
       {
        "address": "aws_subnet.database",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.database_subnets",
          "var.database_subnets"
         ]
        },
        "expressions": {
         "assign_ipv6_address_on_creation": {
          "references": [
           "var.database_subnet_assign_ipv6_address_on_creation",
           "var.assign_ipv6_address_on_creation",
           "var.database_subnet_assign_ipv6_address_on_creation"
          ]
         },
         "availability_zone": {
          "references": [
           "var.azs",
           "count.index",
           "var.azs",
           "count.index"
          ]
         },
         "availability_zone_id": {
          "references": [
           "var.azs",
           "count.index",
           "var.azs",
           "count.index"
          ]
         },
         "cidr_block": {
          "references": [
           "var.database_subnets",
           "count.index"
          ]
         },
         "ipv6_cidr_block": {
          "references": [
           "var.enable_ipv6",
           "var.database_subnet_ipv6_prefixes",
           "aws_vpc.this[0].ipv6_cidr_block",
           "aws_vpc.this[0]",
           "aws_vpc.this",
           "var.database_subnet_ipv6_prefixes",
           "count.index"
          ]
         },
         "tags": {
          "references": [
           "var.database_subnet_names",
           "count.index",
           "var.name",
           "var.database_subnet_suffix",
           "var.azs",
           "count.index",
           "var.tags",
           "var.database_subnet_tags"
          ]
         },
         "vpc_id": {
          "references": [
           "local.vpc_id"
          ]
         }
        },
        "mode": "managed",
        "name": "database",
        "provider_config_key": "aws",
        "schema_version": 1,
        "type": "aws_subnet"
       },
       {
        "address": "aws_subnet.elasticache",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.elasticache_subnets",
          "var.elasticache_subnets"
         ]
        },
        "expressions": {
         "assign_ipv6_address_on_creation": {
          "references": [
           "var.elasticache_subnet_assign_ipv6_address_on_creation",
           "var.assign_ipv6_address_on_creation",
           "var.elasticache_subnet_assign_ipv6_address_on_creation"
          ]
         },
         "availability_zone": {
          "references": [
           "var.azs",
           "count.index",
           "var.azs",
           "count.index"
          ]
         },
         "availability_zone_id": {
          "references": [
           "var.azs",
           "count.index",
           "var.azs",
           "count.index"
          ]
         },
         "cidr_block": {
          "references": [
           "var.elasticache_subnets",
           "count.index"
          ]
         },
         "ipv6_cidr_block": {
          "references": [
           "var.enable_ipv6",
           "var.elasticache_subnet_ipv6_prefixes",
           "aws_vpc.this[0].ipv6_cidr_block",
           "aws_vpc.this[0]",
           "aws_vpc.this",
           "var.elasticache_subnet_ipv6_prefixes",
           "count.index"
          ]
         },
         "tags": {
          "references": [
           "var.elasticache_subnet_names",
           "count.index",
           "var.name",
           "var.elasticache_subnet_suffix",
           "var.azs",
           "count.index",
           "var.tags",
           "var.elasticache_subnet_tags"
          ]
         },
         "vpc_id": {
          "references": [
           "local.vpc_id"
          ]
         }
        },
        "mode": "managed",
        "name": "elasticache",
        "provider_config_key": "aws",
        "schema_version": 1,
        "type": "aws_subnet"
       },
       {
        "address": "aws_subnet.intra",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.intra_subnets",
          "var.intra_subnets"
         ]
        },
        "expressions": {
         "assign_ipv6_address_on_creation": {
          "references": [
           "var.intra_subnet_assign_ipv6_address_on_creation",
           "var.assign_ipv6_address_on_creation",
           "var.intra_subnet_assign_ipv6_address_on_creation"
          ]
         },
         "availability_zone": {
          "references": [
           "var.azs",
           "count.index",
           "var.azs",
           "count.index"
          ]
         },
         "availability_zone_id": {
          "references": [
           "var.azs",
           "count.index",
           "var.azs",
           "count.index"
          ]
         },
         "cidr_block": {
          "references": [
           "var.intra_subnets",
           "count.index"
          ]
         },
         "ipv6_cidr_block": {
          "references": [
           "var.enable_ipv6",
           "var.intra_subnet_ipv6_prefixes",
           "aws_vpc.this[0].ipv6_cidr_block",
           "aws_vpc.this[0]",
           "aws_vpc.this",
           "var.intra_subnet_ipv6_prefixes",
           "count.index"
          ]
         },
         "tags": {
          "references": [
           "var.intra_subnet_names",
           "count.index",
           "var.name",
           "var.intra_subnet_suffix",
           "var.azs",
           "count.index",
           "var.tags",
           "var.intra_subnet_tags"
          ]
         },
         "vpc_id": {
          "references": [
           "local.vpc_id"
          ]
         }
        },
        "mode": "managed",
        "name": "intra",
        "provider_config_key": "aws",
        "schema_version": 1,
        "type": "aws_subnet"
       },
       {
        "address": "aws_subnet.outpost",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.outpost_subnets",
          "var.outpost_subnets"
         ]
        },
        "expressions": {
         "assign_ipv6_address_on_creation": {
          "references": [
           "var.outpost_subnet_assign_ipv6_address_on_creation",
           "var.assign_ipv6_address_on_creation",
           "var.outpost_subnet_assign_ipv6_address_on_creation"
          ]
         },
         "availability_zone": {
          "references": [
           "var.outpost_az"
          ]
         },
         "cidr_block": {
          "references": [
           "var.outpost_subnets",
           "count.index"
          ]
         },
         "ipv6_cidr_block": {
          "references": [
           "var.enable_ipv6",
           "var.outpost_subnet_ipv6_prefixes",
           "aws_vpc.this[0].ipv6_cidr_block",
           "aws_vpc.this[0]",
           "aws_vpc.this",
           "var.outpost_subnet_ipv6_prefixes",
           "count.index"
          ]
         },
         "outpost_arn": {
          "references": [
           "var.outpost_arn"
          ]
         },
         "tags": {
          "references": [
           "var.outpost_subnet_names",
           "count.index",
           "var.name",
           "var.outpost_subnet_suffix",
           "var.outpost_az",
           "var.tags",
           "var.outpost_subnet_tags"
          ]
         },
         "vpc_id": {
          "references": [
           "local.vpc_id"
          ]
         }
        },
        "mode": "managed",
        "name": "outpost",
        "provider_config_key": "aws",
        "schema_version": 1,
        "type": "aws_subnet"
       },
       {
        "address": "aws_subnet.private",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.private_subnets",
          "var.private_subnets"
         ]
        },
        "expressions": {
         "assign_ipv6_address_on_creation": {
          "references": [
           "var.private_subnet_assign_ipv6_address_on_creation",
           "var.assign_ipv6_address_on_creation",
           "var.private_subnet_assign_ipv6_address_on_creation"
          ]
         },
         "availability_zone": {
          "references": [
           "var.azs",
           "count.index",
           "var.azs",
           "count.index"
          ]
         },
         "availability_zone_id": {
          "references": [
           "var.azs",
           "count.index",
           "var.azs",
           "count.index"
          ]
         },
         "cidr_block": {
          "references": [
           "var.private_subnets",
           "count.index"
          ]
         },
         "ipv6_cidr_block": {
          "references": [
           "var.enable_ipv6",
           "var.private_subnet_ipv6_prefixes",
           "aws_vpc.this[0].ipv6_cidr_block",
           "aws_vpc.this[0]",
           "aws_vpc.this",
           "var.private_subnet_ipv6_prefixes",
           "count.index"
          ]
         },
         "tags": {
          "references": [
           "var.private_subnet_names",
           "count.index",
           "var.name",
           "var.private_subnet_suffix",
           "var.azs",
           "count.index",
           "var.tags",
           "var.private_subnet_tags"
          ]
         },
         "vpc_id": {
          "references": [
           "local.vpc_id"
          ]
         }
        },
        "mode": "managed",
        "name": "private",
        "provider_config_key": "aws",
        "schema_version": 1,
        "type": "aws_subnet"
       },
       {
        "address": "aws_subnet.public",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.public_subnets",
          "var.one_nat_gateway_per_az",
          "var.public_subnets",
          "var.azs",
          "var.public_subnets"
         ]
        },
        "expressions": {
         "assign_ipv6_address_on_creation": {
          "references": [
           "var.public_subnet_assign_ipv6_address_on_creation",
           "var.assign_ipv6_address_on_creation",
           "var.public_subnet_assign_ipv6_address_on_creation"
          ]
         },
         "availability_zone": {
          "references": [
           "var.azs",
           "count.index",
           "var.azs",
           "count.index"
          ]
         },
         "availability_zone_id": {
          "references": [
           "var.azs",
           "count.index",
           "var.azs",
           "count.index"
          ]
         },
         "cidr_block": {
          "references": [
           "var.public_subnets",
           "count.index"
          ]
         },
         "ipv6_cidr_block": {
          "references": [
           "var.enable_ipv6",
           "var.public_subnet_ipv6_prefixes",
           "aws_vpc.this[0].ipv6_cidr_block",
           "aws_vpc.this[0]",
           "aws_vpc.this",
           "var.public_subnet_ipv6_prefixes",
           "count.index"
          ]
         },
         "map_public_ip_on_launch": {
          "references": [
           "var.map_public_ip_on_launch"
          ]
         },
         "tags": {
          "references": [
           "var.public_subnet_names",
           "count.index",
           "var.name",
           "var.public_subnet_suffix",
           "var.azs",
           "count.index",
           "var.tags",
           "var.public_subnet_tags"
          ]
         },
         "vpc_id": {
          "references": [
           "local.vpc_id"
          ]
         }
        },
        "mode": "managed",
        "name": "public",
        "provider_config_key": "aws",
        "schema_version": 1,
        "type": "aws_subnet"
       },
       {
        "address": "aws_subnet.redshift",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.redshift_subnets",
          "var.redshift_subnets"
         ]
        },
        "expressions": {
         "assign_ipv6_address_on_creation": {
          "references": [
           "var.redshift_subnet_assign_ipv6_address_on_creation",
           "var.assign_ipv6_address_on_creation",
           "var.redshift_subnet_assign_ipv6_address_on_creation"
          ]
         },
         "availability_zone": {
          "references": [
           "var.azs",
           "count.index",
           "var.azs",
           "count.index"
          ]
         },
         "availability_zone_id": {
          "references": [
           "var.azs",
           "count.index",
           "var.azs",
           "count.index"
          ]
         },
         "cidr_block": {
          "references": [
           "var.redshift_subnets",
           "count.index"
          ]
         },
         "ipv6_cidr_block": {
          "references": [
           "var.enable_ipv6",
           "var.redshift_subnet_ipv6_prefixes",
           "aws_vpc.this[0].ipv6_cidr_block",
           "aws_vpc.this[0]",
           "aws_vpc.this",
           "var.redshift_subnet_ipv6_prefixes",
           "count.index"
          ]
         },
         "tags": {
          "references": [
           "var.redshift_subnet_names",
           "count.index",
           "var.name",
           "var.redshift_subnet_suffix",
           "var.azs",
           "count.index",
           "var.tags",
           "var.redshift_subnet_tags"
          ]
         },
         "vpc_id": {
          "references": [
           "local.vpc_id"
          ]
         }
        },
        "mode": "managed",
        "name": "redshift",
        "provider_config_key": "aws",
        "schema_version": 1,
        "type": "aws_subnet"
       },
       {
        "address": "aws_vpc.this",
        "count_expression": {
         "references": [
          "local.create_vpc"
         ]
        },
        "expressions": {
         "assign_generated_ipv6_cidr_block": {
          "references": [
           "var.enable_ipv6",
           "var.use_ipam_pool"
          ]
         },
         "cidr_block": {
          "references": [
           "var.use_ipam_pool",
           "var.cidr"
          ]
         },
         "enable_classiclink": {
          "constant_value": null
         },
         "enable_classiclink_dns_support": {
          "constant_value": null
         },
         "enable_dns_hostnames": {
          "references": [
           "var.enable_dns_hostnames"
          ]
         },
         "enable_dns_support": {
          "references": [
           "var.enable_dns_support"
          ]
         },
         "instance_tenancy": {
          "references": [
           "var.instance_tenancy"
          ]
         },
         "ipv4_ipam_pool_id": {
          "references": [
           "var.ipv4_ipam_pool_id"
          ]
         },
         "ipv4_netmask_length": {
          "references": [
           "var.ipv4_netmask_length"
          ]
         },
         "ipv6_cidr_block": {
          "references": [
           "var.ipv6_cidr"
          ]
         },
         "ipv6_ipam_pool_id": {
          "references": [
           "var.ipv6_ipam_pool_id"
          ]
         },
         "ipv6_netmask_length": {
          "references": [
           "var.ipv6_netmask_length"
          ]
         },
         "tags": {
          "references": [
           "var.name",
           "var.tags",
           "var.vpc_tags"
          ]
         }
        },
        "mode": "managed",
        "name": "this",
        "provider_config_key": "aws",
        "schema_version": 1,
        "type": "aws_vpc"
       },
       {
        "address": "aws_vpc_dhcp_options.this",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.enable_dhcp_options"
         ]
        },
        "expressions": {
         "domain_name": {
          "references": [
           "var.dhcp_options_domain_name"
          ]
         },
         "domain_name_servers": {
          "references": [
           "var.dhcp_options_domain_name_servers"
          ]
         },
         "netbios_name_servers": {
          "references": [
           "var.dhcp_options_netbios_name_servers"
          ]
         },
         "netbios_node_type": {
          "references": [
           "var.dhcp_options_netbios_node_type"
          ]
         },
         "ntp_servers": {
          "references": [
           "var.dhcp_options_ntp_servers"
          ]
         },
         "tags": {
          "references": [
           "var.name",
           "var.tags",
           "var.dhcp_options_tags"
          ]
         }
        },
        "mode": "managed",
        "name": "this",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_vpc_dhcp_options"
       },
       {
        "address": "aws_vpc_dhcp_options_association.this",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.enable_dhcp_options"
         ]
        },
        "expressions": {
         "dhcp_options_id": {
          "references": [
           "aws_vpc_dhcp_options.this[0].id",
           "aws_vpc_dhcp_options.this[0]",
           "aws_vpc_dhcp_options.this"
          ]
         },
         "vpc_id": {
          "references": [
           "local.vpc_id"
          ]
         }
        },
        "mode": "managed",
        "name": "this",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_vpc_dhcp_options_association"
       },
       {
        "address": "aws_vpc_ipv4_cidr_block_association.this",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.secondary_cidr_blocks",
          "var.secondary_cidr_blocks"
         ]
        },
        "expressions": {
         "cidr_block": {
          "references": [
           "var.secondary_cidr_blocks",
           "count.index"
          ]
         },
         "vpc_id": {
          "references": [
           "aws_vpc.this[0].id",
           "aws_vpc.this[0]",
           "aws_vpc.this"
          ]
         }
        },
        "mode": "managed",
        "name": "this",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_vpc_ipv4_cidr_block_association"
       },
       {
        "address": "aws_vpn_gateway.this",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.enable_vpn_gateway"
         ]
        },
        "expressions": {
         "amazon_side_asn": {
          "references": [
           "var.amazon_side_asn"
          ]
         },
         "availability_zone": {
          "references": [
           "var.vpn_gateway_az"
          ]
         },
         "tags": {
          "references": [
           "var.name",
           "var.tags",
           "var.vpn_gateway_tags"
          ]
         },
         "vpc_id": {
          "references": [
           "local.vpc_id"
          ]
         }
        },
        "mode": "managed",
        "name": "this",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_vpn_gateway"
       },
       {
        "address": "aws_vpn_gateway_attachment.this",
        "count_expression": {
         "references": [
          "var.vpn_gateway_id"
         ]
        },
        "expressions": {
         "vpc_id": {
          "references": [
           "local.vpc_id"
          ]
         },
         "vpn_gateway_id": {
          "references": [
           "var.vpn_gateway_id"
          ]
         }
        },
        "mode": "managed",
        "name": "this",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_vpn_gateway_attachment"
       },
       {
        "address": "aws_vpn_gateway_route_propagation.intra",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.propagate_intra_route_tables_vgw",
          "var.enable_vpn_gateway",
          "var.vpn_gateway_id",
          "var.intra_subnets"
         ]
        },
        "expressions": {
         "route_table_id": {
          "references": [
           "aws_route_table.intra",
           "count.index"
          ]
         },
         "vpn_gateway_id": {
          "references": [
           "aws_vpn_gateway.this",
           "aws_vpn_gateway_attachment.this",
           "count.index"
          ]
         }
        },
        "mode": "managed",
        "name": "intra",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_vpn_gateway_route_propagation"
       },
       {
        "address": "aws_vpn_gateway_route_propagation.private",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.propagate_private_route_tables_vgw",
          "var.enable_vpn_gateway",
          "var.vpn_gateway_id",
          "var.private_subnets"
         ]
        },
        "expressions": {
         "route_table_id": {
          "references": [
           "aws_route_table.private",
           "count.index"
          ]
         },
         "vpn_gateway_id": {
          "references": [
           "aws_vpn_gateway.this",
           "aws_vpn_gateway_attachment.this",
           "count.index"
          ]
         }
        },
        "mode": "managed",
        "name": "private",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_vpn_gateway_route_propagation"
       },
       {
        "address": "aws_vpn_gateway_route_propagation.public",
        "count_expression": {
         "references": [
          "local.create_vpc",
          "var.propagate_public_route_tables_vgw",
          "var.enable_vpn_gateway",
          "var.vpn_gateway_id"
         ]
        },
        "expressions": {
         "route_table_id": {
          "references": [
           "aws_route_table.public",
           "count.index"
          ]
         },
         "vpn_gateway_id": {
          "references": [
           "aws_vpn_gateway.this",
           "aws_vpn_gateway_attachment.this",
           "count.index"
          ]
         }
        },
        "mode": "managed",
        "name": "public",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_vpn_gateway_route_propagation"
       },
       {
        "address": "data.aws_iam_policy_document.flow_log_cloudwatch_assume_role",
        "count_expression": {
         "references": [
          "local.create_flow_log_cloudwatch_iam_role"
         ]
        },
        "expressions": {
         "statement": [
          {
           "actions": {
            "constant_value": [
             "sts:AssumeRole"
            ]
           },
           "effect": {
            "constant_value": "Allow"
           },
           "principals": [
            {
             "identifiers": {
              "constant_value": [
               "vpc-flow-logs.amazonaws.com"
              ]
             },
             "type": {
              "constant_value": "Service"
             }
            }
           ],
           "sid": {
            "constant_value": "AWSVPCFlowLogsAssumeRole"
           }
          }
         ]
        },
        "mode": "data",
        "name": "flow_log_cloudwatch_assume_role",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_iam_policy_document"
       },
       {
        "address": "data.aws_iam_policy_document.vpc_flow_log_cloudwatch",
        "count_expression": {
         "references": [
          "local.create_flow_log_cloudwatch_iam_role"
         ]
        },
        "expressions": {
         "statement": [
          {
           "actions": {
            "constant_value": [
             "logs:CreateLogStream",
             "logs:PutLogEvents",
             "logs:DescribeLogGroups",
             "logs:DescribeLogStreams"
            ]
           },
           "effect": {
            "constant_value": "Allow"
           },
           "resources": {
            "constant_value": [
             "*"
            ]
           },
           "sid": {
            "constant_value": "AWSVPCFlowLogsPushToCloudWatch"
           }
          }
         ]
        },
        "mode": "data",
        "name": "vpc_flow_log_cloudwatch",
        "provider_config_key": "aws",
        "schema_version": 0,
        "type": "aws_iam_policy_document"
       }
      ],
      "variables": {
       "amazon_side_asn": {
        "default": "64512",
        "description": "The Autonomous System Number (ASN) for the Amazon side of the gateway. By default the virtual private gateway is created with the current default Amazon ASN."
       },
       "assign_ipv6_address_on_creation": {
        "default": false,
        "description": "Assign IPv6 address on subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch"
       },
       "azs": {
        "default": [],
        "description": "A list of availability zones names or ids in the region"
       },
       "cidr": {
        "default": "0.0.0.0/0",
        "description": "(Optional) The IPv4 CIDR block for the VPC. CIDR can be explicitly set or it can be derived from IPAM using `ipv4_netmask_length` \u0026 `ipv4_ipam_pool_id`"
       },
       "create_database_internet_gateway_route": {
        "default": false,
        "description": "Controls if an internet gateway route for public database access should be created"
       },
       "create_database_nat_gateway_route": {
        "default": false,
        "description": "Controls if a nat gateway route should be created to give internet access to the database subnets"
       },
       "create_database_subnet_group": {
        "default": true,
        "description": "Controls if database subnet group should be created (n.b. database_subnets must also be set)"
       },
       "create_database_subnet_route_table": {
        "default": false,
        "description": "Controls if separate route table for database should be created"
       },
       "create_egress_only_igw": {
        "default": true,
        "description": "Controls if an Egress Only Internet Gateway is created and its related routes."
       },
       "create_elasticache_subnet_group": {
        "default": true,
        "description": "Controls if elasticache subnet group should be created"
       },
       "create_elasticache_subnet_route_table": {
        "default": false,
        "description": "Controls if separate route table for elasticache should be created"
       },
       "create_flow_log_cloudwatch_iam_role": {
        "default": false,
        "description": "Whether to create IAM role for VPC Flow Logs"
       },
       "create_flow_log_cloudwatch_log_group": {
        "default": false,
        "description": "Whether to create CloudWatch log group for VPC Flow Logs"
       },
       "create_igw": {
        "default": true,
        "description": "Controls if an Internet Gateway is created for public subnets and the related routes that connect them."
       },
       "create_redshift_subnet_group": {
        "default": true,
        "description": "Controls if redshift subnet group should be created"
       },
       "create_redshift_subnet_route_table": {
        "default": false,
        "description": "Controls if separate route table for redshift should be created"
       },
       "create_vpc": {
        "default": true,
        "description": "Controls if VPC should be created (it affects almost all resources)"
       },
       "customer_gateway_tags": {
        "default": {},
        "description": "Additional tags for the Customer Gateway"
       },
       "customer_gateways": {
        "default": {},
        "description": "Maps of Customer Gateway's attributes (BGP ASN and Gateway's Internet-routable external IP address)"
       },
       "database_acl_tags": {
        "default": {},
        "description": "Additional tags for the database subnets network ACL"
       },
       "database_dedicated_network_acl": {
        "default": false,
        "description": "Whether to use dedicated network ACL (not default) and custom rules for database subnets"
       },
       "database_inbound_acl_rules": {
        "default": [
         {
          "cidr_block": "0.0.0.0/0",
          "from_port": "0",
          "protocol": "-1",
          "rule_action": "allow",
          "rule_number": "100",
          "to_port": "0"
         }
        ],
        "description": "Database subnets inbound network ACL rules"
       },
       "database_outbound_acl_rules": {
        "default": [
         {
          "cidr_block": "0.0.0.0/0",
          "from_port": "0",
          "protocol": "-1",
          "rule_action": "allow",
          "rule_number": "100",
          "to_port": "0"
         }
        ],
        "description": "Database subnets outbound network ACL rules"
       },
       "database_route_table_tags": {
        "default": {},
        "description": "Additional tags for the database route tables"
       },
       "database_subnet_assign_ipv6_address_on_creation": {
        "default": null,
        "description": "Assign IPv6 address on database subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch"
       },
       "database_subnet_group_name": {
        "default": null,
        "description": "Name of database subnet group"
       },
       "database_subnet_group_tags": {
        "default": {},
        "description": "Additional tags for the database subnet group"
       },
       "database_subnet_ipv6_prefixes": {
        "default": [],
        "description": "Assigns IPv6 database subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list"
       },
       "database_subnet_names": {
        "default": [],
        "description": "Explicit values to use in the Name tag on database subnets. If empty, Name tags are generated."
       },
       "database_subnet_suffix": {
        "default": "db",
        "description": "Suffix to append to database subnets name"
       },
       "database_subnet_tags": {
        "default": {},
        "description": "Additional tags for the database subnets"
       },
       "database_subnets": {
        "default": [],
        "description": "A list of database subnets"
       },
       "default_network_acl_egress": {
        "default": [
         {
          "action": "allow",
          "cidr_block": "0.0.0.0/0",
          "from_port": "0",
          "protocol": "-1",
          "rule_no": "100",
          "to_port": "0"
         },
         {
          "action": "allow",
          "from_port": "0",
          "ipv6_cidr_block": "::/0",
          "protocol": "-1",
          "rule_no": "101",
          "to_port": "0"
         }
        ],
        "description": "List of maps of egress rules to set on the Default Network ACL"
       },
       "default_network_acl_ingress": {
        "default": [
         {
          "action": "allow",
          "cidr_block": "0.0.0.0/0",
          "from_port": "0",
          "protocol": "-1",
          "rule_no": "100",
          "to_port": "0"
         },
         {
          "action": "allow",
          "from_port": "0",
          "ipv6_cidr_block": "::/0",
          "protocol": "-1",
          "rule_no": "101",
          "to_port": "0"
         }
        ],
        "description": "List of maps of ingress rules to set on the Default Network ACL"
       },
       "default_network_acl_name": {
        "default": null,
        "description": "Name to be used on the Default Network ACL"
       },
       "default_network_acl_tags": {
        "default": {},
        "description": "Additional tags for the Default Network ACL"
       },
       "default_route_table_name": {
        "default": null,
        "description": "Name to be used on the default route table"
       },
       "default_route_table_propagating_vgws": {
        "default": [],
        "description": "List of virtual gateways for propagation"
       },
       "default_route_table_routes": {
        "default": [],
        "description": "Configuration block of routes. See https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/default_route_table#route"
       },
       "default_route_table_tags": {
        "default": {},
        "description": "Additional tags for the default route table"
       },
       "default_security_group_egress": {
        "default": [],
        "description": "List of maps of egress rules to set on the default security group"
       },
       "default_security_group_ingress": {
        "default": [],
        "description": "List of maps of ingress rules to set on the default security group"
       },
       "default_security_group_name": {
        "default": null,
        "description": "Name to be used on the default security group"
       },
       "default_security_group_tags": {
        "default": {},
        "description": "Additional tags for the default security group"
       },
       "default_vpc_enable_classiclink": {
        "default": false,
        "description": "[DEPRECATED](https://github.com/hashicorp/terraform/issues/31730) Should be true to enable ClassicLink in the Default VPC"
       },
       "default_vpc_enable_dns_hostnames": {
        "default": false,
        "description": "Should be true to enable DNS hostnames in the Default VPC"
       },
       "default_vpc_enable_dns_support": {
        "default": true,
        "description": "Should be true to enable DNS support in the Default VPC"
       },
       "default_vpc_name": {
        "default": null,
        "description": "Name to be used on the Default VPC"
       },
       "default_vpc_tags": {
        "default": {},
        "description": "Additional tags for the Default VPC"
       },
       "dhcp_options_domain_name": {
        "default": "",
        "description": "Specifies DNS name for DHCP options set (requires enable_dhcp_options set to true)"
       },
       "dhcp_options_domain_name_servers": {
        "default": [
         "AmazonProvidedDNS"
        ],
        "description": "Specify a list of DNS server addresses for DHCP options set, default to AWS provided (requires enable_dhcp_options set to true)"
       },
       "dhcp_options_netbios_name_servers": {
        "default": [],
        "description": "Specify a list of netbios servers for DHCP options set (requires enable_dhcp_options set to true)"
       },
       "dhcp_options_netbios_node_type": {
        "default": "",
        "description": "Specify netbios node_type for DHCP options set (requires enable_dhcp_options set to true)"
       },
       "dhcp_options_ntp_servers": {
        "default": [],
        "description": "Specify a list of NTP servers for DHCP options set (requires enable_dhcp_options set to true)"
       },
       "dhcp_options_tags": {
        "default": {},
        "description": "Additional tags for the DHCP option set (requires enable_dhcp_options set to true)"
       },
       "elasticache_acl_tags": {
        "default": {},
        "description": "Additional tags for the elasticache subnets network ACL"
       },
       "elasticache_dedicated_network_acl": {
        "default": false,
        "description": "Whether to use dedicated network ACL (not default) and custom rules for elasticache subnets"
       },
       "elasticache_inbound_acl_rules": {
        "default": [
         {
          "cidr_block": "0.0.0.0/0",
          "from_port": "0",
          "protocol": "-1",
          "rule_action": "allow",
          "rule_number": "100",
          "to_port": "0"
         }
        ],
        "description": "Elasticache subnets inbound network ACL rules"
       },
       "elasticache_outbound_acl_rules": {
        "default": [
         {
          "cidr_block": "0.0.0.0/0",
          "from_port": "0",
          "protocol": "-1",
          "rule_action": "allow",
          "rule_number": "100",
          "to_port": "0"
         }
        ],
        "description": "Elasticache subnets outbound network ACL rules"
       },
       "elasticache_route_table_tags": {
        "default": {},
        "description": "Additional tags for the elasticache route tables"
       },
       "elasticache_subnet_assign_ipv6_address_on_creation": {
        "default": null,
        "description": "Assign IPv6 address on elasticache subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch"
       },
       "elasticache_subnet_group_name": {
        "default": null,
        "description": "Name of elasticache subnet group"
       },
       "elasticache_subnet_group_tags": {
        "default": {},
        "description": "Additional tags for the elasticache subnet group"
       },
       "elasticache_subnet_ipv6_prefixes": {
        "default": [],
        "description": "Assigns IPv6 elasticache subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list"
       },
       "elasticache_subnet_names": {
        "default": [],
        "description": "Explicit values to use in the Name tag on elasticache subnets. If empty, Name tags are generated."
       },
       "elasticache_subnet_suffix": {
        "default": "elasticache",
        "description": "Suffix to append to elasticache subnets name"
       },
       "elasticache_subnet_tags": {
        "default": {},
        "description": "Additional tags for the elasticache subnets"
       },
       "elasticache_subnets": {
        "default": [],
        "description": "A list of elasticache subnets"
       },
       "enable_classiclink": {
        "default": null,
        "description": "[DEPRECATED](https://github.com/hashicorp/terraform/issues/31730) Should be true to enable ClassicLink for the VPC. Only valid in regions and accounts that support EC2 Classic."
       },
       "enable_classiclink_dns_support": {
        "default": null,
        "description": "[DEPRECATED](https://github.com/hashicorp/terraform/issues/31730) Should be true to enable ClassicLink DNS Support for the VPC. Only valid in regions and accounts that support EC2 Classic."
       },
       "enable_dhcp_options": {
        "default": false,
        "description": "Should be true if you want to specify a DHCP options set with a custom domain name, DNS servers, NTP servers, netbios servers, and/or netbios server type"
       },
       "enable_dns_hostnames": {
        "default": false,
        "description": "Should be true to enable DNS hostnames in the VPC"
       },
       "enable_dns_support": {
        "default": true,
        "description": "Should be true to enable DNS support in the VPC"
       },
       "enable_flow_log": {
        "default": false,
        "description": "Whether or not to enable VPC Flow Logs"
       },
       "enable_ipv6": {
        "default": false,
        "description": "Requests an Amazon-provided IPv6 CIDR block with a /56 prefix length for the VPC. You cannot specify the range of IP addresses, or the size of the CIDR block."
       },
       "enable_nat_gateway": {
        "default": false,
        "description": "Should be true if you want to provision NAT Gateways for each of your private networks"
       },
       "enable_public_redshift": {
        "default": false,
        "description": "Controls if redshift should have public routing table"
       },
       "enable_vpn_gateway": {
        "default": false,
        "description": "Should be true if you want to create a new VPN Gateway resource and attach it to the VPC"
       },
       "external_nat_ip_ids": {
        "default": [],
        "description": "List of EIP IDs to be assigned to the NAT Gateways (used in combination with reuse_nat_ips)"
       },
       "external_nat_ips": {
        "default": [],
        "description": "List of EIPs to be used for `nat_public_ips` output (used in combination with reuse_nat_ips and external_nat_ip_ids)"
       },
       "flow_log_cloudwatch_iam_role_arn": {
        "default": "",
        "description": "The ARN for the IAM role that's used to post flow logs to a CloudWatch Logs log group. When flow_log_destination_arn is set to ARN of Cloudwatch Logs, this argument needs to be provided."
       },
       "flow_log_cloudwatch_log_group_kms_key_id": {
        "default": null,
        "description": "The ARN of the KMS Key to use when encrypting log data for VPC flow logs."
       },
       "flow_log_cloudwatch_log_group_name_prefix": {
        "default": "/aws/vpc-flow-log/",
        "description": "Specifies the name prefix of CloudWatch Log Group for VPC flow logs."
       },
       "flow_log_cloudwatch_log_group_name_suffix": {
        "default": "",
        "description": "Specifies the name suffix of CloudWatch Log Group for VPC flow logs."
       },
       "flow_log_cloudwatch_log_group_retention_in_days": {
        "default": null,
        "description": "Specifies the number of days you want to retain log events in the specified log group for VPC flow logs."
       },
       "flow_log_destination_arn": {
        "default": "",
        "description": "The ARN of the CloudWatch log group or S3 bucket where VPC Flow Logs will be pushed. If this ARN is a S3 bucket the appropriate permissions need to be set on that bucket's policy. When create_flow_log_cloudwatch_log_group is set to false this argument must be provided."
       },
       "flow_log_destination_type": {
        "default": "cloud-watch-logs",
        "description": "Type of flow log destination. Can be s3 or cloud-watch-logs."
       },
       "flow_log_file_format": {
        "default": "plain-text",
        "description": "(Optional) The format for the flow log. Valid values: `plain-text`, `parquet`."
       },
       "flow_log_hive_compatible_partitions": {
        "default": false,
        "description": "(Optional) Indicates whether to use Hive-compatible prefixes for flow logs stored in Amazon S3."
       },
       "flow_log_log_format": {
        "default": null,
        "description": "The fields to include in the flow log record, in the order in which they should appear."
       },
       "flow_log_max_aggregation_interval": {
        "default": 600,
        "description": "The maximum interval of time during which a flow of packets is captured and aggregated into a flow log record. Valid Values: `60` seconds or `600` seconds."
       },
       "flow_log_per_hour_partition": {
        "default": false,
        "description": "(Optional) Indicates whether to partition the flow log per hour. This reduces the cost and response time for queries."
       },
       "flow_log_traffic_type": {
        "default": "ALL",
        "description": "The type of traffic to capture. Valid values: ACCEPT, REJECT, ALL."
       },
       "igw_tags": {
        "default": {},
        "description": "Additional tags for the internet gateway"
       },
       "instance_tenancy": {
        "default": "default",
        "description": "A tenancy option for instances launched into the VPC"
       },
       "intra_acl_tags": {
        "default": {},
        "description": "Additional tags for the intra subnets network ACL"
       },
       "intra_dedicated_network_acl": {
        "default": false,
        "description": "Whether to use dedicated network ACL (not default) and custom rules for intra subnets"
       },
       "intra_inbound_acl_rules": {
        "default": [
         {
          "cidr_block": "0.0.0.0/0",
          "from_port": "0",
          "protocol": "-1",
          "rule_action": "allow",
          "rule_number": "100",
          "to_port": "0"
         }
        ],
        "description": "Intra subnets inbound network ACLs"
       },
       "intra_outbound_acl_rules": {
        "default": [
         {
          "cidr_block": "0.0.0.0/0",
          "from_port": "0",
          "protocol": "-1",
          "rule_action": "allow",
          "rule_number": "100",
          "to_port": "0"
         }
        ],
        "description": "Intra subnets outbound network ACLs"
       },
       "intra_route_table_tags": {
        "default": {},
        "description": "Additional tags for the intra route tables"
       },
       "intra_subnet_assign_ipv6_address_on_creation": {
        "default": null,
        "description": "Assign IPv6 address on intra subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch"
       },
       "intra_subnet_ipv6_prefixes": {
        "default": [],
        "description": "Assigns IPv6 intra subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list"
       },
       "intra_subnet_names": {
        "default": [],
        "description": "Explicit values to use in the Name tag on intra subnets. If empty, Name tags are generated."
       },
       "intra_subnet_suffix": {
        "default": "intra",
        "description": "Suffix to append to intra subnets name"
       },
       "intra_subnet_tags": {
        "default": {},
        "description": "Additional tags for the intra subnets"
       },
       "intra_subnets": {
        "default": [],
        "description": "A list of intra subnets"
       },
       "ipv4_ipam_pool_id": {
        "default": null,
        "description": "(Optional) The ID of an IPv4 IPAM pool you want to use for allocating this VPC's CIDR."
       },
       "ipv4_netmask_length": {
        "default": null,
        "description": "(Optional) The netmask length of the IPv4 CIDR you want to allocate to this VPC. Requires specifying a ipv4_ipam_pool_id."
       },
       "ipv6_cidr": {
        "default": null,
        "description": "(Optional) IPv6 CIDR block to request from an IPAM Pool. Can be set explicitly or derived from IPAM using `ipv6_netmask_length`."
       },
       "ipv6_ipam_pool_id": {
        "default": null,
        "description": "(Optional) IPAM Pool ID for a IPv6 pool. Conflicts with `assign_generated_ipv6_cidr_block`."
       },
       "ipv6_netmask_length": {
        "default": null,
        "description": "(Optional) Netmask length to request from IPAM Pool. Conflicts with `ipv6_cidr_block`. This can be omitted if IPAM pool as a `allocation_default_netmask_length` set. Valid values: `56`."
       },
       "manage_default_network_acl": {
        "default": false,
        "description": "Should be true to adopt and manage Default Network ACL"
       },
       "manage_default_route_table": {
        "default": false,
        "description": "Should be true to manage default route table"
       },
       "manage_default_security_group": {
        "default": false,
        "description": "Should be true to adopt and manage default security group"
       },
       "manage_default_vpc": {
        "default": false,
        "description": "Should be true to adopt and manage Default VPC"
       },
       "map_public_ip_on_launch": {
        "default": true,
        "description": "Should be false if you do not want to auto-assign public IP on launch"
       },
       "name": {
        "default": "",
        "description": "Name to be used on all the resources as identifier"
       },
       "nat_eip_tags": {
        "default": {},
        "description": "Additional tags for the NAT EIP"
       },
       "nat_gateway_destination_cidr_block": {
        "default": "0.0.0.0/0",
        "description": "Used to pass a custom destination route for private NAT Gateway. If not specified, the default 0.0.0.0/0 is used as a destination route."
       },
       "nat_gateway_tags": {
        "default": {},
        "description": "Additional tags for the NAT gateways"
       },
       "one_nat_gateway_per_az": {
        "default": false,
        "description": "Should be true if you want only one NAT Gateway per availability zone. Requires `var.azs` to be set, and the number of `public_subnets` created to be greater than or equal to the number of availability zones specified in `var.azs`."
       },
       "outpost_acl_tags": {
        "default": {},
        "description": "Additional tags for the outpost subnets network ACL"
       },
       "outpost_arn": {
        "default": null,
        "description": "ARN of Outpost you want to create a subnet in."
       },
       "outpost_az": {
        "default": null,
        "description": "AZ where Outpost is anchored."
       },
       "outpost_dedicated_network_acl": {
        "default": false,
        "description": "Whether to use dedicated network ACL (not default) and custom rules for outpost subnets"
       },
       "outpost_inbound_acl_rules": {
        "default": [
         {
          "cidr_block": "0.0.0.0/0",
          "from_port": "0",
          "protocol": "-1",
          "rule_action": "allow",
          "rule_number": "100",
          "to_port": "0"
         }
        ],
        "description": "Outpost subnets inbound network ACLs"
       },
       "outpost_outbound_acl_rules": {
        "default": [
         {
          "cidr_block": "0.0.0.0/0",
          "from_port": "0",
          "protocol": "-1",
          "rule_action": "allow",
          "rule_number": "100",
          "to_port": "0"
         }
        ],
        "description": "Outpost subnets outbound network ACLs"
       },
       "outpost_subnet_assign_ipv6_address_on_creation": {
        "default": null,
        "description": "Assign IPv6 address on outpost subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch"
       },
       "outpost_subnet_ipv6_prefixes": {
        "default": [],
        "description": "Assigns IPv6 outpost subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list"
       },
       "outpost_subnet_names": {
        "default": [],
        "description": "Explicit values to use in the Name tag on outpost subnets. If empty, Name tags are generated."
       },
       "outpost_subnet_suffix": {
        "default": "outpost",
        "description": "Suffix to append to outpost subnets name"
       },
       "outpost_subnet_tags": {
        "default": {},
        "description": "Additional tags for the outpost subnets"
       },
       "outpost_subnets": {
        "default": [],
        "description": "A list of outpost subnets inside the VPC"
       },
       "private_acl_tags": {
        "default": {},
        "description": "Additional tags for the private subnets network ACL"
       },
       "private_dedicated_network_acl": {
        "default": false,
        "description": "Whether to use dedicated network ACL (not default) and custom rules for private subnets"
       },
       "private_inbound_acl_rules": {
        "default": [
         {
          "cidr_block": "0.0.0.0/0",
          "from_port": "0",
          "protocol": "-1",
          "rule_action": "allow",
          "rule_number": "100",
          "to_port": "0"
         }
        ],
        "description": "Private subnets inbound network ACLs"
       },
       "private_outbound_acl_rules": {
        "default": [
         {
          "cidr_block": "0.0.0.0/0",
          "from_port": "0",
          "protocol": "-1",
          "rule_action": "allow",
          "rule_number": "100",
          "to_port": "0"
         }
        ],
        "description": "Private subnets outbound network ACLs"
       },
       "private_route_table_tags": {
        "default": {},
        "description": "Additional tags for the private route tables"
       },
       "private_subnet_assign_ipv6_address_on_creation": {
        "default": null,
        "description": "Assign IPv6 address on private subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch"
       },
       "private_subnet_ipv6_prefixes": {
        "default": [],
        "description": "Assigns IPv6 private subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list"
       },
       "private_subnet_names": {
        "default": [],
        "description": "Explicit values to use in the Name tag on private subnets. If empty, Name tags are generated."
       },
       "private_subnet_suffix": {
        "default": "private",
        "description": "Suffix to append to private subnets name"
       },
       "private_subnet_tags": {
        "default": {},
        "description": "Additional tags for the private subnets"
       },
       "private_subnets": {
        "default": [],
        "description": "A list of private subnets inside the VPC"
       },
       "propagate_intra_route_tables_vgw": {
        "default": false,
        "description": "Should be true if you want route table propagation"
       },
       "propagate_private_route_tables_vgw": {
        "default": false,
        "description": "Should be true if you want route table propagation"
       },
       "propagate_public_route_tables_vgw": {
        "default": false,
        "description": "Should be true if you want route table propagation"
       },
       "public_acl_tags": {
        "default": {},
        "description": "Additional tags for the public subnets network ACL"
       },
       "public_dedicated_network_acl": {
        "default": false,
        "description": "Whether to use dedicated network ACL (not default) and custom rules for public subnets"
       },
       "public_inbound_acl_rules": {
        "default": [
         {
          "cidr_block": "0.0.0.0/0",
          "from_port": "0",
          "protocol": "-1",
          "rule_action": "allow",
          "rule_number": "100",
          "to_port": "0"
         }
        ],
        "description": "Public subnets inbound network ACLs"
       },
       "public_outbound_acl_rules": {
        "default": [
         {
          "cidr_block": "0.0.0.0/0",
          "from_port": "0",
          "protocol": "-1",
          "rule_action": "allow",
          "rule_number": "100",
          "to_port": "0"
         }
        ],
        "description": "Public subnets outbound network ACLs"
       },
       "public_route_table_tags": {
        "default": {},
        "description": "Additional tags for the public route tables"
       },
       "public_subnet_assign_ipv6_address_on_creation": {
        "default": null,
        "description": "Assign IPv6 address on public subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch"
       },
       "public_subnet_ipv6_prefixes": {
        "default": [],
        "description": "Assigns IPv6 public subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list"
       },
       "public_subnet_names": {
        "default": [],
        "description": "Explicit values to use in the Name tag on public subnets. If empty, Name tags are generated."
       },
       "public_subnet_suffix": {
        "default": "public",
        "description": "Suffix to append to public subnets name"
       },
       "public_subnet_tags": {
        "default": {},
        "description": "Additional tags for the public subnets"
       },
       "public_subnets": {
        "default": [],
        "description": "A list of public subnets inside the VPC"
       },
       "putin_khuylo": {
        "default": true,
        "description": "Do you agree that Putin doesn't respect Ukrainian sovereignty and territorial integrity? More info: https://en.wikipedia.org/wiki/Putin_khuylo!"
       },
       "redshift_acl_tags": {
        "default": {},
        "description": "Additional tags for the redshift subnets network ACL"
       },
       "redshift_dedicated_network_acl": {
        "default": false,
        "description": "Whether to use dedicated network ACL (not default) and custom rules for redshift subnets"
       },
       "redshift_inbound_acl_rules": {
        "default": [
         {
          "cidr_block": "0.0.0.0/0",
          "from_port": "0",
          "protocol": "-1",
          "rule_action": "allow",
          "rule_number": "100",
          "to_port": "0"
         }
        ],
        "description": "Redshift subnets inbound network ACL rules"
       },
       "redshift_outbound_acl_rules": {
        "default": [
         {
          "cidr_block": "0.0.0.0/0",
          "from_port": "0",
          "protocol": "-1",
          "rule_action": "allow",
          "rule_number": "100",
          "to_port": "0"
         }
        ],
        "description": "Redshift subnets outbound network ACL rules"
       },
       "redshift_route_table_tags": {
        "default": {},
        "description": "Additional tags for the redshift route tables"
       },
       "redshift_subnet_assign_ipv6_address_on_creation": {
        "default": null,
        "description": "Assign IPv6 address on redshift subnet, must be disabled to change IPv6 CIDRs. This is the IPv6 equivalent of map_public_ip_on_launch"
       },
       "redshift_subnet_group_name": {
        "default": null,
        "description": "Name of redshift subnet group"
       },
       "redshift_subnet_group_tags": {
        "default": {},
        "description": "Additional tags for the redshift subnet group"
       },
       "redshift_subnet_ipv6_prefixes": {
        "default": [],
        "description": "Assigns IPv6 redshift subnet id based on the Amazon provided /56 prefix base 10 integer (0-256). Must be of equal length to the corresponding IPv4 subnet list"
       },
       "redshift_subnet_names": {
        "default": [],
        "description": "Explicit values to use in the Name tag on redshift subnets. If empty, Name tags are generated."
       },
       "redshift_subnet_suffix": {
        "default": "redshift",
        "description": "Suffix to append to redshift subnets name"
       },
       "redshift_subnet_tags": {
        "default": {},
        "description": "Additional tags for the redshift subnets"
       },
       "redshift_subnets": {
        "default": [],
        "description": "A list of redshift subnets"
       },
       "reuse_nat_ips": {
        "default": false,
        "description": "Should be true if you don't want EIPs to be created for your NAT Gateways and will instead pass them in via the 'external_nat_ip_ids' variable"
       },
       "secondary_cidr_blocks": {
        "default": [],
        "description": "List of secondary CIDR blocks to associate with the VPC to extend the IP Address pool"
       },
       "single_nat_gateway": {
        "default": false,
        "description": "Should be true if you want to provision a single shared NAT Gateway across all of your private networks"
       },
       "tags": {
        "default": {},
        "description": "A map of tags to add to all resources"
       },
       "use_ipam_pool": {
        "default": false,
        "description": "Determines whether IPAM pool is used for CIDR allocation"
       },
       "vpc_flow_log_permissions_boundary": {
        "default": null,
        "description": "The ARN of the Permissions Boundary for the VPC Flow Log IAM Role"
       },
       "vpc_flow_log_tags": {
        "default": {},
        "description": "Additional tags for the VPC Flow Logs"
       },
       "vpc_tags": {
        "default": {},
        "description": "Additional tags for the VPC"
       },
       "vpn_gateway_az": {
        "default": null,
        "description": "The Availability Zone for the VPN Gateway"
       },
       "vpn_gateway_id": {
        "default": "",
        "description": "ID of VPN Gateway to attach to the VPC"
       },
       "vpn_gateway_tags": {
        "default": {},
        "description": "Additional tags for the VPN gateway"
       }
      }
     },
     "source": "terraform-aws-modules/vpc/aws",
     "version_constraint": "3.18.1"
    }
   },
   "outputs": {
    "cluster_endpoint": {
     "description": "Endpoint for EKS control plane",
     "expression": {
      "references": [
       "module.eks.cluster_endpoint",
       "module.eks"
      ]
     }
    },
    "cluster_security_group_id": {
     "description": "Security group ids attached to the cluster control plane",
     "expression": {
      "references": [
       "module.eks.cluster_security_group_id",
       "module.eks"
      ]
     }
    },
    "region": {
     "description": "AWS region",
     "expression": {
      "references": [
       "var.region"
      ]
     }
    }
   },
   "resources": [
    {
     "address": "aws_ecr_repository.ecr",
     "expressions": {
      "encryption_configuration": [
       {
        "encryption_type": {
         "references": [
          "var.encrypt_type"
         ]
        }
       }
      ],
      "image_scanning_configuration": [
       {
        "scan_on_push": {
         "constant_value": true
        }
       }
      ],
      "image_tag_mutability": {
       "references": [
        "var.image_mutability"
       ]
      },
      "name": {
       "references": [
        "each.key"
       ]
      },
      "tags": {
       "references": [
        "var.tags"
       ]
      }
     },
     "for_each_expression": {
      "references": [
       "var.ecr_name"
      ]
     },
     "mode": "managed",
     "name": "ecr",
     "provider_config_key": "aws",
     "schema_version": 0,
     "type": "aws_ecr_repository"
    },
    {
     "address": "local_file.kubeconfig",
     "expressions": {
      "content": {
       "references": [
        "module.eks-kubeconfig.kubeconfig",
        "module.eks-kubeconfig"
       ]
      },
      "filename": {
       "references": [
        "local.cluster_name"
       ]
      }
     },
     "mode": "managed",
     "name": "kubeconfig",
     "provider_config_key": "local",
     "schema_version": 0,
     "type": "local_file"
    },
    {
     "address": "data.aws_availability_zones.available",
     "mode": "data",
     "name": "available",
     "provider_config_key": "aws",
     "schema_version": 0,
     "type": "aws_availability_zones"
    },
    {
     "address": "data.aws_eks_cluster.cluster",
     "expressions": {
      "name": {
       "references": [
        "module.eks.cluster_id",
        "module.eks"
       ]
      }
     },
     "mode": "data",
     "name": "cluster",
     "provider_config_key": "aws",
     "schema_version": 0,
     "type": "aws_eks_cluster"
    },
    {
     "address": "data.aws_eks_cluster_auth.cluster",
     "expressions": {
      "name": {
       "references": [
        "module.eks.cluster_id",
        "module.eks"
       ]
      }
     },
     "mode": "data",
     "name": "cluster",
     "provider_config_key": "aws",
     "schema_version": 0,
     "type": "aws_eks_cluster_auth"
    }
   ],
   "variables": {
    "creds": {},
    "ecr_name": {
     "default": null,
     "description": "The list of ecr names to create"
    },
    "encrypt_type": {
     "default": "KMS",
     "description": "Provide type of encryption here"
    },
    "image_mutability": {
     "default": "MUTABLE",
     "description": "Provide image mutability"
    },
    "region": {
     "default": "eu-central-1"
    },
    "tags": {
     "default": {},
     "description": "The key-value maps for tagging"
    }
   }
  }
 },
 "format_version": "1.1",
 "output_changes": {
  "cluster_endpoint": {
   "actions": [
    "no-op"
   ],
   "after": "https://94AB6DF0F67D05BA57F5EB099F8AEB5E.gr7.eu-central-1.eks.amazonaws.com",
   "after_sensitive": false,
   "after_unknown": false,
   "before": "https://94AB6DF0F67D05BA57F5EB099F8AEB5E.gr7.eu-central-1.eks.amazonaws.com",
   "before_sensitive": false
  },
  "cluster_security_group_id": {
   "actions": [
    "no-op"
   ],
   "after": "sg-0d4c3ed613f24cfac",
   "after_sensitive": false,
   "after_unknown": false,
   "before": "sg-0d4c3ed613f24cfac",
   "before_sensitive": false
  },
  "region": {
   "actions": [
    "no-op"
   ],
   "after": "eu-central-1",
   "after_sensitive": false,
   "after_unknown": false,
   "before": "eu-central-1",
   "before_sensitive": false
  }
 },
 "planned_values": {
  "outputs": {
   "cluster_endpoint": {
    "sensitive": false,
    "type": "string",
    "value": "https://94AB6DF0F67D05BA57F5EB099F8AEB5E.gr7.eu-central-1.eks.amazonaws.com"
   },
   "cluster_security_group_id": {
    "sensitive": false,
    "type": "string",
    "value": "sg-0d4c3ed613f24cfac"
   },
   "region": {
    "sensitive": false,
    "type": "string",
    "value": "eu-central-1"
   }
  },
  "root_module": {
   "child_modules": [
    {
     "address": "module.eks",
     "child_modules": [
      {
       "address": "module.eks.module.eks_managed_node_group[\"first\"]",
       "resources": [
        {
         "address": "module.eks.module.eks_managed_node_group[\"first\"].aws_eks_node_group.this[0]",
         "index": 0,
         "mode": "managed",
         "name": "this",
         "provider_name": "registry.terraform.io/hashicorp/aws",
         "schema_version": 0,
         "sensitive_values": {
          "instance_types": [],
          "launch_template": [
           {}
          ],
          "remote_access": [],
          "resources": [],
          "scaling_config": [
           {}
          ],
          "subnet_ids": [
           false,
           false,
           false
          ],
          "tags": {},
          "tags_all": {},
          "taint": [],
          "timeouts": {},
          "update_config": []
         },
         "type": "aws_eks_node_group",
         "values": {
          "cluster_name": "aisight_demo-eks",
          "force_update_version": null,
          "labels": null,
          "launch_template": [
           {
            "name": "first-2023031214530064240000000b",
            "version": "1"
           }
          ],
          "node_group_name_prefix": "first-",
          "node_role_arn": "arn:aws:iam::435357319394:role/first-eks-node-group-20230312144140331600000001",
          "remote_access": [],
          "scaling_config": [
           {
            "desired_size": 1,
            "max_size": 3,
            "min_size": 1
           }
          ],
          "subnet_ids": [
           "subnet-020599695ef4412bc",
           "subnet-04064b4652b88ff67",
           "subnet-0e8a89850f69f9a37"
          ],
          "tags": {
           "Name": "first"
          },
          "tags_all": {
           "Name": "first"
          },
          "taint": [],
          "timeouts": {
           "create": null,
           "delete": null,
           "update": null
          },
          "version": "1.25"
         }
        },
        {
         "address": "module.eks.module.eks_managed_node_group[\"first\"].aws_iam_role.this[0]",
         "index": 0,
         "mode": "managed",
         "name": "this",
         "provider_name": "registry.terraform.io/hashicorp/aws",
         "schema_version": 0,
         "sensitive_values": {
          "inline_policy": [],
          "managed_policy_arns": [
           false,
           false,
           false
          ],
          "tags": {},
          "tags_all": {}
         },
         "type": "aws_iam_role",
         "values": {
          "arn": "arn:aws:iam::435357319394:role/first-eks-node-group-20230312144140331600000001",
          "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"},\"Sid\":\"EKSNodeAssumeRole\"}],\"Version\":\"2012-10-17\"}",
          "create_date": "2023-03-12T14:41:40Z",
          "description": "EKS managed node group IAM role",
          "force_detach_policies": true,
          "id": "first-eks-node-group-20230312144140331600000001",
          "inline_policy": [],
          "managed_policy_arns": [
           "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
           "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
           "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy"
          ],
          "max_session_duration": 3600,
          "name": "first-eks-node-group-20230312144140331600000001",
          "name_prefix": "first-eks-node-group-",
          "path": "/",
          "permissions_boundary": null,
          "tags": {},
          "tags_all": {},
          "unique_id": "AROAWKXKRQDRIFTXYHCBF"
         }
        },
        {
         "address": "module.eks.module.eks_managed_node_group[\"first\"].aws_iam_role_policy_attachment.this[\"arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly\"]",
         "index": "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
         "mode": "managed",
         "name": "this",
         "provider_name": "registry.terraform.io/hashicorp/aws",
         "schema_version": 0,
         "sensitive_values": {},
         "type": "aws_iam_role_policy_attachment",
         "values": {
          "id": "first-eks-node-group-20230312144140331600000001-20230312144141605400000003",
          "policy_arn": "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
          "role": "first-eks-node-group-20230312144140331600000001"
         }
        },
        {
         "address": "module.eks.module.eks_managed_node_group[\"first\"].aws_iam_role_policy_attachment.this[\"arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy\"]",
         "index": "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
         "mode": "managed",
         "name": "this",
         "provider_name": "registry.terraform.io/hashicorp/aws",
         "schema_version": 0,
         "sensitive_values": {},
         "type": "aws_iam_role_policy_attachment",
         "values": {
          "id": "first-eks-node-group-20230312144140331600000001-20230312144141620900000004",
          "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
          "role": "first-eks-node-group-20230312144140331600000001"
         }
        },
        {
         "address": "module.eks.module.eks_managed_node_group[\"first\"].aws_iam_role_policy_attachment.this[\"arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy\"]",
         "index": "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy",
         "mode": "managed",
         "name": "this",
         "provider_name": "registry.terraform.io/hashicorp/aws",
         "schema_version": 0,
         "sensitive_values": {},
         "type": "aws_iam_role_policy_attachment",
         "values": {
          "id": "first-eks-node-group-20230312144140331600000001-20230312144141682900000005",
          "policy_arn": "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy",
          "role": "first-eks-node-group-20230312144140331600000001"
         }
        },
        {
         "address": "module.eks.module.eks_managed_node_group[\"first\"].aws_launch_template.this[0]",
         "index": 0,
         "mode": "managed",
         "name": "this",
         "provider_name": "registry.terraform.io/hashicorp/aws",
         "schema_version": 0,
         "sensitive_values": {
          "block_device_mappings": [],
          "capacity_reservation_specification": [],
          "cpu_options": [],
          "credit_specification": [],
          "elastic_gpu_specifications": [],
          "elastic_inference_accelerator": [],
          "enclave_options": [],
          "hibernation_options": [],
          "iam_instance_profile": [],
          "instance_market_options": [],
          "instance_requirements": [],
          "license_specification": [],
          "maintenance_options": [],
          "metadata_options": [
           {}
          ],
          "monitoring": [
           {}
          ],
          "network_interfaces": [],
          "placement": [],
          "private_dns_name_options": [],
          "security_group_names": [],
          "tag_specifications": [
           {
            "tags": {}
           },
           {
            "tags": {}
           },
           {
            "tags": {}
           }
          ],
          "tags": {},
          "tags_all": {},
          "vpc_security_group_ids": [
           false,
           false
          ]
         },
         "type": "aws_launch_template",
         "values": {
          "arn": "arn:aws:ec2:eu-central-1:435357319394:launch-template/lt-0c10e58d773a0e666",
          "block_device_mappings": [],
          "capacity_reservation_specification": [],
          "cpu_options": [],
          "credit_specification": [],
          "default_version": 1,
          "description": "Custom launch template for first EKS managed node group",
          "disable_api_stop": false,
          "disable_api_termination": false,
          "ebs_optimized": "",
          "elastic_gpu_specifications": [],
          "elastic_inference_accelerator": [],
          "enclave_options": [],
          "hibernation_options": [],
          "iam_instance_profile": [],
          "id": "lt-0c10e58d773a0e666",
          "image_id": "",
          "instance_initiated_shutdown_behavior": "",
          "instance_market_options": [],
          "instance_requirements": [],
          "instance_type": "",
          "kernel_id": "",
          "key_name": "",
          "latest_version": 1,
          "license_specification": [],
          "maintenance_options": [],
          "metadata_options": [
           {
            "http_endpoint": "enabled",
            "http_protocol_ipv6": "disabled",
            "http_put_response_hop_limit": 2,
            "http_tokens": "required",
            "instance_metadata_tags": "disabled"
           }
          ],
          "monitoring": [
           {
            "enabled": true
           }
          ],
          "name": "first-2023031214530064240000000b",
          "name_prefix": "first-",
          "network_interfaces": [],
          "placement": [],
          "private_dns_name_options": [],
          "ram_disk_id": "",
          "security_group_names": [],
          "tag_specifications": [
           {
            "resource_type": "instance",
            "tags": {
             "Name": "first"
            }
           },
           {
            "resource_type": "network-interface",
            "tags": {
             "Name": "first"
            }
           },
           {
            "resource_type": "volume",
            "tags": {
             "Name": "first"
            }
           }
          ],
          "tags": {},
          "tags_all": {},
          "update_default_version": true,
          "user_data": "",
          "vpc_security_group_ids": [
           "sg-02107c0d526390e0b",
           "sg-03a7e8ee7cfafc6e8"
          ]
         }
        },
        {
         "address": "module.eks.module.eks_managed_node_group[\"first\"].aws_security_group.this[0]",
         "index": 0,
         "mode": "managed",
         "name": "this",
         "provider_name": "registry.terraform.io/hashicorp/aws",
         "schema_version": 1,
         "sensitive_values": {
          "egress": [],
          "ingress": [],
          "tags": {},
          "tags_all": {}
         },
         "type": "aws_security_group",
         "values": {
          "arn": "arn:aws:ec2:eu-central-1:435357319394:security-group/sg-03a7e8ee7cfafc6e8",
          "description": "EKS managed node group security group",
          "egress": [],
          "id": "sg-03a7e8ee7cfafc6e8",
          "ingress": [],
          "name": "first-eks-node-group-2023031214415238440000000a",
          "name_prefix": "first-eks-node-group-",
          "owner_id": "435357319394",
          "revoke_rules_on_delete": false,
          "tags": {
           "Name": "first-eks-node-group"
          },
          "tags_all": {
           "Name": "first-eks-node-group"
          },
          "timeouts": null,
          "vpc_id": "vpc-020baab04492a8145"
         }
        }
       ]
      }
     ],
     "resources": [
      {
       "address": "module.eks.aws_cloudwatch_log_group.this[0]",
       "index": 0,
       "mode": "managed",
       "name": "this",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 0,
       "sensitive_values": {
        "tags": {},
        "tags_all": {}
       },
       "type": "aws_cloudwatch_log_group",
       "values": {
        "arn": "arn:aws:logs:eu-central-1:435357319394:log-group:/aws/eks/aisight_demo-eks/cluster",
        "id": "/aws/eks/aisight_demo-eks/cluster",
        "kms_key_id": "",
        "name": "/aws/eks/aisight_demo-eks/cluster",
        "name_prefix": "",
        "retention_in_days": 90,
        "skip_destroy": false,
        "tags": {},
        "tags_all": {}
       }
      },
      {
       "address": "module.eks.aws_eks_cluster.this[0]",
       "index": 0,
       "mode": "managed",
       "name": "this",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 0,
       "sensitive_values": {
        "certificate_authority": [
         {}
        ],
        "enabled_cluster_log_types": [
         false,
         false,
         false
        ],
        "encryption_config": [],
        "identity": [
         {
          "oidc": [
           {}
          ]
         }
        ],
        "kubernetes_network_config": [
         {}
        ],
        "outpost_config": [],
        "tags": {},
        "tags_all": {},
        "timeouts": {},
        "vpc_config": [
         {
          "public_access_cidrs": [
           false
          ],
          "security_group_ids": [
           false
          ],
          "subnet_ids": [
           false,
           false,
           false
          ]
         }
        ]
       },
       "type": "aws_eks_cluster",
       "values": {
        "arn": "arn:aws:eks:eu-central-1:435357319394:cluster/aisight_demo-eks",
        "certificate_authority": [
         {
          "data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMvakNDQWVhZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJek1ETXhNakUwTkRnek1Wb1hEVE16TURNd09URTBORGd6TVZvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTHpnCnNjb1AxSmZUUWVVZCtReWx3UFYyaUNJL1g1SEo3Mk13bG95S3pWRVBITmVnZm5KMHdFWEw5Q3VrbkQ3dEkwZFQKckg2T0cvSDhCaEdKMjFzR2lwVmFjL1JubHdxLy8ycUVOOWw5TWsvU0l3WnN1RzYxRTM0RVcwYStoYXV0aDVEUgpuK2YvcEJhL3NrcjR0TGdsaUI5elBwZ2tPVlZ0RlRjOWpxTHFlNEJkVDM0a0ZwKzhuaEFJckJVNGxrckt0bVo1Ck81VllCV2dudkNYOE1yb3M2dUgxd3FRcktoRjNXTjhrNG9pd1IwQUVTaWZUV0FuaTMxbnNsMk0rN3pwbEdzTXAKb2h3bUhMYUtZaVM2M0Zwa2x2c09ud0dydlBGL056enZ0SitFNFhrblFYa0dDaWsrMVFSaHM3QjNBN0d3b0dXOQpMSXRFTjNGbmhVMnVHcnU2eTgwQ0F3RUFBYU5aTUZjd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZOYWJTYUVGU2NUNEdTVGpuWjhyUzBkbVVvc1VNQlVHQTFVZEVRUU8KTUF5Q0NtdDFZbVZ5Ym1WMFpYTXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBRGVvR2xVSVFsUmc2MGNWeElERApxbmlwWncrU3dGZjJYcTd1MGlzQXpjRHpBZXBJbXBZaU1QT2E4L1hteXkxWEJFankvdFNhTkkySDlpNjhaVGtBCjVMb0ZUVzVOQ1VZazVsYTFxOEs1ZHZWQmErbnhRWE5hS1FtT1hVWGZQTWt5b1RqK3E0Rk5sVzc2K0JvdDVZelQKRHIwbUs3MDltVStNOXkwS1VidkNKZ0J3bkxyMkJMRVdkejhibXo1Z3dUQVJQYmdUZElJbDVYT2UwbmQ4di91VApIRytyeVByZnpUM3lwUUlXKzY0b0JwVFdVZmdUR2YxbGJJTzV1cnZueFdwUjRPNmlleUkxeVA0SzRMK3ZSbVdnCkVqckxVYXRxRHoxUm1QR3MzSHZDQlFnTnI5aU9veWtPRDBDNWxTMnBabWNKNjFNOC9DTDhYbGpkYUpXQlpZNVYKUkNRPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
         }
        ],
        "cluster_id": null,
        "created_at": "2023-03-12 14:41:59.384 +0000 UTC",
        "enabled_cluster_log_types": [
         "api",
         "audit",
         "authenticator"
        ],
        "encryption_config": [],
        "endpoint": "https://94AB6DF0F67D05BA57F5EB099F8AEB5E.gr7.eu-central-1.eks.amazonaws.com",
        "id": "aisight_demo-eks",
        "identity": [
         {
          "oidc": [
           {
            "issuer": "https://oidc.eks.eu-central-1.amazonaws.com/id/94AB6DF0F67D05BA57F5EB099F8AEB5E"
           }
          ]
         }
        ],
        "kubernetes_network_config": [
         {
          "ip_family": "ipv4",
          "service_ipv4_cidr": "10.100.0.0/16",
          "service_ipv6_cidr": ""
         }
        ],
        "name": "aisight_demo-eks",
        "outpost_config": [],
        "platform_version": "eks.1",
        "role_arn": "arn:aws:iam::435357319394:role/aisight_demo-eks-cluster-20230312144140332000000002",
        "status": "ACTIVE",
        "tags": {},
        "tags_all": {},
        "timeouts": {
         "create": null,
         "delete": null,
         "update": null
        },
        "version": "1.25",
        "vpc_config": [
         {
          "cluster_security_group_id": "sg-01641985f7f813c3f",
          "endpoint_private_access": false,
          "endpoint_public_access": true,
          "public_access_cidrs": [
           "0.0.0.0/0"
          ],
          "security_group_ids": [
           "sg-0d4c3ed613f24cfac"
          ],
          "subnet_ids": [
           "subnet-020599695ef4412bc",
           "subnet-04064b4652b88ff67",
           "subnet-0e8a89850f69f9a37"
          ],
          "vpc_id": "vpc-020baab04492a8145"
         }
        ]
       }
      },
      {
       "address": "module.eks.aws_iam_openid_connect_provider.oidc_provider[0]",
       "index": 0,
       "mode": "managed",
       "name": "oidc_provider",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 0,
       "sensitive_values": {
        "client_id_list": [
         false
        ],
        "tags": {},
        "tags_all": {},
        "thumbprint_list": [
         false
        ]
       },
       "type": "aws_iam_openid_connect_provider",
       "values": {
        "arn": "arn:aws:iam::435357319394:oidc-provider/oidc.eks.eu-central-1.amazonaws.com/id/94AB6DF0F67D05BA57F5EB099F8AEB5E",
        "client_id_list": [
         "sts.amazonaws.com"
        ],
        "id": "arn:aws:iam::435357319394:oidc-provider/oidc.eks.eu-central-1.amazonaws.com/id/94AB6DF0F67D05BA57F5EB099F8AEB5E",
        "tags": {
         "Name": "aisight_demo-eks-eks-irsa"
        },
        "tags_all": {
         "Name": "aisight_demo-eks-eks-irsa"
        },
        "thumbprint_list": [
         "9e99a48a9960b14926bb7f3b02e22da2b0ab7280"
        ],
        "url": "oidc.eks.eu-central-1.amazonaws.com/id/94AB6DF0F67D05BA57F5EB099F8AEB5E"
       }
      },
      {
       "address": "module.eks.aws_iam_role.this[0]",
       "index": 0,
       "mode": "managed",
       "name": "this",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 0,
       "sensitive_values": {
        "inline_policy": [
         {}
        ],
        "managed_policy_arns": [
         false,
         false
        ],
        "tags": {},
        "tags_all": {}
       },
       "type": "aws_iam_role",
       "values": {
        "arn": "arn:aws:iam::435357319394:role/aisight_demo-eks-cluster-20230312144140332000000002",
        "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"eks.amazonaws.com\"},\"Sid\":\"EKSClusterAssumeRole\"}],\"Version\":\"2012-10-17\"}",
        "create_date": "2023-03-12T14:41:40Z",
        "description": "",
        "force_detach_policies": true,
        "id": "aisight_demo-eks-cluster-20230312144140332000000002",
        "inline_policy": [
         {
          "name": "aisight_demo-eks-cluster",
          "policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Action\":[\"logs:CreateLogGroup\"],\"Effect\":\"Deny\",\"Resource\":\"*\"}]}"
         }
        ],
        "managed_policy_arns": [
         "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
         "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController"
        ],
        "max_session_duration": 3600,
        "name": "aisight_demo-eks-cluster-20230312144140332000000002",
        "name_prefix": "aisight_demo-eks-cluster-",
        "path": "/",
        "permissions_boundary": null,
        "tags": {},
        "tags_all": {},
        "unique_id": "AROAWKXKRQDRKTX4ZO5ZM"
       }
      },
      {
       "address": "module.eks.aws_iam_role_policy_attachment.this[\"arn:aws:iam::aws:policy/AmazonEKSClusterPolicy\"]",
       "index": "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
       "mode": "managed",
       "name": "this",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 0,
       "sensitive_values": {},
       "type": "aws_iam_role_policy_attachment",
       "values": {
        "id": "aisight_demo-eks-cluster-20230312144140332000000002-20230312144142094200000006",
        "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
        "role": "aisight_demo-eks-cluster-20230312144140332000000002"
       }
      },
      {
       "address": "module.eks.aws_iam_role_policy_attachment.this[\"arn:aws:iam::aws:policy/AmazonEKSVPCResourceController\"]",
       "index": "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController",
       "mode": "managed",
       "name": "this",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 0,
       "sensitive_values": {},
       "type": "aws_iam_role_policy_attachment",
       "values": {
        "id": "aisight_demo-eks-cluster-20230312144140332000000002-20230312144142201000000007",
        "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController",
        "role": "aisight_demo-eks-cluster-20230312144140332000000002"
       }
      },
      {
       "address": "module.eks.aws_security_group.cluster[0]",
       "index": 0,
       "mode": "managed",
       "name": "cluster",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 1,
       "sensitive_values": {
        "egress": [
         {
          "cidr_blocks": [],
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "security_groups": [
           false
          ]
         },
         {
          "cidr_blocks": [],
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "security_groups": [
           false
          ]
         }
        ],
        "ingress": [
         {
          "cidr_blocks": [],
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "security_groups": [
           false
          ]
         }
        ],
        "tags": {},
        "tags_all": {}
       },
       "type": "aws_security_group",
       "values": {
        "arn": "arn:aws:ec2:eu-central-1:435357319394:security-group/sg-0d4c3ed613f24cfac",
        "description": "EKS cluster security group",
        "egress": [
         {
          "cidr_blocks": [],
          "description": "Cluster API to node groups",
          "from_port": 443,
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "protocol": "tcp",
          "security_groups": [
           "sg-02107c0d526390e0b"
          ],
          "self": false,
          "to_port": 443
         },
         {
          "cidr_blocks": [],
          "description": "Cluster API to node kubelets",
          "from_port": 10250,
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "protocol": "tcp",
          "security_groups": [
           "sg-02107c0d526390e0b"
          ],
          "self": false,
          "to_port": 10250
         }
        ],
        "id": "sg-0d4c3ed613f24cfac",
        "ingress": [
         {
          "cidr_blocks": [],
          "description": "Node groups to cluster API",
          "from_port": 443,
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "protocol": "tcp",
          "security_groups": [
           "sg-02107c0d526390e0b"
          ],
          "self": false,
          "to_port": 443
         }
        ],
        "name": "aisight_demo-eks-cluster-20230312144152318900000009",
        "name_prefix": "aisight_demo-eks-cluster-",
        "owner_id": "435357319394",
        "revoke_rules_on_delete": false,
        "tags": {
         "Name": "aisight_demo-eks-cluster"
        },
        "tags_all": {
         "Name": "aisight_demo-eks-cluster"
        },
        "timeouts": null,
        "vpc_id": "vpc-020baab04492a8145"
       }
      },
      {
       "address": "module.eks.aws_security_group.node[0]",
       "index": 0,
       "mode": "managed",
       "name": "node",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 1,
       "sensitive_values": {
        "egress": [
         {
          "cidr_blocks": [
           false
          ],
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "security_groups": []
         },
         {
          "cidr_blocks": [
           false
          ],
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "security_groups": []
         },
         {
          "cidr_blocks": [
           false
          ],
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "security_groups": []
         },
         {
          "cidr_blocks": [],
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "security_groups": [
           false
          ]
         },
         {
          "cidr_blocks": [],
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "security_groups": []
         },
         {
          "cidr_blocks": [],
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "security_groups": []
         }
        ],
        "ingress": [
         {
          "cidr_blocks": [],
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "security_groups": [
           false
          ]
         },
         {
          "cidr_blocks": [],
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "security_groups": [
           false
          ]
         },
         {
          "cidr_blocks": [],
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "security_groups": []
         },
         {
          "cidr_blocks": [],
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "security_groups": []
         }
        ],
        "tags": {},
        "tags_all": {}
       },
       "type": "aws_security_group",
       "values": {
        "arn": "arn:aws:ec2:eu-central-1:435357319394:security-group/sg-02107c0d526390e0b",
        "description": "EKS node shared security group",
        "egress": [
         {
          "cidr_blocks": [
           "0.0.0.0/0"
          ],
          "description": "Egress NTP/TCP to internet",
          "from_port": 123,
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "protocol": "tcp",
          "security_groups": [],
          "self": false,
          "to_port": 123
         },
         {
          "cidr_blocks": [
           "0.0.0.0/0"
          ],
          "description": "Egress NTP/UDP to internet",
          "from_port": 123,
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "protocol": "udp",
          "security_groups": [],
          "self": false,
          "to_port": 123
         },
         {
          "cidr_blocks": [
           "0.0.0.0/0"
          ],
          "description": "Egress all HTTPS to internet",
          "from_port": 443,
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "protocol": "tcp",
          "security_groups": [],
          "self": false,
          "to_port": 443
         },
         {
          "cidr_blocks": [],
          "description": "Node groups to cluster API",
          "from_port": 443,
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "protocol": "tcp",
          "security_groups": [
           "sg-0d4c3ed613f24cfac"
          ],
          "self": false,
          "to_port": 443
         },
         {
          "cidr_blocks": [],
          "description": "Node to node CoreDNS",
          "from_port": 53,
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "protocol": "tcp",
          "security_groups": [],
          "self": true,
          "to_port": 53
         },
         {
          "cidr_blocks": [],
          "description": "Node to node CoreDNS",
          "from_port": 53,
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "protocol": "udp",
          "security_groups": [],
          "self": true,
          "to_port": 53
         }
        ],
        "id": "sg-02107c0d526390e0b",
        "ingress": [
         {
          "cidr_blocks": [],
          "description": "Cluster API to node groups",
          "from_port": 443,
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "protocol": "tcp",
          "security_groups": [
           "sg-0d4c3ed613f24cfac"
          ],
          "self": false,
          "to_port": 443
         },
         {
          "cidr_blocks": [],
          "description": "Cluster API to node kubelets",
          "from_port": 10250,
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "protocol": "tcp",
          "security_groups": [
           "sg-0d4c3ed613f24cfac"
          ],
          "self": false,
          "to_port": 10250
         },
         {
          "cidr_blocks": [],
          "description": "Node to node CoreDNS",
          "from_port": 53,
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "protocol": "tcp",
          "security_groups": [],
          "self": true,
          "to_port": 53
         },
         {
          "cidr_blocks": [],
          "description": "Node to node CoreDNS",
          "from_port": 53,
          "ipv6_cidr_blocks": [],
          "prefix_list_ids": [],
          "protocol": "udp",
          "security_groups": [],
          "self": true,
          "to_port": 53
         }
        ],
        "name": "aisight_demo-eks-node-20230312144151916900000008",
        "name_prefix": "aisight_demo-eks-node-",
        "owner_id": "435357319394",
        "revoke_rules_on_delete": false,
        "tags": {
         "Name": "aisight_demo-eks-node",
         "kubernetes.io/cluster/aisight_demo-eks": "owned"
        },
        "tags_all": {
         "Name": "aisight_demo-eks-node",
         "kubernetes.io/cluster/aisight_demo-eks": "owned"
        },
        "timeouts": null,
        "vpc_id": "vpc-020baab04492a8145"
       }
      },
      {
       "address": "module.eks.aws_security_group_rule.cluster[\"egress_nodes_443\"]",
       "index": "egress_nodes_443",
       "mode": "managed",
       "name": "cluster",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 2,
       "sensitive_values": {
        "prefix_list_ids": []
       },
       "type": "aws_security_group_rule",
       "values": {
        "cidr_blocks": null,
        "description": "Cluster API to node groups",
        "from_port": 443,
        "id": "sgrule-3317145124",
        "ipv6_cidr_blocks": null,
        "prefix_list_ids": [],
        "protocol": "tcp",
        "security_group_id": "sg-0d4c3ed613f24cfac",
        "security_group_rule_id": "sgr-0e35721448bf9f6b8",
        "self": false,
        "source_security_group_id": "sg-02107c0d526390e0b",
        "timeouts": null,
        "to_port": 443,
        "type": "egress"
       }
      },
      {
       "address": "module.eks.aws_security_group_rule.cluster[\"egress_nodes_kubelet\"]",
       "index": "egress_nodes_kubelet",
       "mode": "managed",
       "name": "cluster",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 2,
       "sensitive_values": {
        "prefix_list_ids": []
       },
       "type": "aws_security_group_rule",
       "values": {
        "cidr_blocks": null,
        "description": "Cluster API to node kubelets",
        "from_port": 10250,
        "id": "sgrule-3384562031",
        "ipv6_cidr_blocks": null,
        "prefix_list_ids": [],
        "protocol": "tcp",
        "security_group_id": "sg-0d4c3ed613f24cfac",
        "security_group_rule_id": "sgr-0c8a797f58dae4058",
        "self": false,
        "source_security_group_id": "sg-02107c0d526390e0b",
        "timeouts": null,
        "to_port": 10250,
        "type": "egress"
       }
      },
      {
       "address": "module.eks.aws_security_group_rule.cluster[\"ingress_nodes_443\"]",
       "index": "ingress_nodes_443",
       "mode": "managed",
       "name": "cluster",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 2,
       "sensitive_values": {
        "prefix_list_ids": []
       },
       "type": "aws_security_group_rule",
       "values": {
        "cidr_blocks": null,
        "description": "Node groups to cluster API",
        "from_port": 443,
        "id": "sgrule-3810334838",
        "ipv6_cidr_blocks": null,
        "prefix_list_ids": [],
        "protocol": "tcp",
        "security_group_id": "sg-0d4c3ed613f24cfac",
        "security_group_rule_id": "sgr-054c19fa1c6c7adbd",
        "self": false,
        "source_security_group_id": "sg-02107c0d526390e0b",
        "timeouts": null,
        "to_port": 443,
        "type": "ingress"
       }
      },
      {
       "address": "module.eks.aws_security_group_rule.node[\"egress_cluster_443\"]",
       "index": "egress_cluster_443",
       "mode": "managed",
       "name": "node",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 2,
       "sensitive_values": {
        "prefix_list_ids": []
       },
       "type": "aws_security_group_rule",
       "values": {
        "cidr_blocks": null,
        "description": "Node groups to cluster API",
        "from_port": 443,
        "id": "sgrule-963490526",
        "ipv6_cidr_blocks": null,
        "prefix_list_ids": [],
        "protocol": "tcp",
        "security_group_id": "sg-02107c0d526390e0b",
        "security_group_rule_id": "sgr-045c4909d5c4a9712",
        "self": false,
        "source_security_group_id": "sg-0d4c3ed613f24cfac",
        "timeouts": null,
        "to_port": 443,
        "type": "egress"
       }
      },
      {
       "address": "module.eks.aws_security_group_rule.node[\"egress_https\"]",
       "index": "egress_https",
       "mode": "managed",
       "name": "node",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 2,
       "sensitive_values": {
        "cidr_blocks": [
         false
        ],
        "prefix_list_ids": []
       },
       "type": "aws_security_group_rule",
       "values": {
        "cidr_blocks": [
         "0.0.0.0/0"
        ],
        "description": "Egress all HTTPS to internet",
        "from_port": 443,
        "id": "sgrule-2972996004",
        "ipv6_cidr_blocks": null,
        "prefix_list_ids": [],
        "protocol": "tcp",
        "security_group_id": "sg-02107c0d526390e0b",
        "security_group_rule_id": "sgr-0f942606ea2dee45b",
        "self": false,
        "source_security_group_id": null,
        "timeouts": null,
        "to_port": 443,
        "type": "egress"
       }
      },
      {
       "address": "module.eks.aws_security_group_rule.node[\"egress_ntp_tcp\"]",
       "index": "egress_ntp_tcp",
       "mode": "managed",
       "name": "node",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 2,
       "sensitive_values": {
        "cidr_blocks": [
         false
        ],
        "prefix_list_ids": []
       },
       "type": "aws_security_group_rule",
       "values": {
        "cidr_blocks": [
         "0.0.0.0/0"
        ],
        "description": "Egress NTP/TCP to internet",
        "from_port": 123,
        "id": "sgrule-1860857018",
        "ipv6_cidr_blocks": null,
        "prefix_list_ids": [],
        "protocol": "tcp",
        "security_group_id": "sg-02107c0d526390e0b",
        "security_group_rule_id": "sgr-01ddccdde32917f22",
        "self": false,
        "source_security_group_id": null,
        "timeouts": null,
        "to_port": 123,
        "type": "egress"
       }
      },
      {
       "address": "module.eks.aws_security_group_rule.node[\"egress_ntp_udp\"]",
       "index": "egress_ntp_udp",
       "mode": "managed",
       "name": "node",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 2,
       "sensitive_values": {
        "cidr_blocks": [
         false
        ],
        "prefix_list_ids": []
       },
       "type": "aws_security_group_rule",
       "values": {
        "cidr_blocks": [
         "0.0.0.0/0"
        ],
        "description": "Egress NTP/UDP to internet",
        "from_port": 123,
        "id": "sgrule-276056503",
        "ipv6_cidr_blocks": null,
        "prefix_list_ids": [],
        "protocol": "udp",
        "security_group_id": "sg-02107c0d526390e0b",
        "security_group_rule_id": "sgr-0d1a4905e1ce0f9b0",
        "self": false,
        "source_security_group_id": null,
        "timeouts": null,
        "to_port": 123,
        "type": "egress"
       }
      },
      {
       "address": "module.eks.aws_security_group_rule.node[\"egress_self_coredns_tcp\"]",
       "index": "egress_self_coredns_tcp",
       "mode": "managed",
       "name": "node",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 2,
       "sensitive_values": {
        "prefix_list_ids": []
       },
       "type": "aws_security_group_rule",
       "values": {
        "cidr_blocks": null,
        "description": "Node to node CoreDNS",
        "from_port": 53,
        "id": "sgrule-634332603",
        "ipv6_cidr_blocks": null,
        "prefix_list_ids": [],
        "protocol": "tcp",
        "security_group_id": "sg-02107c0d526390e0b",
        "security_group_rule_id": "sgr-0f20a25071aa1bb8c",
        "self": true,
        "source_security_group_id": null,
        "timeouts": null,
        "to_port": 53,
        "type": "egress"
       }
      },
      {
       "address": "module.eks.aws_security_group_rule.node[\"egress_self_coredns_udp\"]",
       "index": "egress_self_coredns_udp",
       "mode": "managed",
       "name": "node",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 2,
       "sensitive_values": {
        "prefix_list_ids": []
       },
       "type": "aws_security_group_rule",
       "values": {
        "cidr_blocks": null,
        "description": "Node to node CoreDNS",
        "from_port": 53,
        "id": "sgrule-2879956957",
        "ipv6_cidr_blocks": null,
        "prefix_list_ids": [],
        "protocol": "udp",
        "security_group_id": "sg-02107c0d526390e0b",
        "security_group_rule_id": "sgr-07cbcf8eb15706eea",
        "self": true,
        "source_security_group_id": null,
        "timeouts": null,
        "to_port": 53,
        "type": "egress"
       }
      },
      {
       "address": "module.eks.aws_security_group_rule.node[\"ingress_cluster_443\"]",
       "index": "ingress_cluster_443",
       "mode": "managed",
       "name": "node",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 2,
       "sensitive_values": {
        "prefix_list_ids": []
       },
       "type": "aws_security_group_rule",
       "values": {
        "cidr_blocks": null,
        "description": "Cluster API to node groups",
        "from_port": 443,
        "id": "sgrule-604730142",
        "ipv6_cidr_blocks": null,
        "prefix_list_ids": [],
        "protocol": "tcp",
        "security_group_id": "sg-02107c0d526390e0b",
        "security_group_rule_id": "sgr-045c4909d5c4a9712",
        "self": false,
        "source_security_group_id": "sg-0d4c3ed613f24cfac",
        "timeouts": null,
        "to_port": 443,
        "type": "ingress"
       }
      },
      {
       "address": "module.eks.aws_security_group_rule.node[\"ingress_cluster_kubelet\"]",
       "index": "ingress_cluster_kubelet",
       "mode": "managed",
       "name": "node",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 2,
       "sensitive_values": {
        "prefix_list_ids": []
       },
       "type": "aws_security_group_rule",
       "values": {
        "cidr_blocks": null,
        "description": "Cluster API to node kubelets",
        "from_port": 10250,
        "id": "sgrule-391717233",
        "ipv6_cidr_blocks": null,
        "prefix_list_ids": [],
        "protocol": "tcp",
        "security_group_id": "sg-02107c0d526390e0b",
        "security_group_rule_id": "sgr-0caf6fe360383a60c",
        "self": false,
        "source_security_group_id": "sg-0d4c3ed613f24cfac",
        "timeouts": null,
        "to_port": 10250,
        "type": "ingress"
       }
      },
      {
       "address": "module.eks.aws_security_group_rule.node[\"ingress_self_coredns_tcp\"]",
       "index": "ingress_self_coredns_tcp",
       "mode": "managed",
       "name": "node",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 2,
       "sensitive_values": {
        "prefix_list_ids": []
       },
       "type": "aws_security_group_rule",
       "values": {
        "cidr_blocks": null,
        "description": "Node to node CoreDNS",
        "from_port": 53,
        "id": "sgrule-2202922520",
        "ipv6_cidr_blocks": null,
        "prefix_list_ids": [],
        "protocol": "tcp",
        "security_group_id": "sg-02107c0d526390e0b",
        "security_group_rule_id": "sgr-0a278e2564f089a44",
        "self": true,
        "source_security_group_id": null,
        "timeouts": null,
        "to_port": 53,
        "type": "ingress"
       }
      },
      {
       "address": "module.eks.aws_security_group_rule.node[\"ingress_self_coredns_udp\"]",
       "index": "ingress_self_coredns_udp",
       "mode": "managed",
       "name": "node",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 2,
       "sensitive_values": {
        "prefix_list_ids": []
       },
       "type": "aws_security_group_rule",
       "values": {
        "cidr_blocks": null,
        "description": "Node to node CoreDNS",
        "from_port": 53,
        "id": "sgrule-655511031",
        "ipv6_cidr_blocks": null,
        "prefix_list_ids": [],
        "protocol": "udp",
        "security_group_id": "sg-02107c0d526390e0b",
        "security_group_rule_id": "sgr-07cbcf8eb15706eea",
        "self": true,
        "source_security_group_id": null,
        "timeouts": null,
        "to_port": 53,
        "type": "ingress"
       }
      }
     ]
    },
    {
     "address": "module.eks-kubeconfig",
     "resources": [
      {
       "address": "module.eks-kubeconfig.data.aws_eks_cluster.this",
       "mode": "data",
       "name": "this",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 0,
       "sensitive_values": {
        "certificate_authority": [],
        "enabled_cluster_log_types": [],
        "identity": [],
        "kubernetes_network_config": [],
        "outpost_config": [],
        "tags": {},
        "vpc_config": []
       },
       "type": "aws_eks_cluster",
       "values": {
        "name": "aisight_demo-eks"
       }
      },
      {
       "address": "module.eks-kubeconfig.data.aws_eks_cluster_auth.ephemeral",
       "mode": "data",
       "name": "ephemeral",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 0,
       "sensitive_values": {},
       "type": "aws_eks_cluster_auth",
       "values": {
        "name": "aisight_demo-eks"
       }
      }
     ]
    },
    {
     "address": "module.vpc",
     "resources": [
      {
       "address": "module.vpc.aws_eip.nat[0]",
       "index": 0,
       "mode": "managed",
       "name": "nat",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 0,
       "sensitive_values": {
        "tags": {},
        "tags_all": {}
       },
       "type": "aws_eip",
       "values": {
        "address": null,
        "associate_with_private_ip": null,
        "customer_owned_ipv4_pool": null,
        "tags": {
         "Name": "k8s-vpc-eu-central-1a"
        },
        "tags_all": {
         "Name": "k8s-vpc-eu-central-1a"
        },
        "timeouts": null,
        "vpc": true
       }
      },
      {
       "address": "module.vpc.aws_internet_gateway.this[0]",
       "index": 0,
       "mode": "managed",
       "name": "this",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 0,
       "sensitive_values": {
        "tags": {},
        "tags_all": {}
       },
       "type": "aws_internet_gateway",
       "values": {
        "arn": "arn:aws:ec2:eu-central-1:435357319394:internet-gateway/igw-050d3a4489af24e21",
        "id": "igw-050d3a4489af24e21",
        "owner_id": "435357319394",
        "tags": {
         "Name": "k8s-vpc"
        },
        "tags_all": {
         "Name": "k8s-vpc"
        },
        "timeouts": null,
        "vpc_id": "vpc-020baab04492a8145"
       }
      },
      {
       "address": "module.vpc.aws_nat_gateway.this[0]",
       "index": 0,
       "mode": "managed",
       "name": "this",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 0,
       "sensitive_values": {
        "tags": {},
        "tags_all": {}
       },
       "type": "aws_nat_gateway",
       "values": {
        "connectivity_type": "public",
        "subnet_id": "subnet-0e59f78cf02cebca8",
        "tags": {
         "Name": "k8s-vpc-eu-central-1a"
        },
        "tags_all": {
         "Name": "k8s-vpc-eu-central-1a"
        }
       }
      },
      {
       "address": "module.vpc.aws_route.private_nat_gateway[0]",
       "index": 0,
       "mode": "managed",
       "name": "private_nat_gateway",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 0,
       "sensitive_values": {
        "timeouts": {}
       },
       "type": "aws_route",
       "values": {
        "carrier_gateway_id": null,
        "core_network_arn": null,
        "destination_cidr_block": "0.0.0.0/0",
        "destination_ipv6_cidr_block": null,
        "destination_prefix_list_id": null,
        "egress_only_gateway_id": null,
        "gateway_id": null,
        "local_gateway_id": null,
        "route_table_id": "rtb-0303078514c1e5643",
        "timeouts": {
         "create": "5m",
         "delete": null,
         "update": null
        },
        "transit_gateway_id": null,
        "vpc_endpoint_id": null,
        "vpc_peering_connection_id": null
       }
      },
      {
       "address": "module.vpc.aws_route.public_internet_gateway[0]",
       "index": 0,
       "mode": "managed",
       "name": "public_internet_gateway",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 0,
       "sensitive_values": {
        "timeouts": {}
       },
       "type": "aws_route",
       "values": {
        "carrier_gateway_id": "",
        "core_network_arn": "",
        "destination_cidr_block": "0.0.0.0/0",
        "destination_ipv6_cidr_block": "",
        "destination_prefix_list_id": "",
        "egress_only_gateway_id": "",
        "gateway_id": "igw-050d3a4489af24e21",
        "id": "r-rtb-045b86070fe04be5d1080289494",
        "instance_id": "",
        "instance_owner_id": "",
        "local_gateway_id": "",
        "nat_gateway_id": "",
        "network_interface_id": "",
        "origin": "CreateRoute",
        "route_table_id": "rtb-045b86070fe04be5d",
        "state": "active",
        "timeouts": {
         "create": "5m",
         "delete": null,
         "update": null
        },
        "transit_gateway_id": "",
        "vpc_endpoint_id": "",
        "vpc_peering_connection_id": ""
       }
      },
      {
       "address": "module.vpc.aws_route_table.private[0]",
       "index": 0,
       "mode": "managed",
       "name": "private",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 0,
       "sensitive_values": {
        "propagating_vgws": [],
        "route": [],
        "tags": {},
        "tags_all": {}
       },
       "type": "aws_route_table",
       "values": {
        "arn": "arn:aws:ec2:eu-central-1:435357319394:route-table/rtb-0303078514c1e5643",
        "id": "rtb-0303078514c1e5643",
        "owner_id": "435357319394",
        "propagating_vgws": [],
        "route": [],
        "tags": {
         "Name": "k8s-vpc-private"
        },
        "tags_all": {
         "Name": "k8s-vpc-private"
        },
        "timeouts": null,
        "vpc_id": "vpc-020baab04492a8145"
       }
      },
      {
       "address": "module.vpc.aws_route_table.public[0]",
       "index": 0,
       "mode": "managed",
       "name": "public",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 0,
       "sensitive_values": {
        "propagating_vgws": [],
        "route": [
         {}
        ],
        "tags": {},
        "tags_all": {}
       },
       "type": "aws_route_table",
       "values": {
        "arn": "arn:aws:ec2:eu-central-1:435357319394:route-table/rtb-045b86070fe04be5d",
        "id": "rtb-045b86070fe04be5d",
        "owner_id": "435357319394",
        "propagating_vgws": [],
        "route": [
         {
          "carrier_gateway_id": "",
          "cidr_block": "0.0.0.0/0",
          "core_network_arn": "",
          "destination_prefix_list_id": "",
          "egress_only_gateway_id": "",
          "gateway_id": "igw-050d3a4489af24e21",
          "instance_id": "",
          "ipv6_cidr_block": "",
          "local_gateway_id": "",
          "nat_gateway_id": "",
          "network_interface_id": "",
          "transit_gateway_id": "",
          "vpc_endpoint_id": "",
          "vpc_peering_connection_id": ""
         }
        ],
        "tags": {
         "Name": "k8s-vpc-public"
        },
        "tags_all": {
         "Name": "k8s-vpc-public"
        },
        "timeouts": null,
        "vpc_id": "vpc-020baab04492a8145"
       }
      },
      {
       "address": "module.vpc.aws_route_table_association.private[0]",
       "index": 0,
       "mode": "managed",
       "name": "private",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 0,
       "sensitive_values": {},
       "type": "aws_route_table_association",
       "values": {
        "gateway_id": "",
        "id": "rtbassoc-0e76cc5e0bb4ff6dc",
        "route_table_id": "rtb-0303078514c1e5643",
        "subnet_id": "subnet-04064b4652b88ff67"
       }
      },
      {
       "address": "module.vpc.aws_route_table_association.private[1]",
       "index": 1,
       "mode": "managed",
       "name": "private",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 0,
       "sensitive_values": {},
       "type": "aws_route_table_association",
       "values": {
        "gateway_id": "",
        "id": "rtbassoc-0e969d8cbbce16f86",
        "route_table_id": "rtb-0303078514c1e5643",
        "subnet_id": "subnet-0e8a89850f69f9a37"
       }
      },
      {
       "address": "module.vpc.aws_route_table_association.private[2]",
       "index": 2,
       "mode": "managed",
       "name": "private",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 0,
       "sensitive_values": {},
       "type": "aws_route_table_association",
       "values": {
        "gateway_id": "",
        "id": "rtbassoc-01e984c3f2e7ccae4",
        "route_table_id": "rtb-0303078514c1e5643",
        "subnet_id": "subnet-020599695ef4412bc"
       }
      },
      {
       "address": "module.vpc.aws_route_table_association.public[0]",
       "index": 0,
       "mode": "managed",
       "name": "public",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 0,
       "sensitive_values": {},
       "type": "aws_route_table_association",
       "values": {
        "gateway_id": "",
        "id": "rtbassoc-06e14a1a5b0c8f9e4",
        "route_table_id": "rtb-045b86070fe04be5d",
        "subnet_id": "subnet-0e59f78cf02cebca8"
       }
      },
      {
       "address": "module.vpc.aws_route_table_association.public[1]",
       "index": 1,
       "mode": "managed",
       "name": "public",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 0,
       "sensitive_values": {},
       "type": "aws_route_table_association",
       "values": {
        "gateway_id": "",
        "id": "rtbassoc-0bb160880821776b0",
        "route_table_id": "rtb-045b86070fe04be5d",
        "subnet_id": "subnet-014766609e87b6ede"
       }
      },
      {
       "address": "module.vpc.aws_route_table_association.public[2]",
       "index": 2,
       "mode": "managed",
       "name": "public",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 0,
       "sensitive_values": {},
       "type": "aws_route_table_association",
       "values": {
        "gateway_id": "",
        "id": "rtbassoc-058c7f0ddae9eef77",
        "route_table_id": "rtb-045b86070fe04be5d",
        "subnet_id": "subnet-0d75c3e4a7d943a01"
       }
      },
      {
       "address": "module.vpc.aws_subnet.private[0]",
       "index": 0,
       "mode": "managed",
       "name": "private",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 1,
       "sensitive_values": {
        "tags": {},
        "tags_all": {}
       },
       "type": "aws_subnet",
       "values": {
        "arn": "arn:aws:ec2:eu-central-1:435357319394:subnet/subnet-04064b4652b88ff67",
        "assign_ipv6_address_on_creation": false,
        "availability_zone": "eu-central-1a",
        "availability_zone_id": "euc1-az2",
        "cidr_block": "172.16.1.0/24",
        "customer_owned_ipv4_pool": "",
        "enable_dns64": false,
        "enable_resource_name_dns_a_record_on_launch": false,
        "enable_resource_name_dns_aaaa_record_on_launch": false,
        "id": "subnet-04064b4652b88ff67",
        "ipv6_cidr_block": "",
        "ipv6_cidr_block_association_id": "",
        "ipv6_native": false,
        "map_customer_owned_ip_on_launch": false,
        "map_public_ip_on_launch": false,
        "outpost_arn": "",
        "owner_id": "435357319394",
        "private_dns_hostname_type_on_launch": "ip-name",
        "tags": {
         "Name": "k8s-vpc-private-eu-central-1a",
         "kubernetes.io/cluster/aisight_demo-eks": "shared",
         "kubernetes.io/role/internal-elb": "1"
        },
        "tags_all": {
         "Name": "k8s-vpc-private-eu-central-1a",
         "kubernetes.io/cluster/aisight_demo-eks": "shared",
         "kubernetes.io/role/internal-elb": "1"
        },
        "timeouts": null,
        "vpc_id": "vpc-020baab04492a8145"
       }
      },
      {
       "address": "module.vpc.aws_subnet.private[1]",
       "index": 1,
       "mode": "managed",
       "name": "private",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 1,
       "sensitive_values": {
        "tags": {},
        "tags_all": {}
       },
       "type": "aws_subnet",
       "values": {
        "arn": "arn:aws:ec2:eu-central-1:435357319394:subnet/subnet-0e8a89850f69f9a37",
        "assign_ipv6_address_on_creation": false,
        "availability_zone": "eu-central-1b",
        "availability_zone_id": "euc1-az3",
        "cidr_block": "172.16.2.0/24",
        "customer_owned_ipv4_pool": "",
        "enable_dns64": false,
        "enable_resource_name_dns_a_record_on_launch": false,
        "enable_resource_name_dns_aaaa_record_on_launch": false,
        "id": "subnet-0e8a89850f69f9a37",
        "ipv6_cidr_block": "",
        "ipv6_cidr_block_association_id": "",
        "ipv6_native": false,
        "map_customer_owned_ip_on_launch": false,
        "map_public_ip_on_launch": false,
        "outpost_arn": "",
        "owner_id": "435357319394",
        "private_dns_hostname_type_on_launch": "ip-name",
        "tags": {
         "Name": "k8s-vpc-private-eu-central-1b",
         "kubernetes.io/cluster/aisight_demo-eks": "shared",
         "kubernetes.io/role/internal-elb": "1"
        },
        "tags_all": {
         "Name": "k8s-vpc-private-eu-central-1b",
         "kubernetes.io/cluster/aisight_demo-eks": "shared",
         "kubernetes.io/role/internal-elb": "1"
        },
        "timeouts": null,
        "vpc_id": "vpc-020baab04492a8145"
       }
      },
      {
       "address": "module.vpc.aws_subnet.private[2]",
       "index": 2,
       "mode": "managed",
       "name": "private",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 1,
       "sensitive_values": {
        "tags": {},
        "tags_all": {}
       },
       "type": "aws_subnet",
       "values": {
        "arn": "arn:aws:ec2:eu-central-1:435357319394:subnet/subnet-020599695ef4412bc",
        "assign_ipv6_address_on_creation": false,
        "availability_zone": "eu-central-1c",
        "availability_zone_id": "euc1-az1",
        "cidr_block": "172.16.3.0/24",
        "customer_owned_ipv4_pool": "",
        "enable_dns64": false,
        "enable_resource_name_dns_a_record_on_launch": false,
        "enable_resource_name_dns_aaaa_record_on_launch": false,
        "id": "subnet-020599695ef4412bc",
        "ipv6_cidr_block": "",
        "ipv6_cidr_block_association_id": "",
        "ipv6_native": false,
        "map_customer_owned_ip_on_launch": false,
        "map_public_ip_on_launch": false,
        "outpost_arn": "",
        "owner_id": "435357319394",
        "private_dns_hostname_type_on_launch": "ip-name",
        "tags": {
         "Name": "k8s-vpc-private-eu-central-1c",
         "kubernetes.io/cluster/aisight_demo-eks": "shared",
         "kubernetes.io/role/internal-elb": "1"
        },
        "tags_all": {
         "Name": "k8s-vpc-private-eu-central-1c",
         "kubernetes.io/cluster/aisight_demo-eks": "shared",
         "kubernetes.io/role/internal-elb": "1"
        },
        "timeouts": null,
        "vpc_id": "vpc-020baab04492a8145"
       }
      },
      {
       "address": "module.vpc.aws_subnet.public[0]",
       "index": 0,
       "mode": "managed",
       "name": "public",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 1,
       "sensitive_values": {
        "tags": {},
        "tags_all": {}
       },
       "type": "aws_subnet",
       "values": {
        "arn": "arn:aws:ec2:eu-central-1:435357319394:subnet/subnet-0e59f78cf02cebca8",
        "assign_ipv6_address_on_creation": false,
        "availability_zone": "eu-central-1a",
        "availability_zone_id": "euc1-az2",
        "cidr_block": "172.16.4.0/24",
        "customer_owned_ipv4_pool": "",
        "enable_dns64": false,
        "enable_resource_name_dns_a_record_on_launch": false,
        "enable_resource_name_dns_aaaa_record_on_launch": false,
        "id": "subnet-0e59f78cf02cebca8",
        "ipv6_cidr_block": "",
        "ipv6_cidr_block_association_id": "",
        "ipv6_native": false,
        "map_customer_owned_ip_on_launch": false,
        "map_public_ip_on_launch": true,
        "outpost_arn": "",
        "owner_id": "435357319394",
        "private_dns_hostname_type_on_launch": "ip-name",
        "tags": {
         "Name": "k8s-vpc-public-eu-central-1a",
         "kubernetes.io/cluster/aisight_demo-eks": "shared",
         "kubernetes.io/role/elb": "1"
        },
        "tags_all": {
         "Name": "k8s-vpc-public-eu-central-1a",
         "kubernetes.io/cluster/aisight_demo-eks": "shared",
         "kubernetes.io/role/elb": "1"
        },
        "timeouts": null,
        "vpc_id": "vpc-020baab04492a8145"
       }
      },
      {
       "address": "module.vpc.aws_subnet.public[1]",
       "index": 1,
       "mode": "managed",
       "name": "public",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 1,
       "sensitive_values": {
        "tags": {},
        "tags_all": {}
       },
       "type": "aws_subnet",
       "values": {
        "arn": "arn:aws:ec2:eu-central-1:435357319394:subnet/subnet-014766609e87b6ede",
        "assign_ipv6_address_on_creation": false,
        "availability_zone": "eu-central-1b",
        "availability_zone_id": "euc1-az3",
        "cidr_block": "172.16.5.0/24",
        "customer_owned_ipv4_pool": "",
        "enable_dns64": false,
        "enable_resource_name_dns_a_record_on_launch": false,
        "enable_resource_name_dns_aaaa_record_on_launch": false,
        "id": "subnet-014766609e87b6ede",
        "ipv6_cidr_block": "",
        "ipv6_cidr_block_association_id": "",
        "ipv6_native": false,
        "map_customer_owned_ip_on_launch": false,
        "map_public_ip_on_launch": true,
        "outpost_arn": "",
        "owner_id": "435357319394",
        "private_dns_hostname_type_on_launch": "ip-name",
        "tags": {
         "Name": "k8s-vpc-public-eu-central-1b",
         "kubernetes.io/cluster/aisight_demo-eks": "shared",
         "kubernetes.io/role/elb": "1"
        },
        "tags_all": {
         "Name": "k8s-vpc-public-eu-central-1b",
         "kubernetes.io/cluster/aisight_demo-eks": "shared",
         "kubernetes.io/role/elb": "1"
        },
        "timeouts": null,
        "vpc_id": "vpc-020baab04492a8145"
       }
      },
      {
       "address": "module.vpc.aws_subnet.public[2]",
       "index": 2,
       "mode": "managed",
       "name": "public",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 1,
       "sensitive_values": {
        "tags": {},
        "tags_all": {}
       },
       "type": "aws_subnet",
       "values": {
        "arn": "arn:aws:ec2:eu-central-1:435357319394:subnet/subnet-0d75c3e4a7d943a01",
        "assign_ipv6_address_on_creation": false,
        "availability_zone": "eu-central-1c",
        "availability_zone_id": "euc1-az1",
        "cidr_block": "172.16.6.0/24",
        "customer_owned_ipv4_pool": "",
        "enable_dns64": false,
        "enable_resource_name_dns_a_record_on_launch": false,
        "enable_resource_name_dns_aaaa_record_on_launch": false,
        "id": "subnet-0d75c3e4a7d943a01",
        "ipv6_cidr_block": "",
        "ipv6_cidr_block_association_id": "",
        "ipv6_native": false,
        "map_customer_owned_ip_on_launch": false,
        "map_public_ip_on_launch": true,
        "outpost_arn": "",
        "owner_id": "435357319394",
        "private_dns_hostname_type_on_launch": "ip-name",
        "tags": {
         "Name": "k8s-vpc-public-eu-central-1c",
         "kubernetes.io/cluster/aisight_demo-eks": "shared",
         "kubernetes.io/role/elb": "1"
        },
        "tags_all": {
         "Name": "k8s-vpc-public-eu-central-1c",
         "kubernetes.io/cluster/aisight_demo-eks": "shared",
         "kubernetes.io/role/elb": "1"
        },
        "timeouts": null,
        "vpc_id": "vpc-020baab04492a8145"
       }
      },
      {
       "address": "module.vpc.aws_vpc.this[0]",
       "index": 0,
       "mode": "managed",
       "name": "this",
       "provider_name": "registry.terraform.io/hashicorp/aws",
       "schema_version": 1,
       "sensitive_values": {
        "tags": {},
        "tags_all": {}
       },
       "type": "aws_vpc",
       "values": {
        "arn": "arn:aws:ec2:eu-central-1:435357319394:vpc/vpc-020baab04492a8145",
        "assign_generated_ipv6_cidr_block": false,
        "cidr_block": "172.16.0.0/16",
        "default_network_acl_id": "acl-0280b1ada3a9dca5e",
        "default_route_table_id": "rtb-00a9f68d2a4a8eb02",
        "default_security_group_id": "sg-098e5c404719db484",
        "dhcp_options_id": "dopt-a0dd24ca",
        "enable_classiclink": false,
        "enable_classiclink_dns_support": false,
        "enable_dns_hostnames": true,
        "enable_dns_support": true,
        "enable_network_address_usage_metrics": false,
        "id": "vpc-020baab04492a8145",
        "instance_tenancy": "default",
        "ipv4_ipam_pool_id": null,
        "ipv4_netmask_length": null,
        "ipv6_association_id": "",
        "ipv6_cidr_block": "",
        "ipv6_cidr_block_network_border_group": "",
        "ipv6_ipam_pool_id": "",
        "ipv6_netmask_length": 0,
        "main_route_table_id": "rtb-00a9f68d2a4a8eb02",
        "owner_id": "435357319394",
        "tags": {
         "Name": "k8s-vpc"
        },
        "tags_all": {
         "Name": "k8s-vpc"
        }
       }
      }
     ]
    }
   ],
   "resources": [
    {
     "address": "aws_ecr_repository.ecr[\"microservice_aisight\"]",
     "index": "microservice_aisight",
     "mode": "managed",
     "name": "ecr",
     "provider_name": "registry.terraform.io/hashicorp/aws",
     "schema_version": 0,
     "sensitive_values": {
      "encryption_configuration": [
       {}
      ],
      "image_scanning_configuration": [
       {}
      ],
      "tags": {},
      "tags_all": {}
     },
     "type": "aws_ecr_repository",
     "values": {
      "arn": "arn:aws:ecr:eu-central-1:435357319394:repository/microservice_aisight",
      "encryption_configuration": [
       {
        "encryption_type": "KMS",
        "kms_key": "arn:aws:kms:eu-central-1:435357319394:key/1a603205-6ff5-48ca-b882-7e98cd9128ac"
       }
      ],
      "force_delete": null,
      "id": "microservice_aisight",
      "image_scanning_configuration": [
       {
        "scan_on_push": true
       }
      ],
      "image_tag_mutability": "IMMUTABLE",
      "name": "microservice_aisight",
      "registry_id": "435357319394",
      "repository_url": "435357319394.dkr.ecr.eu-central-1.amazonaws.com/microservice_aisight",
      "tags": {
       "Environment": "Dev"
      },
      "tags_all": {
       "Environment": "Dev"
      },
      "timeouts": null
     }
    },
    {
     "address": "local_file.kubeconfig",
     "mode": "managed",
     "name": "kubeconfig",
     "provider_name": "registry.terraform.io/hashicorp/local",
     "schema_version": 0,
     "sensitive_values": {
      "content": true
     },
     "type": "local_file",
     "values": {
      "content_base64": null,
      "directory_permission": "0777",
      "file_permission": "0777",
      "filename": "kubeconfig_aisight_demo-eks",
      "sensitive_content": null,
      "source": null
     }
    }
   ]
  }
 },
 "prior_state": {
  "format_version": "1.0",
  "terraform_version": "1.4.0",
  "values": {
   "outputs": {
    "cluster_endpoint": {
     "sensitive": false,
     "type": "string",
     "value": "https://94AB6DF0F67D05BA57F5EB099F8AEB5E.gr7.eu-central-1.eks.amazonaws.com"
    },
    "cluster_security_group_id": {
     "sensitive": false,
     "type": "string",
     "value": "sg-0d4c3ed613f24cfac"
    },
    "region": {
     "sensitive": false,
     "type": "string",
     "value": "eu-central-1"
    }
   },
   "root_module": {
    "child_modules": [
     {
      "address": "module.eks",
      "child_modules": [
       {
        "address": "module.eks.module.eks_managed_node_group[\"first\"]",
        "child_modules": [
         {
          "address": "module.eks.module.eks_managed_node_group[\"first\"].module.user_data"
         }
        ],
        "resources": [
         {
          "address": "module.eks.module.eks_managed_node_group[\"first\"].data.aws_caller_identity.current",
          "mode": "data",
          "name": "current",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "sensitive_values": {},
          "type": "aws_caller_identity",
          "values": {
           "account_id": "435357319394",
           "arn": "arn:aws:iam::435357319394:user/rafay.jungsher.admin",
           "id": "435357319394",
           "user_id": "AIDAWKXKRQDRNDVS4T2GL"
          }
         },
         {
          "address": "module.eks.module.eks_managed_node_group[\"first\"].data.aws_iam_policy_document.assume_role_policy[0]",
          "index": 0,
          "mode": "data",
          "name": "assume_role_policy",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "sensitive_values": {
           "statement": [
            {
             "actions": [
              false
             ],
             "condition": [],
             "not_actions": [],
             "not_principals": [],
             "not_resources": [],
             "principals": [
              {
               "identifiers": [
                false
               ]
              }
             ],
             "resources": []
            }
           ]
          },
          "type": "aws_iam_policy_document",
          "values": {
           "id": "2560088296",
           "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"EKSNodeAssumeRole\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"ec2.amazonaws.com\"\n      }\n    }\n  ]\n}",
           "override_json": null,
           "override_policy_documents": null,
           "policy_id": null,
           "source_json": null,
           "source_policy_documents": null,
           "statement": [
            {
             "actions": [
              "sts:AssumeRole"
             ],
             "condition": [],
             "effect": "Allow",
             "not_actions": [],
             "not_principals": [],
             "not_resources": [],
             "principals": [
              {
               "identifiers": [
                "ec2.amazonaws.com"
               ],
               "type": "Service"
              }
             ],
             "resources": [],
             "sid": "EKSNodeAssumeRole"
            }
           ],
           "version": "2012-10-17"
          }
         },
         {
          "address": "module.eks.module.eks_managed_node_group[\"first\"].data.aws_partition.current",
          "mode": "data",
          "name": "current",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "sensitive_values": {},
          "type": "aws_partition",
          "values": {
           "dns_suffix": "amazonaws.com",
           "id": "aws",
           "partition": "aws",
           "reverse_dns_prefix": "com.amazonaws"
          }
         },
         {
          "address": "module.eks.module.eks_managed_node_group[\"first\"].aws_eks_node_group.this[0]",
          "depends_on": [
           "data.aws_availability_zones.available",
           "module.eks.aws_cloudwatch_log_group.this",
           "module.eks.aws_eks_cluster.this",
           "module.eks.aws_iam_role.this",
           "module.eks.aws_iam_role_policy_attachment.this",
           "module.eks.aws_security_group.cluster",
           "module.eks.aws_security_group.node",
           "module.eks.aws_security_group_rule.cluster",
           "module.eks.aws_security_group_rule.node",
           "module.eks.data.aws_caller_identity.current",
           "module.eks.data.aws_iam_policy_document.assume_role_policy",
           "module.eks.data.aws_partition.current",
           "module.eks.module.eks_managed_node_group.aws_iam_role.this",
           "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
           "module.eks.module.eks_managed_node_group.aws_launch_template.this",
           "module.eks.module.eks_managed_node_group.aws_security_group.this",
           "module.eks.module.eks_managed_node_group.aws_security_group_rule.this",
           "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
           "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
           "module.eks.module.eks_managed_node_group.data.aws_partition.current",
           "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
           "module.eks.module.kms.aws_kms_external_key.this",
           "module.eks.module.kms.aws_kms_key.this",
           "module.eks.module.kms.data.aws_caller_identity.current",
           "module.eks.module.kms.data.aws_iam_policy_document.this",
           "module.eks.module.kms.data.aws_partition.current",
           "module.vpc.aws_subnet.private",
           "module.vpc.aws_vpc.this",
           "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ],
          "index": 0,
          "mode": "managed",
          "name": "this",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "sensitive_values": {
           "instance_types": [
            false
           ],
           "labels": {},
           "launch_template": [
            {}
           ],
           "remote_access": [],
           "resources": [
            {
             "autoscaling_groups": [
              {}
             ]
            }
           ],
           "scaling_config": [
            {}
           ],
           "subnet_ids": [
            false,
            false,
            false
           ],
           "tags": {},
           "tags_all": {},
           "taint": [],
           "timeouts": {},
           "update_config": [
            {}
           ]
          },
          "tainted": true,
          "type": "aws_eks_node_group",
          "values": {
           "ami_type": "AL2_x86_64",
           "arn": "arn:aws:eks:eu-central-1:435357319394:nodegroup/aisight_demo-eks/first-2023031214530091090000000d/74c36b27-c254-510c-b2a4-58d582864e7e",
           "capacity_type": "ON_DEMAND",
           "cluster_name": "aisight_demo-eks",
           "disk_size": 0,
           "force_update_version": null,
           "id": "aisight_demo-eks:first-2023031214530091090000000d",
           "instance_types": [
            "t3.medium"
           ],
           "labels": {},
           "launch_template": [
            {
             "id": "lt-0c10e58d773a0e666",
             "name": "first-2023031214530064240000000b",
             "version": "1"
            }
           ],
           "node_group_name": "first-2023031214530091090000000d",
           "node_group_name_prefix": "first-",
           "node_role_arn": "arn:aws:iam::435357319394:role/first-eks-node-group-20230312144140331600000001",
           "release_version": "1.25.6-20230304",
           "remote_access": [],
           "resources": [
            {
             "autoscaling_groups": [
              {
               "name": "eks-first-2023031214530091090000000d-74c36b27-c254-510c-b2a4-58d582864e7e"
              }
             ],
             "remote_access_security_group_id": ""
            }
           ],
           "scaling_config": [
            {
             "desired_size": 1,
             "max_size": 3,
             "min_size": 1
            }
           ],
           "status": "CREATE_FAILED",
           "subnet_ids": [
            "subnet-020599695ef4412bc",
            "subnet-04064b4652b88ff67",
            "subnet-0e8a89850f69f9a37"
           ],
           "tags": {
            "Name": "first"
           },
           "tags_all": {
            "Name": "first"
           },
           "taint": [],
           "timeouts": {
            "create": null,
            "delete": null,
            "update": null
           },
           "update_config": [
            {
             "max_unavailable": 1,
             "max_unavailable_percentage": 0
            }
           ],
           "version": "1.25"
          }
         },
         {
          "address": "module.eks.module.eks_managed_node_group[\"first\"].aws_iam_role.this[0]",
          "depends_on": [
           "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
           "module.eks.module.eks_managed_node_group.data.aws_partition.current"
          ],
          "index": 0,
          "mode": "managed",
          "name": "this",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "sensitive_values": {
           "inline_policy": [],
           "managed_policy_arns": [
            false,
            false,
            false
           ],
           "tags": {},
           "tags_all": {}
          },
          "type": "aws_iam_role",
          "values": {
           "arn": "arn:aws:iam::435357319394:role/first-eks-node-group-20230312144140331600000001",
           "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"},\"Sid\":\"EKSNodeAssumeRole\"}],\"Version\":\"2012-10-17\"}",
           "create_date": "2023-03-12T14:41:40Z",
           "description": "EKS managed node group IAM role",
           "force_detach_policies": true,
           "id": "first-eks-node-group-20230312144140331600000001",
           "inline_policy": [],
           "managed_policy_arns": [
            "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
            "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
            "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy"
           ],
           "max_session_duration": 3600,
           "name": "first-eks-node-group-20230312144140331600000001",
           "name_prefix": "first-eks-node-group-",
           "path": "/",
           "permissions_boundary": null,
           "tags": {},
           "tags_all": {},
           "unique_id": "AROAWKXKRQDRIFTXYHCBF"
          }
         },
         {
          "address": "module.eks.module.eks_managed_node_group[\"first\"].aws_iam_role_policy_attachment.this[\"arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly\"]",
          "depends_on": [
           "module.eks.module.eks_managed_node_group.aws_iam_role.this",
           "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
           "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
           "module.eks.module.eks_managed_node_group.data.aws_partition.current"
          ],
          "index": "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
          "mode": "managed",
          "name": "this",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "sensitive_values": {},
          "type": "aws_iam_role_policy_attachment",
          "values": {
           "id": "first-eks-node-group-20230312144140331600000001-20230312144141605400000003",
           "policy_arn": "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
           "role": "first-eks-node-group-20230312144140331600000001"
          }
         },
         {
          "address": "module.eks.module.eks_managed_node_group[\"first\"].aws_iam_role_policy_attachment.this[\"arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy\"]",
          "depends_on": [
           "module.eks.module.eks_managed_node_group.aws_iam_role.this",
           "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
           "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
           "module.eks.module.eks_managed_node_group.data.aws_partition.current"
          ],
          "index": "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
          "mode": "managed",
          "name": "this",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "sensitive_values": {},
          "type": "aws_iam_role_policy_attachment",
          "values": {
           "id": "first-eks-node-group-20230312144140331600000001-20230312144141620900000004",
           "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
           "role": "first-eks-node-group-20230312144140331600000001"
          }
         },
         {
          "address": "module.eks.module.eks_managed_node_group[\"first\"].aws_iam_role_policy_attachment.this[\"arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy\"]",
          "depends_on": [
           "module.eks.module.eks_managed_node_group.aws_iam_role.this",
           "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
           "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
           "module.eks.module.eks_managed_node_group.data.aws_partition.current"
          ],
          "index": "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy",
          "mode": "managed",
          "name": "this",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "sensitive_values": {},
          "type": "aws_iam_role_policy_attachment",
          "values": {
           "id": "first-eks-node-group-20230312144140331600000001-20230312144141682900000005",
           "policy_arn": "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy",
           "role": "first-eks-node-group-20230312144140331600000001"
          }
         },
         {
          "address": "module.eks.module.eks_managed_node_group[\"first\"].aws_launch_template.this[0]",
          "depends_on": [
           "data.aws_availability_zones.available",
           "module.eks.aws_cloudwatch_log_group.this",
           "module.eks.aws_eks_cluster.this",
           "module.eks.aws_iam_role.this",
           "module.eks.aws_iam_role_policy_attachment.this",
           "module.eks.aws_security_group.cluster",
           "module.eks.aws_security_group.node",
           "module.eks.aws_security_group_rule.cluster",
           "module.eks.aws_security_group_rule.node",
           "module.eks.data.aws_caller_identity.current",
           "module.eks.data.aws_iam_policy_document.assume_role_policy",
           "module.eks.data.aws_partition.current",
           "module.eks.module.eks_managed_node_group.aws_iam_role.this",
           "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
           "module.eks.module.eks_managed_node_group.aws_security_group.this",
           "module.eks.module.eks_managed_node_group.aws_security_group_rule.this",
           "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
           "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
           "module.eks.module.eks_managed_node_group.data.aws_partition.current",
           "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
           "module.eks.module.kms.aws_kms_external_key.this",
           "module.eks.module.kms.aws_kms_key.this",
           "module.eks.module.kms.data.aws_caller_identity.current",
           "module.eks.module.kms.data.aws_iam_policy_document.this",
           "module.eks.module.kms.data.aws_partition.current",
           "module.vpc.aws_subnet.private",
           "module.vpc.aws_vpc.this",
           "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ],
          "index": 0,
          "mode": "managed",
          "name": "this",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "sensitive_values": {
           "block_device_mappings": [],
           "capacity_reservation_specification": [],
           "cpu_options": [],
           "credit_specification": [],
           "elastic_gpu_specifications": [],
           "elastic_inference_accelerator": [],
           "enclave_options": [],
           "hibernation_options": [],
           "iam_instance_profile": [],
           "instance_market_options": [],
           "instance_requirements": [],
           "license_specification": [],
           "maintenance_options": [],
           "metadata_options": [
            {}
           ],
           "monitoring": [
            {}
           ],
           "network_interfaces": [],
           "placement": [],
           "private_dns_name_options": [],
           "security_group_names": [],
           "tag_specifications": [
            {
             "tags": {}
            },
            {
             "tags": {}
            },
            {
             "tags": {}
            }
           ],
           "tags": {},
           "tags_all": {},
           "vpc_security_group_ids": [
            false,
            false
           ]
          },
          "type": "aws_launch_template",
          "values": {
           "arn": "arn:aws:ec2:eu-central-1:435357319394:launch-template/lt-0c10e58d773a0e666",
           "block_device_mappings": [],
           "capacity_reservation_specification": [],
           "cpu_options": [],
           "credit_specification": [],
           "default_version": 1,
           "description": "Custom launch template for first EKS managed node group",
           "disable_api_stop": false,
           "disable_api_termination": false,
           "ebs_optimized": "",
           "elastic_gpu_specifications": [],
           "elastic_inference_accelerator": [],
           "enclave_options": [],
           "hibernation_options": [],
           "iam_instance_profile": [],
           "id": "lt-0c10e58d773a0e666",
           "image_id": "",
           "instance_initiated_shutdown_behavior": "",
           "instance_market_options": [],
           "instance_requirements": [],
           "instance_type": "",
           "kernel_id": "",
           "key_name": "",
           "latest_version": 1,
           "license_specification": [],
           "maintenance_options": [],
           "metadata_options": [
            {
             "http_endpoint": "enabled",
             "http_protocol_ipv6": "disabled",
             "http_put_response_hop_limit": 2,
             "http_tokens": "required",
             "instance_metadata_tags": "disabled"
            }
           ],
           "monitoring": [
            {
             "enabled": true
            }
           ],
           "name": "first-2023031214530064240000000b",
           "name_prefix": "first-",
           "network_interfaces": [],
           "placement": [],
           "private_dns_name_options": [],
           "ram_disk_id": "",
           "security_group_names": [],
           "tag_specifications": [
            {
             "resource_type": "instance",
             "tags": {
              "Name": "first"
             }
            },
            {
             "resource_type": "network-interface",
             "tags": {
              "Name": "first"
             }
            },
            {
             "resource_type": "volume",
             "tags": {
              "Name": "first"
             }
            }
           ],
           "tags": {},
           "tags_all": {},
           "update_default_version": true,
           "user_data": "",
           "vpc_security_group_ids": [
            "sg-02107c0d526390e0b",
            "sg-03a7e8ee7cfafc6e8"
           ]
          }
         },
         {
          "address": "module.eks.module.eks_managed_node_group[\"first\"].aws_security_group.this[0]",
          "depends_on": [
           "module.vpc.aws_vpc.this"
          ],
          "index": 0,
          "mode": "managed",
          "name": "this",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 1,
          "sensitive_values": {
           "egress": [],
           "ingress": [],
           "tags": {},
           "tags_all": {}
          },
          "type": "aws_security_group",
          "values": {
           "arn": "arn:aws:ec2:eu-central-1:435357319394:security-group/sg-03a7e8ee7cfafc6e8",
           "description": "EKS managed node group security group",
           "egress": [],
           "id": "sg-03a7e8ee7cfafc6e8",
           "ingress": [],
           "name": "first-eks-node-group-2023031214415238440000000a",
           "name_prefix": "first-eks-node-group-",
           "owner_id": "435357319394",
           "revoke_rules_on_delete": false,
           "tags": {
            "Name": "first-eks-node-group"
           },
           "tags_all": {
            "Name": "first-eks-node-group"
           },
           "timeouts": null,
           "vpc_id": "vpc-020baab04492a8145"
          }
         }
        ]
       },
       {
        "address": "module.eks.module.kms",
        "resources": [
         {
          "address": "module.eks.module.kms.data.aws_caller_identity.current",
          "mode": "data",
          "name": "current",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "sensitive_values": {},
          "type": "aws_caller_identity",
          "values": {
           "account_id": "435357319394",
           "arn": "arn:aws:iam::435357319394:user/rafay.jungsher.admin",
           "id": "435357319394",
           "user_id": "AIDAWKXKRQDRNDVS4T2GL"
          }
         },
         {
          "address": "module.eks.module.kms.data.aws_partition.current",
          "mode": "data",
          "name": "current",
          "provider_name": "registry.terraform.io/hashicorp/aws",
          "schema_version": 0,
          "sensitive_values": {},
          "type": "aws_partition",
          "values": {
           "dns_suffix": "amazonaws.com",
           "id": "aws",
           "partition": "aws",
           "reverse_dns_prefix": "com.amazonaws"
          }
         }
        ]
       }
      ],
      "resources": [
       {
        "address": "module.eks.data.aws_caller_identity.current",
        "mode": "data",
        "name": "current",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 0,
        "sensitive_values": {},
        "type": "aws_caller_identity",
        "values": {
         "account_id": "435357319394",
         "arn": "arn:aws:iam::435357319394:user/rafay.jungsher.admin",
         "id": "435357319394",
         "user_id": "AIDAWKXKRQDRNDVS4T2GL"
        }
       },
       {
        "address": "module.eks.data.aws_default_tags.current",
        "mode": "data",
        "name": "current",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 0,
        "sensitive_values": {
         "tags": {}
        },
        "type": "aws_default_tags",
        "values": {
         "id": "aws",
         "tags": {}
        }
       },
       {
        "address": "module.eks.data.aws_iam_policy_document.assume_role_policy[0]",
        "index": 0,
        "mode": "data",
        "name": "assume_role_policy",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 0,
        "sensitive_values": {
         "statement": [
          {
           "actions": [
            false
           ],
           "condition": [],
           "not_actions": [],
           "not_principals": [],
           "not_resources": [],
           "principals": [
            {
             "identifiers": [
              false
             ]
            }
           ],
           "resources": []
          }
         ]
        },
        "type": "aws_iam_policy_document",
        "values": {
         "id": "2764486067",
         "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"EKSClusterAssumeRole\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"eks.amazonaws.com\"\n      }\n    }\n  ]\n}",
         "override_json": null,
         "override_policy_documents": null,
         "policy_id": null,
         "source_json": null,
         "source_policy_documents": null,
         "statement": [
          {
           "actions": [
            "sts:AssumeRole"
           ],
           "condition": [],
           "effect": "Allow",
           "not_actions": [],
           "not_principals": [],
           "not_resources": [],
           "principals": [
            {
             "identifiers": [
              "eks.amazonaws.com"
             ],
             "type": "Service"
            }
           ],
           "resources": [],
           "sid": "EKSClusterAssumeRole"
          }
         ],
         "version": "2012-10-17"
        }
       },
       {
        "address": "module.eks.data.aws_partition.current",
        "mode": "data",
        "name": "current",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 0,
        "sensitive_values": {},
        "type": "aws_partition",
        "values": {
         "dns_suffix": "amazonaws.com",
         "id": "aws",
         "partition": "aws",
         "reverse_dns_prefix": "com.amazonaws"
        }
       },
       {
        "address": "module.eks.data.tls_certificate.this[0]",
        "index": 0,
        "mode": "data",
        "name": "this",
        "provider_name": "registry.terraform.io/hashicorp/tls",
        "schema_version": 0,
        "sensitive_values": {
         "certificates": [
          {},
          {},
          {},
          {}
         ]
        },
        "type": "tls_certificate",
        "values": {
         "certificates": [
          {
           "cert_pem": "-----BEGIN CERTIFICATE-----\nMIIEdTCCA12gAwIBAgIJAKcOSkw0grd/MA0GCSqGSIb3DQEBCwUAMGgxCzAJBgNV\nBAYTAlVTMSUwIwYDVQQKExxTdGFyZmllbGQgVGVjaG5vbG9naWVzLCBJbmMuMTIw\nMAYDVQQLEylTdGFyZmllbGQgQ2xhc3MgMiBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0\neTAeFw0wOTA5MDIwMDAwMDBaFw0zNDA2MjgxNzM5MTZaMIGYMQswCQYDVQQGEwJV\nUzEQMA4GA1UECBMHQXJpem9uYTETMBEGA1UEBxMKU2NvdHRzZGFsZTElMCMGA1UE\nChMcU3RhcmZpZWxkIFRlY2hub2xvZ2llcywgSW5jLjE7MDkGA1UEAxMyU3RhcmZp\nZWxkIFNlcnZpY2VzIFJvb3QgQ2VydGlmaWNhdGUgQXV0aG9yaXR5IC0gRzIwggEi\nMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDVDDrEKvlO4vW+GZdfjohTsR8/\ny8+fIBNtKTrID30892t2OGPZNmCom15cAICyL1l/9of5JUOG52kbUpqQ4XHj2C0N\nTm/2yEnZtvMaVq4rtnQU68/7JuMauh2WLmo7WJSJR1b/JaCTcFOD2oR0FMNnngRo\nOt+OQFodSk7PQ5E751bWAHDLUu57fa4657wx+UX2wmDPE1kCK4DMNEffud6QZW0C\nzyyRpqbn3oUYSXxmTqM6bam17jQuug0DuDPfR+uxa40l2ZvOgdFFRjKWcIfeAg5J\nQ4W2bHO7ZOphQazJ1FTfhy/HIrImzJ9ZVGif/L4qL8RVHHVAYBeFAlU5i38FAgMB\nAAGjgfAwge0wDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAYYwHQYDVR0O\nBBYEFJxfAN+qAdcwKziIorhtSpzyEZGDMB8GA1UdIwQYMBaAFL9ft9HO3R+G9FtV\nrNzXEMIOqYjnME8GCCsGAQUFBwEBBEMwQTAcBggrBgEFBQcwAYYQaHR0cDovL28u\nc3MyLnVzLzAhBggrBgEFBQcwAoYVaHR0cDovL3guc3MyLnVzL3guY2VyMCYGA1Ud\nHwQfMB0wG6AZoBeGFWh0dHA6Ly9zLnNzMi51cy9yLmNybDARBgNVHSAECjAIMAYG\nBFUdIAAwDQYJKoZIhvcNAQELBQADggEBACMd44pXyn3pF3lM8R5V/cxTbj5HD9/G\nVfKyBDbtgB9TxF00KGu+x1X8Z+rLP3+QsjPNG1gQggL4+C/1E2DUBc7xgQjB3ad1\nl08YuW3e95ORCLp+QCztweq7dp4zBncdDQh/U90bZKuCJ/Fp1U1ervShw3WnWEQt\n8jxwmKy6abaVd38PMV4s/KCHOkdp8Hlf9BRUpJVeEXgSYCfOn8J3/yNTd126/+pZ\n59vPr5KW7ySaNRB6nJHGDn2Z9j8Z3/VyVOEVqQdZe4O/Ui5GjLIAZHYcSNPYeehu\nVsyuLAOQ1xk4meTKCRlb/weWsKh/NEnfVqn3sF/tM+2MR7cwA130A4w=\n-----END CERTIFICATE-----\n",
           "is_ca": true,
           "issuer": "OU=Starfield Class 2 Certification Authority,O=Starfield Technologies\\, Inc.,C=US",
           "not_after": "2034-06-28T17:39:16Z",
           "not_before": "2009-09-02T00:00:00Z",
           "public_key_algorithm": "RSA",
           "serial_number": "12037640545166866303",
           "sha1_fingerprint": "9e99a48a9960b14926bb7f3b02e22da2b0ab7280",
           "signature_algorithm": "SHA256-RSA",
           "subject": "CN=Starfield Services Root Certificate Authority - G2,O=Starfield Technologies\\, Inc.,L=Scottsdale,ST=Arizona,C=US",
           "version": 3
          },
          {
           "cert_pem": "-----BEGIN CERTIFICATE-----\nMIIEkjCCA3qgAwIBAgITBn+USionzfP6wq4rAfkI7rnExjANBgkqhkiG9w0BAQsF\nADCBmDELMAkGA1UEBhMCVVMxEDAOBgNVBAgTB0FyaXpvbmExEzARBgNVBAcTClNj\nb3R0c2RhbGUxJTAjBgNVBAoTHFN0YXJmaWVsZCBUZWNobm9sb2dpZXMsIEluYy4x\nOzA5BgNVBAMTMlN0YXJmaWVsZCBTZXJ2aWNlcyBSb290IENlcnRpZmljYXRlIEF1\ndGhvcml0eSAtIEcyMB4XDTE1MDUyNTEyMDAwMFoXDTM3MTIzMTAxMDAwMFowOTEL\nMAkGA1UEBhMCVVMxDzANBgNVBAoTBkFtYXpvbjEZMBcGA1UEAxMQQW1hem9uIFJv\nb3QgQ0EgMTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBALJ4gHHKeNXj\nca9HgFB0fW7Y14h29Jlo91ghYPl0hAEvrAIthtOgQ3pOsqTQNroBvo3bSMgHFzZM\n9O6II8c+6zf1tRn4SWiw3te5djgdYZ6k/oI2peVKVuRF4fn9tBb6dNqcmzU5L/qw\nIFAGbHrQgLKm+a/sRxmPUDgH3KKHOVj4utWp+UhnMJbulHheb4mjUcAwhmahRWa6\nVOujw5H5SNz/0egwLX0tdHA114gk957EWW67c4cX8jJGKLhD+rcdqsq08p8kDi1L\n93FcXmn/6pUCyziKrlA4b9v7LWIbxcceVOF34GfID5yHI9Y/QCB/IIDEgEw+OyQm\njgSubJrIqg0CAwEAAaOCATEwggEtMA8GA1UdEwEB/wQFMAMBAf8wDgYDVR0PAQH/\nBAQDAgGGMB0GA1UdDgQWBBSEGMyFNOy8DJSULghZnMeyEE4KCDAfBgNVHSMEGDAW\ngBScXwDfqgHXMCs4iKK4bUqc8hGRgzB4BggrBgEFBQcBAQRsMGowLgYIKwYBBQUH\nMAGGImh0dHA6Ly9vY3NwLnJvb3RnMi5hbWF6b250cnVzdC5jb20wOAYIKwYBBQUH\nMAKGLGh0dHA6Ly9jcnQucm9vdGcyLmFtYXpvbnRydXN0LmNvbS9yb290ZzIuY2Vy\nMD0GA1UdHwQ2MDQwMqAwoC6GLGh0dHA6Ly9jcmwucm9vdGcyLmFtYXpvbnRydXN0\nLmNvbS9yb290ZzIuY3JsMBEGA1UdIAQKMAgwBgYEVR0gADANBgkqhkiG9w0BAQsF\nAAOCAQEAYjdCXLwQtT6LLOkMm2xF4gcAevnFWAu5CIw+7bMlPLVvUOTNNWqnkzSW\nMiGpSESrnO09tKpzbeR/FoCJbM8oAxiDR3mjEH4wW6w7sGDgd9QIpuEdfF7Au/ma\neyKdpwAJfqxGF4PcnCZXmTA5YpaP7dreqsXMGz7KQ2hsVxa81Q4gLv7/wmpdLqBK\nbRRYh5TmOTFffHPLkIhqhBGWJ6bt2YFGpn6jcgAKUj6DiAdjd4lpFw85hdKrCEVN\n0FE6/V1dN2RMfjCyVSRCnTawXZwXgWHxyvkQAiSr6w10kY17RSlQOYiypok1JR4U\nakcjMS9cmvqtmg5iUaQqqcT5NJ0hGA==\n-----END CERTIFICATE-----\n",
           "is_ca": true,
           "issuer": "CN=Starfield Services Root Certificate Authority - G2,O=Starfield Technologies\\, Inc.,L=Scottsdale,ST=Arizona,C=US",
           "not_after": "2037-12-31T01:00:00Z",
           "not_before": "2015-05-25T12:00:00Z",
           "public_key_algorithm": "RSA",
           "serial_number": "144918191876577076464031512351042010504348870",
           "sha1_fingerprint": "06b25927c42a721631c1efd9431e648fa62e1e39",
           "signature_algorithm": "SHA256-RSA",
           "subject": "CN=Amazon Root CA 1,O=Amazon,C=US",
           "version": 3
          },
          {
           "cert_pem": "-----BEGIN CERTIFICATE-----\nMIIEXjCCA0agAwIBAgITB3MSSkvL1E7HtTvq8ZSELToPoTANBgkqhkiG9w0BAQsF\nADA5MQswCQYDVQQGEwJVUzEPMA0GA1UEChMGQW1hem9uMRkwFwYDVQQDExBBbWF6\nb24gUm9vdCBDQSAxMB4XDTIyMDgyMzIyMjUzMFoXDTMwMDgyMzIyMjUzMFowPDEL\nMAkGA1UEBhMCVVMxDzANBgNVBAoTBkFtYXpvbjEcMBoGA1UEAxMTQW1hem9uIFJT\nQSAyMDQ4IE0wMjCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBALtDGMZa\nqHneKei1by6+pUPPLljTB143Si6VpEWPc6mSkFhZb/6qrkZyoHlQLbDYnI2D7hD0\nsdzEqfnuAjIsuXQLG3A8TvX6V3oFNBFVe8NlLJHvBseKY88saLwufxkZVwk74g4n\nWlNMXzla9Y5F3wwRHwMVH443xGz6UtGSZSqQ94eFx5X7Tlqt8whi8qCaKdZ5rNak\n+r9nUThOeClqFd4oXych//Rc7Y0eX1KNWHYSI1Nk31mYgiK3JvH063g+K9tHA63Z\neTgKgndlh+WI+zv7i44HepRZjA1FYwYZ9Vv/9UkC5Yz8/yU65fgjaE+wVHM4e/Yy\nC2osrPWE7gJ+dXMCAwEAAaOCAVowggFWMBIGA1UdEwEB/wQIMAYBAf8CAQAwDgYD\nVR0PAQH/BAQDAgGGMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAdBgNV\nHQ4EFgQUwDFSzVpQw4J8dHHOy+mc+XrrguIwHwYDVR0jBBgwFoAUhBjMhTTsvAyU\nlC4IWZzHshBOCggwewYIKwYBBQUHAQEEbzBtMC8GCCsGAQUFBzABhiNodHRwOi8v\nb2NzcC5yb290Y2ExLmFtYXpvbnRydXN0LmNvbTA6BggrBgEFBQcwAoYuaHR0cDov\nL2NydC5yb290Y2ExLmFtYXpvbnRydXN0LmNvbS9yb290Y2ExLmNlcjA/BgNVHR8E\nODA2MDSgMqAwhi5odHRwOi8vY3JsLnJvb3RjYTEuYW1hem9udHJ1c3QuY29tL3Jv\nb3RjYTEuY3JsMBMGA1UdIAQMMAowCAYGZ4EMAQIBMA0GCSqGSIb3DQEBCwUAA4IB\nAQAtTi6Fs0Azfi+iwm7jrz+CSxHH+uHl7Law3MQSXVtR8RV53PtR6r/6gNpqlzdo\nZq4FKbADi1v9Bun8RY8D51uedRfjsbeodizeBB8nXmeyD33Ep7VATj4ozcd31YFV\nfgRhvTSxNrrTlNpWkUk0m3BMPv8sg381HhA6uEYokE5q9uws/3YkKqRiEz3TsaWm\nJqIRZhMbgAfp7O7FUwFIb7UIspogZSKxPIWJpxiPo3TcBambbVtQOcNRWz5qCQdD\nslI2yayq0n2TXoHyNCLEH8rpsJRVILFsg0jc7BaFrMnF462+ajSehgj12IidNeRN\n4zl+EoNaWdpnWndvSpAEkq2P\n-----END CERTIFICATE-----\n",
           "is_ca": true,
           "issuer": "CN=Amazon Root CA 1,O=Amazon,C=US",
           "not_after": "2030-08-23T22:25:30Z",
           "not_before": "2022-08-23T22:25:30Z",
           "public_key_algorithm": "RSA",
           "serial_number": "166129353110899469622597955040406457904926625",
           "sha1_fingerprint": "414a2060b738c635cc7fc243e052615592830c53",
           "signature_algorithm": "SHA256-RSA",
           "subject": "CN=Amazon RSA 2048 M02,O=Amazon,C=US",
           "version": 3
          },
          {
           "cert_pem": "-----BEGIN CERTIFICATE-----\nMIIF9DCCBNygAwIBAgIQCj0VyaxIwR/blmiItwoRlzANBgkqhkiG9w0BAQsFADA8\nMQswCQYDVQQGEwJVUzEPMA0GA1UEChMGQW1hem9uMRwwGgYDVQQDExNBbWF6b24g\nUlNBIDIwNDggTTAyMB4XDTIzMDIxMDAwMDAwMFoXDTIzMDYxMjIzNTk1OVowLjEs\nMCoGA1UEAxMjb2lkYy5la3MuZXUtY2VudHJhbC0xLmFtYXpvbmF3cy5jb20wggEi\nMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCq11gbcVpBh2lFRI3gsZGh9J4W\nBx3DyNenWCjRZIaCYPlHiL7MfoQJ9jXJS1TkfbR0ByngLtFualJyvglnrIf8VA47\n74VKGZi58mHnyjnqwYRPAw4e2aftdnorG2shbiwYxGb2LX+gNGs7zVSasD2bgZv7\n/KrdPDLuYOKMhOESdP6lFnFhU4fNkQIAl63gra4mzBrmkSRy4WzYpLfaY6FCaP6g\nqrkcYtQAH9frBdr6KerrzsRO1Hg5Yq0Iv3x5ZionmoR2KSlahNiVC9NaDkr1W1Kp\nCqIPHKlOQJSKrZ2BCh/eYm+4H/Y/+rHst/UDIpadAFQFvbT2ShDQX3tymkZPAgMB\nAAGjggL+MIIC+jAfBgNVHSMEGDAWgBTAMVLNWlDDgnx0cc7L6Zz5euuC4jAdBgNV\nHQ4EFgQUaSoHF8Vt9wCGV85bZAnXKYpKwH4wLgYDVR0RBCcwJYIjb2lkYy5la3Mu\nZXUtY2VudHJhbC0xLmFtYXpvbmF3cy5jb20wDgYDVR0PAQH/BAQDAgWgMB0GA1Ud\nJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjA7BgNVHR8ENDAyMDCgLqAshipodHRw\nOi8vY3JsLnIybTAyLmFtYXpvbnRydXN0LmNvbS9yMm0wMi5jcmwwEwYDVR0gBAww\nCjAIBgZngQwBAgEwdQYIKwYBBQUHAQEEaTBnMC0GCCsGAQUFBzABhiFodHRwOi8v\nb2NzcC5yMm0wMi5hbWF6b250cnVzdC5jb20wNgYIKwYBBQUHMAKGKmh0dHA6Ly9j\ncnQucjJtMDIuYW1hem9udHJ1c3QuY29tL3IybTAyLmNlcjAMBgNVHRMBAf8EAjAA\nMIIBgAYKKwYBBAHWeQIEAgSCAXAEggFsAWoAdwDoPtDaPvUGNTLnVyi8iWvJA9PL\n0RFr7Otp4Xd9bQa9bgAAAYY7hF0YAAAEAwBIMEYCIQD2a/xUEV4+HJgD7ufh9qxG\nPSrfxu6Jk/to8gWJxjoH9QIhAIb2cfIShaemu6Rfw6h8RoPP8QPXQThF5yELe73r\n0TOfAHYAs3N3B+GEUPhjhtYFqdwRCUp5LbFnDAuH3PADDnk2pZoAAAGGO4RdQQAA\nBAMARzBFAiBau2P5wzFH8vxknJG1EoWwbMlbGcF0/76pvM1syf2YVgIhAKOB7nwo\npzMmnSPCxyP6Is4TiQYldhJDHcPnIb8brvmwAHcAtz77JN+cTbp18jnFulj0bF38\nQs96nzXEnh0JgSXttJkAAAGGO4Rc+AAABAMASDBGAiEAolYMtPBJ4Jn5lLrMi0p+\nWaYF3c93qsarSIeW48iuCmsCIQCdStKQFfX1Ve8amuu5Q4VHdiWcEtDwJWfsAFoL\n4JuQFzANBgkqhkiG9w0BAQsFAAOCAQEAkw0aVQVsAH4bSKIh9oVJWbvtPaafW8T8\nJeNzMXCDeYUQK9y6WkrMVelan1NHBzQuaV/QySgU8AnQRZhq5VQa2YWH+t22Kefq\nPhlzNZvsmRWtzGCfUh1F8upeKLaQanrUmzDVl7o1WxmHSMjXrjyED9RflfCVtbx0\nk9TNLNHYPI89dA5xMTebOnkTtgblpja6oq/VtknIAFJijMa/OIpB4zps64QeLT6j\n5TS1Ssh3FvL81VjiO/ZvQ7qn51S6D5EAjeMKI3rYGr7mcc0rNwonw5mJpwxBYuyj\nb2HDgOB7X4ZuPgllAEQKG8b9mrn5qFsGBrQYGf8mK06EC8ewVECwxg==\n-----END CERTIFICATE-----\n",
           "is_ca": false,
           "issuer": "CN=Amazon RSA 2048 M02,O=Amazon,C=US",
           "not_after": "2023-06-12T23:59:59Z",
           "not_before": "2023-02-10T00:00:00Z",
           "public_key_algorithm": "RSA",
           "serial_number": "13609451975001501619276004598468972951",
           "sha1_fingerprint": "edbe269ea492a2209d55780ca2d9cf6e99a49baa",
           "signature_algorithm": "SHA256-RSA",
           "subject": "CN=oidc.eks.eu-central-1.amazonaws.com",
           "version": 3
          }
         ],
         "content": null,
         "id": "ff7dc60e5396294bf9a5d43becd0dbdb763fe4ea",
         "url": "https://oidc.eks.eu-central-1.amazonaws.com/id/94AB6DF0F67D05BA57F5EB099F8AEB5E",
         "verify_chain": true
        }
       },
       {
        "address": "module.eks.aws_cloudwatch_log_group.this[0]",
        "index": 0,
        "mode": "managed",
        "name": "this",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 0,
        "sensitive_values": {
         "tags": {},
         "tags_all": {}
        },
        "type": "aws_cloudwatch_log_group",
        "values": {
         "arn": "arn:aws:logs:eu-central-1:435357319394:log-group:/aws/eks/aisight_demo-eks/cluster",
         "id": "/aws/eks/aisight_demo-eks/cluster",
         "kms_key_id": "",
         "name": "/aws/eks/aisight_demo-eks/cluster",
         "name_prefix": "",
         "retention_in_days": 90,
         "skip_destroy": false,
         "tags": {},
         "tags_all": {}
        }
       },
       {
        "address": "module.eks.aws_eks_cluster.this[0]",
        "depends_on": [
         "data.aws_availability_zones.available",
         "module.eks.aws_cloudwatch_log_group.this",
         "module.eks.aws_iam_role.this",
         "module.eks.aws_iam_role_policy_attachment.this",
         "module.eks.aws_security_group.cluster",
         "module.eks.aws_security_group.node",
         "module.eks.aws_security_group_rule.cluster",
         "module.eks.aws_security_group_rule.node",
         "module.eks.data.aws_caller_identity.current",
         "module.eks.data.aws_iam_policy_document.assume_role_policy",
         "module.eks.data.aws_partition.current",
         "module.eks.module.kms.aws_kms_external_key.this",
         "module.eks.module.kms.aws_kms_key.this",
         "module.eks.module.kms.data.aws_caller_identity.current",
         "module.eks.module.kms.data.aws_iam_policy_document.this",
         "module.eks.module.kms.data.aws_partition.current",
         "module.vpc.aws_subnet.private",
         "module.vpc.aws_vpc.this",
         "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
        ],
        "index": 0,
        "mode": "managed",
        "name": "this",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 0,
        "sensitive_values": {
         "certificate_authority": [
          {}
         ],
         "enabled_cluster_log_types": [
          false,
          false,
          false
         ],
         "encryption_config": [],
         "identity": [
          {
           "oidc": [
            {}
           ]
          }
         ],
         "kubernetes_network_config": [
          {}
         ],
         "outpost_config": [],
         "tags": {},
         "tags_all": {},
         "timeouts": {},
         "vpc_config": [
          {
           "public_access_cidrs": [
            false
           ],
           "security_group_ids": [
            false
           ],
           "subnet_ids": [
            false,
            false,
            false
           ]
          }
         ]
        },
        "type": "aws_eks_cluster",
        "values": {
         "arn": "arn:aws:eks:eu-central-1:435357319394:cluster/aisight_demo-eks",
         "certificate_authority": [
          {
           "data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMvakNDQWVhZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJek1ETXhNakUwTkRnek1Wb1hEVE16TURNd09URTBORGd6TVZvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTHpnCnNjb1AxSmZUUWVVZCtReWx3UFYyaUNJL1g1SEo3Mk13bG95S3pWRVBITmVnZm5KMHdFWEw5Q3VrbkQ3dEkwZFQKckg2T0cvSDhCaEdKMjFzR2lwVmFjL1JubHdxLy8ycUVOOWw5TWsvU0l3WnN1RzYxRTM0RVcwYStoYXV0aDVEUgpuK2YvcEJhL3NrcjR0TGdsaUI5elBwZ2tPVlZ0RlRjOWpxTHFlNEJkVDM0a0ZwKzhuaEFJckJVNGxrckt0bVo1Ck81VllCV2dudkNYOE1yb3M2dUgxd3FRcktoRjNXTjhrNG9pd1IwQUVTaWZUV0FuaTMxbnNsMk0rN3pwbEdzTXAKb2h3bUhMYUtZaVM2M0Zwa2x2c09ud0dydlBGL056enZ0SitFNFhrblFYa0dDaWsrMVFSaHM3QjNBN0d3b0dXOQpMSXRFTjNGbmhVMnVHcnU2eTgwQ0F3RUFBYU5aTUZjd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZOYWJTYUVGU2NUNEdTVGpuWjhyUzBkbVVvc1VNQlVHQTFVZEVRUU8KTUF5Q0NtdDFZbVZ5Ym1WMFpYTXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBRGVvR2xVSVFsUmc2MGNWeElERApxbmlwWncrU3dGZjJYcTd1MGlzQXpjRHpBZXBJbXBZaU1QT2E4L1hteXkxWEJFankvdFNhTkkySDlpNjhaVGtBCjVMb0ZUVzVOQ1VZazVsYTFxOEs1ZHZWQmErbnhRWE5hS1FtT1hVWGZQTWt5b1RqK3E0Rk5sVzc2K0JvdDVZelQKRHIwbUs3MDltVStNOXkwS1VidkNKZ0J3bkxyMkJMRVdkejhibXo1Z3dUQVJQYmdUZElJbDVYT2UwbmQ4di91VApIRytyeVByZnpUM3lwUUlXKzY0b0JwVFdVZmdUR2YxbGJJTzV1cnZueFdwUjRPNmlleUkxeVA0SzRMK3ZSbVdnCkVqckxVYXRxRHoxUm1QR3MzSHZDQlFnTnI5aU9veWtPRDBDNWxTMnBabWNKNjFNOC9DTDhYbGpkYUpXQlpZNVYKUkNRPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
          }
         ],
         "cluster_id": null,
         "created_at": "2023-03-12 14:41:59.384 +0000 UTC",
         "enabled_cluster_log_types": [
          "api",
          "audit",
          "authenticator"
         ],
         "encryption_config": [],
         "endpoint": "https://94AB6DF0F67D05BA57F5EB099F8AEB5E.gr7.eu-central-1.eks.amazonaws.com",
         "id": "aisight_demo-eks",
         "identity": [
          {
           "oidc": [
            {
             "issuer": "https://oidc.eks.eu-central-1.amazonaws.com/id/94AB6DF0F67D05BA57F5EB099F8AEB5E"
            }
           ]
          }
         ],
         "kubernetes_network_config": [
          {
           "ip_family": "ipv4",
           "service_ipv4_cidr": "10.100.0.0/16",
           "service_ipv6_cidr": ""
          }
         ],
         "name": "aisight_demo-eks",
         "outpost_config": [],
         "platform_version": "eks.1",
         "role_arn": "arn:aws:iam::435357319394:role/aisight_demo-eks-cluster-20230312144140332000000002",
         "status": "ACTIVE",
         "tags": {},
         "tags_all": {},
         "timeouts": {
          "create": null,
          "delete": null,
          "update": null
         },
         "version": "1.25",
         "vpc_config": [
          {
           "cluster_security_group_id": "sg-01641985f7f813c3f",
           "endpoint_private_access": false,
           "endpoint_public_access": true,
           "public_access_cidrs": [
            "0.0.0.0/0"
           ],
           "security_group_ids": [
            "sg-0d4c3ed613f24cfac"
           ],
           "subnet_ids": [
            "subnet-020599695ef4412bc",
            "subnet-04064b4652b88ff67",
            "subnet-0e8a89850f69f9a37"
           ],
           "vpc_id": "vpc-020baab04492a8145"
          }
         ]
        }
       },
       {
        "address": "module.eks.aws_iam_openid_connect_provider.oidc_provider[0]",
        "depends_on": [
         "data.aws_availability_zones.available",
         "module.eks.aws_cloudwatch_log_group.this",
         "module.eks.aws_eks_cluster.this",
         "module.eks.aws_iam_role.this",
         "module.eks.aws_iam_role_policy_attachment.this",
         "module.eks.aws_security_group.cluster",
         "module.eks.aws_security_group.node",
         "module.eks.aws_security_group_rule.cluster",
         "module.eks.aws_security_group_rule.node",
         "module.eks.data.aws_caller_identity.current",
         "module.eks.data.aws_iam_policy_document.assume_role_policy",
         "module.eks.data.aws_partition.current",
         "module.eks.data.tls_certificate.this",
         "module.eks.module.kms.aws_kms_external_key.this",
         "module.eks.module.kms.aws_kms_key.this",
         "module.eks.module.kms.data.aws_caller_identity.current",
         "module.eks.module.kms.data.aws_iam_policy_document.this",
         "module.eks.module.kms.data.aws_partition.current",
         "module.vpc.aws_subnet.private",
         "module.vpc.aws_vpc.this",
         "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
        ],
        "index": 0,
        "mode": "managed",
        "name": "oidc_provider",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 0,
        "sensitive_values": {
         "client_id_list": [
          false
         ],
         "tags": {},
         "tags_all": {},
         "thumbprint_list": [
          false
         ]
        },
        "type": "aws_iam_openid_connect_provider",
        "values": {
         "arn": "arn:aws:iam::435357319394:oidc-provider/oidc.eks.eu-central-1.amazonaws.com/id/94AB6DF0F67D05BA57F5EB099F8AEB5E",
         "client_id_list": [
          "sts.amazonaws.com"
         ],
         "id": "arn:aws:iam::435357319394:oidc-provider/oidc.eks.eu-central-1.amazonaws.com/id/94AB6DF0F67D05BA57F5EB099F8AEB5E",
         "tags": {
          "Name": "aisight_demo-eks-eks-irsa"
         },
         "tags_all": {
          "Name": "aisight_demo-eks-eks-irsa"
         },
         "thumbprint_list": [
          "9e99a48a9960b14926bb7f3b02e22da2b0ab7280"
         ],
         "url": "oidc.eks.eu-central-1.amazonaws.com/id/94AB6DF0F67D05BA57F5EB099F8AEB5E"
        }
       },
       {
        "address": "module.eks.aws_iam_role.this[0]",
        "depends_on": [
         "module.eks.data.aws_iam_policy_document.assume_role_policy",
         "module.eks.data.aws_partition.current"
        ],
        "index": 0,
        "mode": "managed",
        "name": "this",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 0,
        "sensitive_values": {
         "inline_policy": [
          {}
         ],
         "managed_policy_arns": [
          false,
          false
         ],
         "tags": {},
         "tags_all": {}
        },
        "type": "aws_iam_role",
        "values": {
         "arn": "arn:aws:iam::435357319394:role/aisight_demo-eks-cluster-20230312144140332000000002",
         "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"eks.amazonaws.com\"},\"Sid\":\"EKSClusterAssumeRole\"}],\"Version\":\"2012-10-17\"}",
         "create_date": "2023-03-12T14:41:40Z",
         "description": "",
         "force_detach_policies": true,
         "id": "aisight_demo-eks-cluster-20230312144140332000000002",
         "inline_policy": [
          {
           "name": "aisight_demo-eks-cluster",
           "policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Action\":[\"logs:CreateLogGroup\"],\"Effect\":\"Deny\",\"Resource\":\"*\"}]}"
          }
         ],
         "managed_policy_arns": [
          "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
          "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController"
         ],
         "max_session_duration": 3600,
         "name": "aisight_demo-eks-cluster-20230312144140332000000002",
         "name_prefix": "aisight_demo-eks-cluster-",
         "path": "/",
         "permissions_boundary": null,
         "tags": {},
         "tags_all": {},
         "unique_id": "AROAWKXKRQDRKTX4ZO5ZM"
        }
       },
       {
        "address": "module.eks.aws_iam_role_policy_attachment.this[\"arn:aws:iam::aws:policy/AmazonEKSClusterPolicy\"]",
        "depends_on": [
         "module.eks.aws_iam_role.this",
         "module.eks.data.aws_iam_policy_document.assume_role_policy",
         "module.eks.data.aws_partition.current"
        ],
        "index": "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
        "mode": "managed",
        "name": "this",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 0,
        "sensitive_values": {},
        "type": "aws_iam_role_policy_attachment",
        "values": {
         "id": "aisight_demo-eks-cluster-20230312144140332000000002-20230312144142094200000006",
         "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
         "role": "aisight_demo-eks-cluster-20230312144140332000000002"
        }
       },
       {
        "address": "module.eks.aws_iam_role_policy_attachment.this[\"arn:aws:iam::aws:policy/AmazonEKSVPCResourceController\"]",
        "depends_on": [
         "module.eks.aws_iam_role.this",
         "module.eks.data.aws_iam_policy_document.assume_role_policy",
         "module.eks.data.aws_partition.current"
        ],
        "index": "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController",
        "mode": "managed",
        "name": "this",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 0,
        "sensitive_values": {},
        "type": "aws_iam_role_policy_attachment",
        "values": {
         "id": "aisight_demo-eks-cluster-20230312144140332000000002-20230312144142201000000007",
         "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController",
         "role": "aisight_demo-eks-cluster-20230312144140332000000002"
        }
       },
       {
        "address": "module.eks.aws_security_group.cluster[0]",
        "depends_on": [
         "module.vpc.aws_vpc.this"
        ],
        "index": 0,
        "mode": "managed",
        "name": "cluster",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 1,
        "sensitive_values": {
         "egress": [
          {
           "cidr_blocks": [],
           "ipv6_cidr_blocks": [],
           "prefix_list_ids": [],
           "security_groups": [
            false
           ]
          },
          {
           "cidr_blocks": [],
           "ipv6_cidr_blocks": [],
           "prefix_list_ids": [],
           "security_groups": [
            false
           ]
          }
         ],
         "ingress": [
          {
           "cidr_blocks": [],
           "ipv6_cidr_blocks": [],
           "prefix_list_ids": [],
           "security_groups": [
            false
           ]
          }
         ],
         "tags": {},
         "tags_all": {}
        },
        "type": "aws_security_group",
        "values": {
         "arn": "arn:aws:ec2:eu-central-1:435357319394:security-group/sg-0d4c3ed613f24cfac",
         "description": "EKS cluster security group",
         "egress": [
          {
           "cidr_blocks": [],
           "description": "Cluster API to node groups",
           "from_port": 443,
           "ipv6_cidr_blocks": [],
           "prefix_list_ids": [],
           "protocol": "tcp",
           "security_groups": [
            "sg-02107c0d526390e0b"
           ],
           "self": false,
           "to_port": 443
          },
          {
           "cidr_blocks": [],
           "description": "Cluster API to node kubelets",
           "from_port": 10250,
           "ipv6_cidr_blocks": [],
           "prefix_list_ids": [],
           "protocol": "tcp",
           "security_groups": [
            "sg-02107c0d526390e0b"
           ],
           "self": false,
           "to_port": 10250
          }
         ],
         "id": "sg-0d4c3ed613f24cfac",
         "ingress": [
          {
           "cidr_blocks": [],
           "description": "Node groups to cluster API",
           "from_port": 443,
           "ipv6_cidr_blocks": [],
           "prefix_list_ids": [],
           "protocol": "tcp",
           "security_groups": [
            "sg-02107c0d526390e0b"
           ],
           "self": false,
           "to_port": 443
          }
         ],
         "name": "aisight_demo-eks-cluster-20230312144152318900000009",
         "name_prefix": "aisight_demo-eks-cluster-",
         "owner_id": "435357319394",
         "revoke_rules_on_delete": false,
         "tags": {
          "Name": "aisight_demo-eks-cluster"
         },
         "tags_all": {
          "Name": "aisight_demo-eks-cluster"
         },
         "timeouts": null,
         "vpc_id": "vpc-020baab04492a8145"
        }
       },
       {
        "address": "module.eks.aws_security_group.node[0]",
        "depends_on": [
         "module.vpc.aws_vpc.this"
        ],
        "index": 0,
        "mode": "managed",
        "name": "node",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 1,
        "sensitive_values": {
         "egress": [
          {
           "cidr_blocks": [
            false
           ],
           "ipv6_cidr_blocks": [],
           "prefix_list_ids": [],
           "security_groups": []
          },
          {
           "cidr_blocks": [
            false
           ],
           "ipv6_cidr_blocks": [],
           "prefix_list_ids": [],
           "security_groups": []
          },
          {
           "cidr_blocks": [
            false
           ],
           "ipv6_cidr_blocks": [],
           "prefix_list_ids": [],
           "security_groups": []
          },
          {
           "cidr_blocks": [],
           "ipv6_cidr_blocks": [],
           "prefix_list_ids": [],
           "security_groups": [
            false
           ]
          },
          {
           "cidr_blocks": [],
           "ipv6_cidr_blocks": [],
           "prefix_list_ids": [],
           "security_groups": []
          },
          {
           "cidr_blocks": [],
           "ipv6_cidr_blocks": [],
           "prefix_list_ids": [],
           "security_groups": []
          }
         ],
         "ingress": [
          {
           "cidr_blocks": [],
           "ipv6_cidr_blocks": [],
           "prefix_list_ids": [],
           "security_groups": [
            false
           ]
          },
          {
           "cidr_blocks": [],
           "ipv6_cidr_blocks": [],
           "prefix_list_ids": [],
           "security_groups": [
            false
           ]
          },
          {
           "cidr_blocks": [],
           "ipv6_cidr_blocks": [],
           "prefix_list_ids": [],
           "security_groups": []
          },
          {
           "cidr_blocks": [],
           "ipv6_cidr_blocks": [],
           "prefix_list_ids": [],
           "security_groups": []
          }
         ],
         "tags": {},
         "tags_all": {}
        },
        "type": "aws_security_group",
        "values": {
         "arn": "arn:aws:ec2:eu-central-1:435357319394:security-group/sg-02107c0d526390e0b",
         "description": "EKS node shared security group",
         "egress": [
          {
           "cidr_blocks": [
            "0.0.0.0/0"
           ],
           "description": "Egress NTP/TCP to internet",
           "from_port": 123,
           "ipv6_cidr_blocks": [],
           "prefix_list_ids": [],
           "protocol": "tcp",
           "security_groups": [],
           "self": false,
           "to_port": 123
          },
          {
           "cidr_blocks": [
            "0.0.0.0/0"
           ],
           "description": "Egress NTP/UDP to internet",
           "from_port": 123,
           "ipv6_cidr_blocks": [],
           "prefix_list_ids": [],
           "protocol": "udp",
           "security_groups": [],
           "self": false,
           "to_port": 123
          },
          {
           "cidr_blocks": [
            "0.0.0.0/0"
           ],
           "description": "Egress all HTTPS to internet",
           "from_port": 443,
           "ipv6_cidr_blocks": [],
           "prefix_list_ids": [],
           "protocol": "tcp",
           "security_groups": [],
           "self": false,
           "to_port": 443
          },
          {
           "cidr_blocks": [],
           "description": "Node groups to cluster API",
           "from_port": 443,
           "ipv6_cidr_blocks": [],
           "prefix_list_ids": [],
           "protocol": "tcp",
           "security_groups": [
            "sg-0d4c3ed613f24cfac"
           ],
           "self": false,
           "to_port": 443
          },
          {
           "cidr_blocks": [],
           "description": "Node to node CoreDNS",
           "from_port": 53,
           "ipv6_cidr_blocks": [],
           "prefix_list_ids": [],
           "protocol": "tcp",
           "security_groups": [],
           "self": true,
           "to_port": 53
          },
          {
           "cidr_blocks": [],
           "description": "Node to node CoreDNS",
           "from_port": 53,
           "ipv6_cidr_blocks": [],
           "prefix_list_ids": [],
           "protocol": "udp",
           "security_groups": [],
           "self": true,
           "to_port": 53
          }
         ],
         "id": "sg-02107c0d526390e0b",
         "ingress": [
          {
           "cidr_blocks": [],
           "description": "Cluster API to node groups",
           "from_port": 443,
           "ipv6_cidr_blocks": [],
           "prefix_list_ids": [],
           "protocol": "tcp",
           "security_groups": [
            "sg-0d4c3ed613f24cfac"
           ],
           "self": false,
           "to_port": 443
          },
          {
           "cidr_blocks": [],
           "description": "Cluster API to node kubelets",
           "from_port": 10250,
           "ipv6_cidr_blocks": [],
           "prefix_list_ids": [],
           "protocol": "tcp",
           "security_groups": [
            "sg-0d4c3ed613f24cfac"
           ],
           "self": false,
           "to_port": 10250
          },
          {
           "cidr_blocks": [],
           "description": "Node to node CoreDNS",
           "from_port": 53,
           "ipv6_cidr_blocks": [],
           "prefix_list_ids": [],
           "protocol": "tcp",
           "security_groups": [],
           "self": true,
           "to_port": 53
          },
          {
           "cidr_blocks": [],
           "description": "Node to node CoreDNS",
           "from_port": 53,
           "ipv6_cidr_blocks": [],
           "prefix_list_ids": [],
           "protocol": "udp",
           "security_groups": [],
           "self": true,
           "to_port": 53
          }
         ],
         "name": "aisight_demo-eks-node-20230312144151916900000008",
         "name_prefix": "aisight_demo-eks-node-",
         "owner_id": "435357319394",
         "revoke_rules_on_delete": false,
         "tags": {
          "Name": "aisight_demo-eks-node",
          "kubernetes.io/cluster/aisight_demo-eks": "owned"
         },
         "tags_all": {
          "Name": "aisight_demo-eks-node",
          "kubernetes.io/cluster/aisight_demo-eks": "owned"
         },
         "timeouts": null,
         "vpc_id": "vpc-020baab04492a8145"
        }
       },
       {
        "address": "module.eks.aws_security_group_rule.cluster[\"egress_nodes_443\"]",
        "depends_on": [
         "module.eks.aws_security_group.cluster",
         "module.eks.aws_security_group.node",
         "module.vpc.aws_vpc.this"
        ],
        "index": "egress_nodes_443",
        "mode": "managed",
        "name": "cluster",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 2,
        "sensitive_values": {
         "prefix_list_ids": []
        },
        "type": "aws_security_group_rule",
        "values": {
         "cidr_blocks": null,
         "description": "Cluster API to node groups",
         "from_port": 443,
         "id": "sgrule-3317145124",
         "ipv6_cidr_blocks": null,
         "prefix_list_ids": [],
         "protocol": "tcp",
         "security_group_id": "sg-0d4c3ed613f24cfac",
         "security_group_rule_id": "sgr-0e35721448bf9f6b8",
         "self": false,
         "source_security_group_id": "sg-02107c0d526390e0b",
         "timeouts": null,
         "to_port": 443,
         "type": "egress"
        }
       },
       {
        "address": "module.eks.aws_security_group_rule.cluster[\"egress_nodes_kubelet\"]",
        "depends_on": [
         "module.eks.aws_security_group.cluster",
         "module.eks.aws_security_group.node",
         "module.vpc.aws_vpc.this"
        ],
        "index": "egress_nodes_kubelet",
        "mode": "managed",
        "name": "cluster",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 2,
        "sensitive_values": {
         "prefix_list_ids": []
        },
        "type": "aws_security_group_rule",
        "values": {
         "cidr_blocks": null,
         "description": "Cluster API to node kubelets",
         "from_port": 10250,
         "id": "sgrule-3384562031",
         "ipv6_cidr_blocks": null,
         "prefix_list_ids": [],
         "protocol": "tcp",
         "security_group_id": "sg-0d4c3ed613f24cfac",
         "security_group_rule_id": "sgr-0c8a797f58dae4058",
         "self": false,
         "source_security_group_id": "sg-02107c0d526390e0b",
         "timeouts": null,
         "to_port": 10250,
         "type": "egress"
        }
       },
       {
        "address": "module.eks.aws_security_group_rule.cluster[\"ingress_nodes_443\"]",
        "depends_on": [
         "module.eks.aws_security_group.cluster",
         "module.eks.aws_security_group.node",
         "module.vpc.aws_vpc.this"
        ],
        "index": "ingress_nodes_443",
        "mode": "managed",
        "name": "cluster",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 2,
        "sensitive_values": {
         "prefix_list_ids": []
        },
        "type": "aws_security_group_rule",
        "values": {
         "cidr_blocks": null,
         "description": "Node groups to cluster API",
         "from_port": 443,
         "id": "sgrule-3810334838",
         "ipv6_cidr_blocks": null,
         "prefix_list_ids": [],
         "protocol": "tcp",
         "security_group_id": "sg-0d4c3ed613f24cfac",
         "security_group_rule_id": "sgr-054c19fa1c6c7adbd",
         "self": false,
         "source_security_group_id": "sg-02107c0d526390e0b",
         "timeouts": null,
         "to_port": 443,
         "type": "ingress"
        }
       },
       {
        "address": "module.eks.aws_security_group_rule.node[\"egress_cluster_443\"]",
        "depends_on": [
         "module.eks.aws_security_group.cluster",
         "module.eks.aws_security_group.node",
         "module.vpc.aws_vpc.this"
        ],
        "index": "egress_cluster_443",
        "mode": "managed",
        "name": "node",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 2,
        "sensitive_values": {
         "prefix_list_ids": []
        },
        "type": "aws_security_group_rule",
        "values": {
         "cidr_blocks": null,
         "description": "Node groups to cluster API",
         "from_port": 443,
         "id": "sgrule-963490526",
         "ipv6_cidr_blocks": null,
         "prefix_list_ids": [],
         "protocol": "tcp",
         "security_group_id": "sg-02107c0d526390e0b",
         "security_group_rule_id": "sgr-045c4909d5c4a9712",
         "self": false,
         "source_security_group_id": "sg-0d4c3ed613f24cfac",
         "timeouts": null,
         "to_port": 443,
         "type": "egress"
        }
       },
       {
        "address": "module.eks.aws_security_group_rule.node[\"egress_https\"]",
        "depends_on": [
         "module.eks.aws_security_group.cluster",
         "module.eks.aws_security_group.node",
         "module.vpc.aws_vpc.this"
        ],
        "index": "egress_https",
        "mode": "managed",
        "name": "node",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 2,
        "sensitive_values": {
         "cidr_blocks": [
          false
         ],
         "prefix_list_ids": []
        },
        "type": "aws_security_group_rule",
        "values": {
         "cidr_blocks": [
          "0.0.0.0/0"
         ],
         "description": "Egress all HTTPS to internet",
         "from_port": 443,
         "id": "sgrule-2972996004",
         "ipv6_cidr_blocks": null,
         "prefix_list_ids": [],
         "protocol": "tcp",
         "security_group_id": "sg-02107c0d526390e0b",
         "security_group_rule_id": "sgr-0f942606ea2dee45b",
         "self": false,
         "source_security_group_id": null,
         "timeouts": null,
         "to_port": 443,
         "type": "egress"
        }
       },
       {
        "address": "module.eks.aws_security_group_rule.node[\"egress_ntp_tcp\"]",
        "depends_on": [
         "module.eks.aws_security_group.cluster",
         "module.eks.aws_security_group.node",
         "module.vpc.aws_vpc.this"
        ],
        "index": "egress_ntp_tcp",
        "mode": "managed",
        "name": "node",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 2,
        "sensitive_values": {
         "cidr_blocks": [
          false
         ],
         "prefix_list_ids": []
        },
        "type": "aws_security_group_rule",
        "values": {
         "cidr_blocks": [
          "0.0.0.0/0"
         ],
         "description": "Egress NTP/TCP to internet",
         "from_port": 123,
         "id": "sgrule-1860857018",
         "ipv6_cidr_blocks": null,
         "prefix_list_ids": [],
         "protocol": "tcp",
         "security_group_id": "sg-02107c0d526390e0b",
         "security_group_rule_id": "sgr-01ddccdde32917f22",
         "self": false,
         "source_security_group_id": null,
         "timeouts": null,
         "to_port": 123,
         "type": "egress"
        }
       },
       {
        "address": "module.eks.aws_security_group_rule.node[\"egress_ntp_udp\"]",
        "depends_on": [
         "module.eks.aws_security_group.cluster",
         "module.eks.aws_security_group.node",
         "module.vpc.aws_vpc.this"
        ],
        "index": "egress_ntp_udp",
        "mode": "managed",
        "name": "node",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 2,
        "sensitive_values": {
         "cidr_blocks": [
          false
         ],
         "prefix_list_ids": []
        },
        "type": "aws_security_group_rule",
        "values": {
         "cidr_blocks": [
          "0.0.0.0/0"
         ],
         "description": "Egress NTP/UDP to internet",
         "from_port": 123,
         "id": "sgrule-276056503",
         "ipv6_cidr_blocks": null,
         "prefix_list_ids": [],
         "protocol": "udp",
         "security_group_id": "sg-02107c0d526390e0b",
         "security_group_rule_id": "sgr-0d1a4905e1ce0f9b0",
         "self": false,
         "source_security_group_id": null,
         "timeouts": null,
         "to_port": 123,
         "type": "egress"
        }
       },
       {
        "address": "module.eks.aws_security_group_rule.node[\"egress_self_coredns_tcp\"]",
        "depends_on": [
         "module.eks.aws_security_group.cluster",
         "module.eks.aws_security_group.node",
         "module.vpc.aws_vpc.this"
        ],
        "index": "egress_self_coredns_tcp",
        "mode": "managed",
        "name": "node",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 2,
        "sensitive_values": {
         "prefix_list_ids": []
        },
        "type": "aws_security_group_rule",
        "values": {
         "cidr_blocks": null,
         "description": "Node to node CoreDNS",
         "from_port": 53,
         "id": "sgrule-634332603",
         "ipv6_cidr_blocks": null,
         "prefix_list_ids": [],
         "protocol": "tcp",
         "security_group_id": "sg-02107c0d526390e0b",
         "security_group_rule_id": "sgr-0f20a25071aa1bb8c",
         "self": true,
         "source_security_group_id": null,
         "timeouts": null,
         "to_port": 53,
         "type": "egress"
        }
       },
       {
        "address": "module.eks.aws_security_group_rule.node[\"egress_self_coredns_udp\"]",
        "depends_on": [
         "module.eks.aws_security_group.cluster",
         "module.eks.aws_security_group.node",
         "module.vpc.aws_vpc.this"
        ],
        "index": "egress_self_coredns_udp",
        "mode": "managed",
        "name": "node",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 2,
        "sensitive_values": {
         "prefix_list_ids": []
        },
        "type": "aws_security_group_rule",
        "values": {
         "cidr_blocks": null,
         "description": "Node to node CoreDNS",
         "from_port": 53,
         "id": "sgrule-2879956957",
         "ipv6_cidr_blocks": null,
         "prefix_list_ids": [],
         "protocol": "udp",
         "security_group_id": "sg-02107c0d526390e0b",
         "security_group_rule_id": "sgr-07cbcf8eb15706eea",
         "self": true,
         "source_security_group_id": null,
         "timeouts": null,
         "to_port": 53,
         "type": "egress"
        }
       },
       {
        "address": "module.eks.aws_security_group_rule.node[\"ingress_cluster_443\"]",
        "depends_on": [
         "module.eks.aws_security_group.cluster",
         "module.eks.aws_security_group.node",
         "module.vpc.aws_vpc.this"
        ],
        "index": "ingress_cluster_443",
        "mode": "managed",
        "name": "node",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 2,
        "sensitive_values": {
         "prefix_list_ids": []
        },
        "type": "aws_security_group_rule",
        "values": {
         "cidr_blocks": null,
         "description": "Cluster API to node groups",
         "from_port": 443,
         "id": "sgrule-604730142",
         "ipv6_cidr_blocks": null,
         "prefix_list_ids": [],
         "protocol": "tcp",
         "security_group_id": "sg-02107c0d526390e0b",
         "security_group_rule_id": "sgr-045c4909d5c4a9712",
         "self": false,
         "source_security_group_id": "sg-0d4c3ed613f24cfac",
         "timeouts": null,
         "to_port": 443,
         "type": "ingress"
        }
       },
       {
        "address": "module.eks.aws_security_group_rule.node[\"ingress_cluster_kubelet\"]",
        "depends_on": [
         "module.eks.aws_security_group.cluster",
         "module.eks.aws_security_group.node",
         "module.vpc.aws_vpc.this"
        ],
        "index": "ingress_cluster_kubelet",
        "mode": "managed",
        "name": "node",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 2,
        "sensitive_values": {
         "prefix_list_ids": []
        },
        "type": "aws_security_group_rule",
        "values": {
         "cidr_blocks": null,
         "description": "Cluster API to node kubelets",
         "from_port": 10250,
         "id": "sgrule-391717233",
         "ipv6_cidr_blocks": null,
         "prefix_list_ids": [],
         "protocol": "tcp",
         "security_group_id": "sg-02107c0d526390e0b",
         "security_group_rule_id": "sgr-0caf6fe360383a60c",
         "self": false,
         "source_security_group_id": "sg-0d4c3ed613f24cfac",
         "timeouts": null,
         "to_port": 10250,
         "type": "ingress"
        }
       },
       {
        "address": "module.eks.aws_security_group_rule.node[\"ingress_self_coredns_tcp\"]",
        "depends_on": [
         "module.eks.aws_security_group.cluster",
         "module.eks.aws_security_group.node",
         "module.vpc.aws_vpc.this"
        ],
        "index": "ingress_self_coredns_tcp",
        "mode": "managed",
        "name": "node",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 2,
        "sensitive_values": {
         "prefix_list_ids": []
        },
        "type": "aws_security_group_rule",
        "values": {
         "cidr_blocks": null,
         "description": "Node to node CoreDNS",
         "from_port": 53,
         "id": "sgrule-2202922520",
         "ipv6_cidr_blocks": null,
         "prefix_list_ids": [],
         "protocol": "tcp",
         "security_group_id": "sg-02107c0d526390e0b",
         "security_group_rule_id": "sgr-0a278e2564f089a44",
         "self": true,
         "source_security_group_id": null,
         "timeouts": null,
         "to_port": 53,
         "type": "ingress"
        }
       },
       {
        "address": "module.eks.aws_security_group_rule.node[\"ingress_self_coredns_udp\"]",
        "depends_on": [
         "module.eks.aws_security_group.cluster",
         "module.eks.aws_security_group.node",
         "module.vpc.aws_vpc.this"
        ],
        "index": "ingress_self_coredns_udp",
        "mode": "managed",
        "name": "node",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 2,
        "sensitive_values": {
         "prefix_list_ids": []
        },
        "type": "aws_security_group_rule",
        "values": {
         "cidr_blocks": null,
         "description": "Node to node CoreDNS",
         "from_port": 53,
         "id": "sgrule-655511031",
         "ipv6_cidr_blocks": null,
         "prefix_list_ids": [],
         "protocol": "udp",
         "security_group_id": "sg-02107c0d526390e0b",
         "security_group_rule_id": "sgr-07cbcf8eb15706eea",
         "self": true,
         "source_security_group_id": null,
         "timeouts": null,
         "to_port": 53,
         "type": "ingress"
        }
       }
      ]
     },
     {
      "address": "module.vpc",
      "resources": [
       {
        "address": "module.vpc.aws_internet_gateway.this[0]",
        "depends_on": [
         "module.vpc.aws_vpc.this",
         "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
        ],
        "index": 0,
        "mode": "managed",
        "name": "this",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 0,
        "sensitive_values": {
         "tags": {},
         "tags_all": {}
        },
        "type": "aws_internet_gateway",
        "values": {
         "arn": "arn:aws:ec2:eu-central-1:435357319394:internet-gateway/igw-050d3a4489af24e21",
         "id": "igw-050d3a4489af24e21",
         "owner_id": "435357319394",
         "tags": {
          "Name": "k8s-vpc"
         },
         "tags_all": {
          "Name": "k8s-vpc"
         },
         "timeouts": null,
         "vpc_id": "vpc-020baab04492a8145"
        }
       },
       {
        "address": "module.vpc.aws_route.public_internet_gateway[0]",
        "depends_on": [
         "module.vpc.aws_internet_gateway.this",
         "module.vpc.aws_route_table.public",
         "module.vpc.aws_vpc.this",
         "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
        ],
        "index": 0,
        "mode": "managed",
        "name": "public_internet_gateway",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 0,
        "sensitive_values": {
         "timeouts": {}
        },
        "type": "aws_route",
        "values": {
         "carrier_gateway_id": "",
         "core_network_arn": "",
         "destination_cidr_block": "0.0.0.0/0",
         "destination_ipv6_cidr_block": "",
         "destination_prefix_list_id": "",
         "egress_only_gateway_id": "",
         "gateway_id": "igw-050d3a4489af24e21",
         "id": "r-rtb-045b86070fe04be5d1080289494",
         "instance_id": "",
         "instance_owner_id": "",
         "local_gateway_id": "",
         "nat_gateway_id": "",
         "network_interface_id": "",
         "origin": "CreateRoute",
         "route_table_id": "rtb-045b86070fe04be5d",
         "state": "active",
         "timeouts": {
          "create": "5m",
          "delete": null,
          "update": null
         },
         "transit_gateway_id": "",
         "vpc_endpoint_id": "",
         "vpc_peering_connection_id": ""
        }
       },
       {
        "address": "module.vpc.aws_route_table.private[0]",
        "depends_on": [
         "data.aws_availability_zones.available",
         "module.vpc.aws_vpc.this",
         "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
        ],
        "index": 0,
        "mode": "managed",
        "name": "private",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 0,
        "sensitive_values": {
         "propagating_vgws": [],
         "route": [],
         "tags": {},
         "tags_all": {}
        },
        "type": "aws_route_table",
        "values": {
         "arn": "arn:aws:ec2:eu-central-1:435357319394:route-table/rtb-0303078514c1e5643",
         "id": "rtb-0303078514c1e5643",
         "owner_id": "435357319394",
         "propagating_vgws": [],
         "route": [],
         "tags": {
          "Name": "k8s-vpc-private"
         },
         "tags_all": {
          "Name": "k8s-vpc-private"
         },
         "timeouts": null,
         "vpc_id": "vpc-020baab04492a8145"
        }
       },
       {
        "address": "module.vpc.aws_route_table.public[0]",
        "depends_on": [
         "module.vpc.aws_vpc.this",
         "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
        ],
        "index": 0,
        "mode": "managed",
        "name": "public",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 0,
        "sensitive_values": {
         "propagating_vgws": [],
         "route": [
          {}
         ],
         "tags": {},
         "tags_all": {}
        },
        "type": "aws_route_table",
        "values": {
         "arn": "arn:aws:ec2:eu-central-1:435357319394:route-table/rtb-045b86070fe04be5d",
         "id": "rtb-045b86070fe04be5d",
         "owner_id": "435357319394",
         "propagating_vgws": [],
         "route": [
          {
           "carrier_gateway_id": "",
           "cidr_block": "0.0.0.0/0",
           "core_network_arn": "",
           "destination_prefix_list_id": "",
           "egress_only_gateway_id": "",
           "gateway_id": "igw-050d3a4489af24e21",
           "instance_id": "",
           "ipv6_cidr_block": "",
           "local_gateway_id": "",
           "nat_gateway_id": "",
           "network_interface_id": "",
           "transit_gateway_id": "",
           "vpc_endpoint_id": "",
           "vpc_peering_connection_id": ""
          }
         ],
         "tags": {
          "Name": "k8s-vpc-public"
         },
         "tags_all": {
          "Name": "k8s-vpc-public"
         },
         "timeouts": null,
         "vpc_id": "vpc-020baab04492a8145"
        }
       },
       {
        "address": "module.vpc.aws_route_table_association.private[0]",
        "depends_on": [
         "data.aws_availability_zones.available",
         "module.vpc.aws_route_table.private",
         "module.vpc.aws_subnet.private",
         "module.vpc.aws_vpc.this",
         "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
        ],
        "index": 0,
        "mode": "managed",
        "name": "private",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 0,
        "sensitive_values": {},
        "type": "aws_route_table_association",
        "values": {
         "gateway_id": "",
         "id": "rtbassoc-0e76cc5e0bb4ff6dc",
         "route_table_id": "rtb-0303078514c1e5643",
         "subnet_id": "subnet-04064b4652b88ff67"
        }
       },
       {
        "address": "module.vpc.aws_route_table_association.private[1]",
        "depends_on": [
         "data.aws_availability_zones.available",
         "module.vpc.aws_route_table.private",
         "module.vpc.aws_subnet.private",
         "module.vpc.aws_vpc.this",
         "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
        ],
        "index": 1,
        "mode": "managed",
        "name": "private",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 0,
        "sensitive_values": {},
        "type": "aws_route_table_association",
        "values": {
         "gateway_id": "",
         "id": "rtbassoc-0e969d8cbbce16f86",
         "route_table_id": "rtb-0303078514c1e5643",
         "subnet_id": "subnet-0e8a89850f69f9a37"
        }
       },
       {
        "address": "module.vpc.aws_route_table_association.private[2]",
        "depends_on": [
         "data.aws_availability_zones.available",
         "module.vpc.aws_route_table.private",
         "module.vpc.aws_subnet.private",
         "module.vpc.aws_vpc.this",
         "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
        ],
        "index": 2,
        "mode": "managed",
        "name": "private",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 0,
        "sensitive_values": {},
        "type": "aws_route_table_association",
        "values": {
         "gateway_id": "",
         "id": "rtbassoc-01e984c3f2e7ccae4",
         "route_table_id": "rtb-0303078514c1e5643",
         "subnet_id": "subnet-020599695ef4412bc"
        }
       },
       {
        "address": "module.vpc.aws_route_table_association.public[0]",
        "depends_on": [
         "data.aws_availability_zones.available",
         "module.vpc.aws_route_table.public",
         "module.vpc.aws_subnet.public",
         "module.vpc.aws_vpc.this",
         "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
        ],
        "index": 0,
        "mode": "managed",
        "name": "public",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 0,
        "sensitive_values": {},
        "type": "aws_route_table_association",
        "values": {
         "gateway_id": "",
         "id": "rtbassoc-06e14a1a5b0c8f9e4",
         "route_table_id": "rtb-045b86070fe04be5d",
         "subnet_id": "subnet-0e59f78cf02cebca8"
        }
       },
       {
        "address": "module.vpc.aws_route_table_association.public[1]",
        "depends_on": [
         "data.aws_availability_zones.available",
         "module.vpc.aws_route_table.public",
         "module.vpc.aws_subnet.public",
         "module.vpc.aws_vpc.this",
         "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
        ],
        "index": 1,
        "mode": "managed",
        "name": "public",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 0,
        "sensitive_values": {},
        "type": "aws_route_table_association",
        "values": {
         "gateway_id": "",
         "id": "rtbassoc-0bb160880821776b0",
         "route_table_id": "rtb-045b86070fe04be5d",
         "subnet_id": "subnet-014766609e87b6ede"
        }
       },
       {
        "address": "module.vpc.aws_route_table_association.public[2]",
        "depends_on": [
         "data.aws_availability_zones.available",
         "module.vpc.aws_route_table.public",
         "module.vpc.aws_subnet.public",
         "module.vpc.aws_vpc.this",
         "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
        ],
        "index": 2,
        "mode": "managed",
        "name": "public",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 0,
        "sensitive_values": {},
        "type": "aws_route_table_association",
        "values": {
         "gateway_id": "",
         "id": "rtbassoc-058c7f0ddae9eef77",
         "route_table_id": "rtb-045b86070fe04be5d",
         "subnet_id": "subnet-0d75c3e4a7d943a01"
        }
       },
       {
        "address": "module.vpc.aws_subnet.private[0]",
        "depends_on": [
         "data.aws_availability_zones.available",
         "module.vpc.aws_vpc.this",
         "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
        ],
        "index": 0,
        "mode": "managed",
        "name": "private",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 1,
        "sensitive_values": {
         "tags": {},
         "tags_all": {}
        },
        "type": "aws_subnet",
        "values": {
         "arn": "arn:aws:ec2:eu-central-1:435357319394:subnet/subnet-04064b4652b88ff67",
         "assign_ipv6_address_on_creation": false,
         "availability_zone": "eu-central-1a",
         "availability_zone_id": "euc1-az2",
         "cidr_block": "172.16.1.0/24",
         "customer_owned_ipv4_pool": "",
         "enable_dns64": false,
         "enable_resource_name_dns_a_record_on_launch": false,
         "enable_resource_name_dns_aaaa_record_on_launch": false,
         "id": "subnet-04064b4652b88ff67",
         "ipv6_cidr_block": "",
         "ipv6_cidr_block_association_id": "",
         "ipv6_native": false,
         "map_customer_owned_ip_on_launch": false,
         "map_public_ip_on_launch": false,
         "outpost_arn": "",
         "owner_id": "435357319394",
         "private_dns_hostname_type_on_launch": "ip-name",
         "tags": {
          "Name": "k8s-vpc-private-eu-central-1a",
          "kubernetes.io/cluster/aisight_demo-eks": "shared",
          "kubernetes.io/role/internal-elb": "1"
         },
         "tags_all": {
          "Name": "k8s-vpc-private-eu-central-1a",
          "kubernetes.io/cluster/aisight_demo-eks": "shared",
          "kubernetes.io/role/internal-elb": "1"
         },
         "timeouts": null,
         "vpc_id": "vpc-020baab04492a8145"
        }
       },
       {
        "address": "module.vpc.aws_subnet.private[1]",
        "depends_on": [
         "data.aws_availability_zones.available",
         "module.vpc.aws_vpc.this",
         "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
        ],
        "index": 1,
        "mode": "managed",
        "name": "private",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 1,
        "sensitive_values": {
         "tags": {},
         "tags_all": {}
        },
        "type": "aws_subnet",
        "values": {
         "arn": "arn:aws:ec2:eu-central-1:435357319394:subnet/subnet-0e8a89850f69f9a37",
         "assign_ipv6_address_on_creation": false,
         "availability_zone": "eu-central-1b",
         "availability_zone_id": "euc1-az3",
         "cidr_block": "172.16.2.0/24",
         "customer_owned_ipv4_pool": "",
         "enable_dns64": false,
         "enable_resource_name_dns_a_record_on_launch": false,
         "enable_resource_name_dns_aaaa_record_on_launch": false,
         "id": "subnet-0e8a89850f69f9a37",
         "ipv6_cidr_block": "",
         "ipv6_cidr_block_association_id": "",
         "ipv6_native": false,
         "map_customer_owned_ip_on_launch": false,
         "map_public_ip_on_launch": false,
         "outpost_arn": "",
         "owner_id": "435357319394",
         "private_dns_hostname_type_on_launch": "ip-name",
         "tags": {
          "Name": "k8s-vpc-private-eu-central-1b",
          "kubernetes.io/cluster/aisight_demo-eks": "shared",
          "kubernetes.io/role/internal-elb": "1"
         },
         "tags_all": {
          "Name": "k8s-vpc-private-eu-central-1b",
          "kubernetes.io/cluster/aisight_demo-eks": "shared",
          "kubernetes.io/role/internal-elb": "1"
         },
         "timeouts": null,
         "vpc_id": "vpc-020baab04492a8145"
        }
       },
       {
        "address": "module.vpc.aws_subnet.private[2]",
        "depends_on": [
         "data.aws_availability_zones.available",
         "module.vpc.aws_vpc.this",
         "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
        ],
        "index": 2,
        "mode": "managed",
        "name": "private",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 1,
        "sensitive_values": {
         "tags": {},
         "tags_all": {}
        },
        "type": "aws_subnet",
        "values": {
         "arn": "arn:aws:ec2:eu-central-1:435357319394:subnet/subnet-020599695ef4412bc",
         "assign_ipv6_address_on_creation": false,
         "availability_zone": "eu-central-1c",
         "availability_zone_id": "euc1-az1",
         "cidr_block": "172.16.3.0/24",
         "customer_owned_ipv4_pool": "",
         "enable_dns64": false,
         "enable_resource_name_dns_a_record_on_launch": false,
         "enable_resource_name_dns_aaaa_record_on_launch": false,
         "id": "subnet-020599695ef4412bc",
         "ipv6_cidr_block": "",
         "ipv6_cidr_block_association_id": "",
         "ipv6_native": false,
         "map_customer_owned_ip_on_launch": false,
         "map_public_ip_on_launch": false,
         "outpost_arn": "",
         "owner_id": "435357319394",
         "private_dns_hostname_type_on_launch": "ip-name",
         "tags": {
          "Name": "k8s-vpc-private-eu-central-1c",
          "kubernetes.io/cluster/aisight_demo-eks": "shared",
          "kubernetes.io/role/internal-elb": "1"
         },
         "tags_all": {
          "Name": "k8s-vpc-private-eu-central-1c",
          "kubernetes.io/cluster/aisight_demo-eks": "shared",
          "kubernetes.io/role/internal-elb": "1"
         },
         "timeouts": null,
         "vpc_id": "vpc-020baab04492a8145"
        }
       },
       {
        "address": "module.vpc.aws_subnet.public[0]",
        "depends_on": [
         "data.aws_availability_zones.available",
         "module.vpc.aws_vpc.this",
         "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
        ],
        "index": 0,
        "mode": "managed",
        "name": "public",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 1,
        "sensitive_values": {
         "tags": {},
         "tags_all": {}
        },
        "type": "aws_subnet",
        "values": {
         "arn": "arn:aws:ec2:eu-central-1:435357319394:subnet/subnet-0e59f78cf02cebca8",
         "assign_ipv6_address_on_creation": false,
         "availability_zone": "eu-central-1a",
         "availability_zone_id": "euc1-az2",
         "cidr_block": "172.16.4.0/24",
         "customer_owned_ipv4_pool": "",
         "enable_dns64": false,
         "enable_resource_name_dns_a_record_on_launch": false,
         "enable_resource_name_dns_aaaa_record_on_launch": false,
         "id": "subnet-0e59f78cf02cebca8",
         "ipv6_cidr_block": "",
         "ipv6_cidr_block_association_id": "",
         "ipv6_native": false,
         "map_customer_owned_ip_on_launch": false,
         "map_public_ip_on_launch": true,
         "outpost_arn": "",
         "owner_id": "435357319394",
         "private_dns_hostname_type_on_launch": "ip-name",
         "tags": {
          "Name": "k8s-vpc-public-eu-central-1a",
          "kubernetes.io/cluster/aisight_demo-eks": "shared",
          "kubernetes.io/role/elb": "1"
         },
         "tags_all": {
          "Name": "k8s-vpc-public-eu-central-1a",
          "kubernetes.io/cluster/aisight_demo-eks": "shared",
          "kubernetes.io/role/elb": "1"
         },
         "timeouts": null,
         "vpc_id": "vpc-020baab04492a8145"
        }
       },
       {
        "address": "module.vpc.aws_subnet.public[1]",
        "depends_on": [
         "data.aws_availability_zones.available",
         "module.vpc.aws_vpc.this",
         "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
        ],
        "index": 1,
        "mode": "managed",
        "name": "public",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 1,
        "sensitive_values": {
         "tags": {},
         "tags_all": {}
        },
        "type": "aws_subnet",
        "values": {
         "arn": "arn:aws:ec2:eu-central-1:435357319394:subnet/subnet-014766609e87b6ede",
         "assign_ipv6_address_on_creation": false,
         "availability_zone": "eu-central-1b",
         "availability_zone_id": "euc1-az3",
         "cidr_block": "172.16.5.0/24",
         "customer_owned_ipv4_pool": "",
         "enable_dns64": false,
         "enable_resource_name_dns_a_record_on_launch": false,
         "enable_resource_name_dns_aaaa_record_on_launch": false,
         "id": "subnet-014766609e87b6ede",
         "ipv6_cidr_block": "",
         "ipv6_cidr_block_association_id": "",
         "ipv6_native": false,
         "map_customer_owned_ip_on_launch": false,
         "map_public_ip_on_launch": true,
         "outpost_arn": "",
         "owner_id": "435357319394",
         "private_dns_hostname_type_on_launch": "ip-name",
         "tags": {
          "Name": "k8s-vpc-public-eu-central-1b",
          "kubernetes.io/cluster/aisight_demo-eks": "shared",
          "kubernetes.io/role/elb": "1"
         },
         "tags_all": {
          "Name": "k8s-vpc-public-eu-central-1b",
          "kubernetes.io/cluster/aisight_demo-eks": "shared",
          "kubernetes.io/role/elb": "1"
         },
         "timeouts": null,
         "vpc_id": "vpc-020baab04492a8145"
        }
       },
       {
        "address": "module.vpc.aws_subnet.public[2]",
        "depends_on": [
         "data.aws_availability_zones.available",
         "module.vpc.aws_vpc.this",
         "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
        ],
        "index": 2,
        "mode": "managed",
        "name": "public",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 1,
        "sensitive_values": {
         "tags": {},
         "tags_all": {}
        },
        "type": "aws_subnet",
        "values": {
         "arn": "arn:aws:ec2:eu-central-1:435357319394:subnet/subnet-0d75c3e4a7d943a01",
         "assign_ipv6_address_on_creation": false,
         "availability_zone": "eu-central-1c",
         "availability_zone_id": "euc1-az1",
         "cidr_block": "172.16.6.0/24",
         "customer_owned_ipv4_pool": "",
         "enable_dns64": false,
         "enable_resource_name_dns_a_record_on_launch": false,
         "enable_resource_name_dns_aaaa_record_on_launch": false,
         "id": "subnet-0d75c3e4a7d943a01",
         "ipv6_cidr_block": "",
         "ipv6_cidr_block_association_id": "",
         "ipv6_native": false,
         "map_customer_owned_ip_on_launch": false,
         "map_public_ip_on_launch": true,
         "outpost_arn": "",
         "owner_id": "435357319394",
         "private_dns_hostname_type_on_launch": "ip-name",
         "tags": {
          "Name": "k8s-vpc-public-eu-central-1c",
          "kubernetes.io/cluster/aisight_demo-eks": "shared",
          "kubernetes.io/role/elb": "1"
         },
         "tags_all": {
          "Name": "k8s-vpc-public-eu-central-1c",
          "kubernetes.io/cluster/aisight_demo-eks": "shared",
          "kubernetes.io/role/elb": "1"
         },
         "timeouts": null,
         "vpc_id": "vpc-020baab04492a8145"
        }
       },
       {
        "address": "module.vpc.aws_vpc.this[0]",
        "index": 0,
        "mode": "managed",
        "name": "this",
        "provider_name": "registry.terraform.io/hashicorp/aws",
        "schema_version": 1,
        "sensitive_values": {
         "tags": {},
         "tags_all": {}
        },
        "type": "aws_vpc",
        "values": {
         "arn": "arn:aws:ec2:eu-central-1:435357319394:vpc/vpc-020baab04492a8145",
         "assign_generated_ipv6_cidr_block": false,
         "cidr_block": "172.16.0.0/16",
         "default_network_acl_id": "acl-0280b1ada3a9dca5e",
         "default_route_table_id": "rtb-00a9f68d2a4a8eb02",
         "default_security_group_id": "sg-098e5c404719db484",
         "dhcp_options_id": "dopt-a0dd24ca",
         "enable_classiclink": false,
         "enable_classiclink_dns_support": false,
         "enable_dns_hostnames": true,
         "enable_dns_support": true,
         "enable_network_address_usage_metrics": false,
         "id": "vpc-020baab04492a8145",
         "instance_tenancy": "default",
         "ipv4_ipam_pool_id": null,
         "ipv4_netmask_length": null,
         "ipv6_association_id": "",
         "ipv6_cidr_block": "",
         "ipv6_cidr_block_network_border_group": "",
         "ipv6_ipam_pool_id": "",
         "ipv6_netmask_length": 0,
         "main_route_table_id": "rtb-00a9f68d2a4a8eb02",
         "owner_id": "435357319394",
         "tags": {
          "Name": "k8s-vpc"
         },
         "tags_all": {
          "Name": "k8s-vpc"
         }
        }
       }
      ]
     }
    ],
    "resources": [
     {
      "address": "data.aws_availability_zones.available",
      "mode": "data",
      "name": "available",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "schema_version": 0,
      "sensitive_values": {
       "group_names": [
        false
       ],
       "names": [
        false,
        false,
        false
       ],
       "zone_ids": [
        false,
        false,
        false
       ]
      },
      "type": "aws_availability_zones",
      "values": {
       "all_availability_zones": null,
       "exclude_names": null,
       "exclude_zone_ids": null,
       "filter": null,
       "group_names": [
        "eu-central-1"
       ],
       "id": "eu-central-1",
       "names": [
        "eu-central-1a",
        "eu-central-1b",
        "eu-central-1c"
       ],
       "state": null,
       "timeouts": null,
       "zone_ids": [
        "euc1-az2",
        "euc1-az3",
        "euc1-az1"
       ]
      }
     },
     {
      "address": "data.aws_eks_cluster.cluster",
      "mode": "data",
      "name": "cluster",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "schema_version": 0,
      "sensitive_values": {
       "certificate_authority": [
        {}
       ],
       "enabled_cluster_log_types": [
        false,
        false,
        false
       ],
       "identity": [
        {
         "oidc": [
          {}
         ]
        }
       ],
       "kubernetes_network_config": [
        {}
       ],
       "outpost_config": [],
       "tags": {},
       "vpc_config": [
        {
         "public_access_cidrs": [
          false
         ],
         "security_group_ids": [
          false
         ],
         "subnet_ids": [
          false,
          false,
          false
         ]
        }
       ]
      },
      "type": "aws_eks_cluster",
      "values": {
       "arn": "arn:aws:eks:eu-central-1:435357319394:cluster/aisight_demo-eks",
       "certificate_authority": [
        {
         "data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMvakNDQWVhZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJek1ETXhNakUwTkRnek1Wb1hEVE16TURNd09URTBORGd6TVZvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTHpnCnNjb1AxSmZUUWVVZCtReWx3UFYyaUNJL1g1SEo3Mk13bG95S3pWRVBITmVnZm5KMHdFWEw5Q3VrbkQ3dEkwZFQKckg2T0cvSDhCaEdKMjFzR2lwVmFjL1JubHdxLy8ycUVOOWw5TWsvU0l3WnN1RzYxRTM0RVcwYStoYXV0aDVEUgpuK2YvcEJhL3NrcjR0TGdsaUI5elBwZ2tPVlZ0RlRjOWpxTHFlNEJkVDM0a0ZwKzhuaEFJckJVNGxrckt0bVo1Ck81VllCV2dudkNYOE1yb3M2dUgxd3FRcktoRjNXTjhrNG9pd1IwQUVTaWZUV0FuaTMxbnNsMk0rN3pwbEdzTXAKb2h3bUhMYUtZaVM2M0Zwa2x2c09ud0dydlBGL056enZ0SitFNFhrblFYa0dDaWsrMVFSaHM3QjNBN0d3b0dXOQpMSXRFTjNGbmhVMnVHcnU2eTgwQ0F3RUFBYU5aTUZjd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZOYWJTYUVGU2NUNEdTVGpuWjhyUzBkbVVvc1VNQlVHQTFVZEVRUU8KTUF5Q0NtdDFZbVZ5Ym1WMFpYTXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBRGVvR2xVSVFsUmc2MGNWeElERApxbmlwWncrU3dGZjJYcTd1MGlzQXpjRHpBZXBJbXBZaU1QT2E4L1hteXkxWEJFankvdFNhTkkySDlpNjhaVGtBCjVMb0ZUVzVOQ1VZazVsYTFxOEs1ZHZWQmErbnhRWE5hS1FtT1hVWGZQTWt5b1RqK3E0Rk5sVzc2K0JvdDVZelQKRHIwbUs3MDltVStNOXkwS1VidkNKZ0J3bkxyMkJMRVdkejhibXo1Z3dUQVJQYmdUZElJbDVYT2UwbmQ4di91VApIRytyeVByZnpUM3lwUUlXKzY0b0JwVFdVZmdUR2YxbGJJTzV1cnZueFdwUjRPNmlleUkxeVA0SzRMK3ZSbVdnCkVqckxVYXRxRHoxUm1QR3MzSHZDQlFnTnI5aU9veWtPRDBDNWxTMnBabWNKNjFNOC9DTDhYbGpkYUpXQlpZNVYKUkNRPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
        }
       ],
       "cluster_id": null,
       "created_at": "2023-03-12 14:41:59.384 +0000 UTC",
       "enabled_cluster_log_types": [
        "api",
        "audit",
        "authenticator"
       ],
       "endpoint": "https://94AB6DF0F67D05BA57F5EB099F8AEB5E.gr7.eu-central-1.eks.amazonaws.com",
       "id": "aisight_demo-eks",
       "identity": [
        {
         "oidc": [
          {
           "issuer": "https://oidc.eks.eu-central-1.amazonaws.com/id/94AB6DF0F67D05BA57F5EB099F8AEB5E"
          }
         ]
        }
       ],
       "kubernetes_network_config": [
        {
         "ip_family": "ipv4",
         "service_ipv4_cidr": "10.100.0.0/16",
         "service_ipv6_cidr": ""
        }
       ],
       "name": "aisight_demo-eks",
       "outpost_config": [],
       "platform_version": "eks.1",
       "role_arn": "arn:aws:iam::435357319394:role/aisight_demo-eks-cluster-20230312144140332000000002",
       "status": "ACTIVE",
       "tags": {},
       "version": "1.25",
       "vpc_config": [
        {
         "cluster_security_group_id": "sg-01641985f7f813c3f",
         "endpoint_private_access": false,
         "endpoint_public_access": true,
         "public_access_cidrs": [
          "0.0.0.0/0"
         ],
         "security_group_ids": [
          "sg-0d4c3ed613f24cfac"
         ],
         "subnet_ids": [
          "subnet-020599695ef4412bc",
          "subnet-04064b4652b88ff67",
          "subnet-0e8a89850f69f9a37"
         ],
         "vpc_id": "vpc-020baab04492a8145"
        }
       ]
      }
     },
     {
      "address": "data.aws_eks_cluster_auth.cluster",
      "mode": "data",
      "name": "cluster",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "schema_version": 0,
      "sensitive_values": {},
      "type": "aws_eks_cluster_auth",
      "values": {
       "id": "aisight_demo-eks",
       "name": "aisight_demo-eks",
       "token": "k8s-aws-v1.aHR0cHM6Ly9zdHMuYW1hem9uYXdzLmNvbS8_QWN0aW9uPUdldENhbGxlcklkZW50aXR5JlZlcnNpb249MjAxMS0wNi0xNSZYLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFXS1hLUlFEUkIzMk02TVUyJTJGMjAyMzAzMTIlMkZ1cy1lYXN0LTElMkZzdHMlMkZhd3M0X3JlcXVlc3QmWC1BbXotRGF0ZT0yMDIzMDMxMlQxNTE4NTdaJlgtQW16LUV4cGlyZXM9MCZYLUFtei1TaWduZWRIZWFkZXJzPWhvc3QlM0J4LWs4cy1hd3MtaWQmWC1BbXotU2lnbmF0dXJlPWJhODQwM2E4ZDc2ODAyODY0MWQzYzAwYTVjYTI5YjEzNzljZjE1ZThlNjJjZjA0ZGJiMDY5YWFiNGVmODIyNWI"
      }
     },
     {
      "address": "aws_ecr_repository.ecr[\"microservice_aisight\"]",
      "index": "microservice_aisight",
      "mode": "managed",
      "name": "ecr",
      "provider_name": "registry.terraform.io/hashicorp/aws",
      "schema_version": 0,
      "sensitive_values": {
       "encryption_configuration": [
        {}
       ],
       "image_scanning_configuration": [
        {}
       ],
       "tags": {},
       "tags_all": {}
      },
      "type": "aws_ecr_repository",
      "values": {
       "arn": "arn:aws:ecr:eu-central-1:435357319394:repository/microservice_aisight",
       "encryption_configuration": [
        {
         "encryption_type": "KMS",
         "kms_key": "arn:aws:kms:eu-central-1:435357319394:key/1a603205-6ff5-48ca-b882-7e98cd9128ac"
        }
       ],
       "force_delete": null,
       "id": "microservice_aisight",
       "image_scanning_configuration": [
        {
         "scan_on_push": true
        }
       ],
       "image_tag_mutability": "IMMUTABLE",
       "name": "microservice_aisight",
       "registry_id": "435357319394",
       "repository_url": "435357319394.dkr.ecr.eu-central-1.amazonaws.com/microservice_aisight",
       "tags": {
        "Environment": "Dev"
       },
       "tags_all": {
        "Environment": "Dev"
       },
       "timeouts": null
      }
     }
    ]
   }
  }
 },
 "relevant_attributes": [
  {
   "attribute": [
    "id"
   ],
   "resource": "module.vpc.aws_redshift_subnet_group.redshift[0]"
  },
  {
   "attribute": [
    "arn"
   ],
   "resource": "module.vpc.aws_network_acl.database[0]"
  },
  {
   "attribute": [
    "id"
   ],
   "resource": "module.vpc.aws_network_acl.elasticache[0]"
  },
  {
   "attribute": [
    "token"
   ],
   "resource": "module.eks-kubeconfig.data.aws_eks_cluster_auth.ephemeral"
  },
  {
   "attribute": [
    "arn"
   ],
   "resource": "module.eks.module.fargate_profile.aws_eks_fargate_profile.this[0]"
  },
  {
   "attribute": [
    "status"
   ],
   "resource": "module.eks.module.fargate_profile.aws_eks_fargate_profile.this[0]"
  },
  {
   "attribute": [
    "id"
   ],
   "resource": "module.vpc.aws_elasticache_subnet_group.elasticache[0]"
  },
  {
   "attribute": [
    "arn"
   ],
   "resource": "module.eks.module.eks_managed_node_group[\"first\"].aws_security_group.this[0]"
  },
  {
   "attribute": [
    "unique_id"
   ],
   "resource": "module.eks.aws_iam_role.this[0]"
  },
  {
   "attribute": [],
   "resource": "module.vpc.aws_route_table_association.database"
  },
  {
   "attribute": [
    "id"
   ],
   "resource": "module.eks.module.eks_managed_node_group[\"first\"].aws_launch_template.this[0]"
  },
  {
   "attribute": [
    "name"
   ],
   "resource": "module.eks.module.self_managed_node_group.aws_autoscaling_group.this[0]"
  },
  {
   "attribute": [
    "id"
   ],
   "resource": "module.eks.module.self_managed_node_group.aws_launch_template.this[0]"
  },
  {
   "attribute": [],
   "resource": "module.vpc.aws_subnet.private"
  },
  {
   "attribute": [
    "status"
   ],
   "resource": "module.eks.aws_eks_cluster.this[0]"
  },
  {
   "attribute": [
    "id"
   ],
   "resource": "module.eks.module.kms.aws_kms_key.this[0]"
  },
  {
   "attribute": [],
   "resource": "module.vpc.aws_egress_only_internet_gateway.this"
  },
  {
   "attribute": [
    "id"
   ],
   "resource": "module.eks.module.self_managed_node_group.aws_security_group.this[0]"
  },
  {
   "attribute": [
    "id"
   ],
   "resource": "module.eks.module.self_managed_node_group.aws_autoscaling_group.this[0]"
  },
  {
   "attribute": [
    "arn"
   ],
   "resource": "module.eks.module.eks_managed_node_group.aws_launch_template.this[0]"
  },
  {
   "attribute": [
    "unique_id"
   ],
   "resource": "module.eks.module.self_managed_node_group.aws_iam_role.this[0]"
  },
  {
   "attribute": [],
   "resource": "module.vpc.aws_subnet.public"
  },
  {
   "attribute": [
    "id"
   ],
   "resource": "module.vpc.aws_vpc.this[0]"
  },
  {
   "attribute": [
    "default_network_acl_id"
   ],
   "resource": "module.vpc.aws_vpc.this[0]"
  },
  {
   "attribute": [],
   "resource": "module.vpc.aws_route.database_nat_gateway"
  },
  {
   "attribute": [
    "arn"
   ],
   "resource": "module.eks.aws_eks_cluster.this[0]"
  },
  {
   "attribute": [
    "latest_version"
   ],
   "resource": "module.eks.module.eks_managed_node_group[\"first\"].aws_launch_template.this[0]"
  },
  {
   "attribute": [
    "certificate_authority",
    0,
    "data"
   ],
   "resource": "module.eks-kubeconfig.data.aws_eks_cluster.this"
  },
  {
   "attribute": [
    "instance_tenancy"
   ],
   "resource": "module.vpc.aws_default_vpc.this[0]"
  },
  {
   "attribute": [
    "main_route_table_id"
   ],
   "resource": "module.vpc.aws_vpc.this[0]"
  },
  {
   "attribute": [
    "id"
   ],
   "resource": "module.eks.module.eks_managed_node_group.aws_eks_node_group.this[0]"
  },
  {
   "attribute": [
    "arn"
   ],
   "resource": "module.eks.module.eks_managed_node_group.aws_security_group.this[0]"
  },
  {
   "attribute": [
    "default_version"
   ],
   "resource": "module.eks.module.eks_managed_node_group.aws_launch_template.this[0]"
  },
  {
   "attribute": [
    "arn"
   ],
   "resource": "module.eks.module.self_managed_node_group.aws_launch_template.this[0]"
  },
  {
   "attribute": [
    "enable_dns_hostnames"
   ],
   "resource": "module.vpc.aws_vpc.this[0]"
  },
  {
   "attribute": [
    "name"
   ],
   "resource": "module.vpc.aws_elasticache_subnet_group.elasticache[0]"
  },
  {
   "attribute": [
    "id"
   ],
   "resource": "module.vpc.aws_route.database_ipv6_egress[0]"
  },
  {
   "attribute": [],
   "resource": "module.vpc.aws_route_table.elasticache"
  },
  {
   "attribute": [
    "id"
   ],
   "resource": "module.vpc.aws_route.database_internet_gateway[0]"
  },
  {
   "attribute": [
    "name"
   ],
   "resource": "module.eks.module.eks_managed_node_group[\"first\"].aws_launch_template.this[0]"
  },
  {
   "attribute": [
    "health_check_type"
   ],
   "resource": "module.eks.module.self_managed_node_group.aws_autoscaling_group.this[0]"
  },
  {
   "attribute": [
    "labels"
   ],
   "resource": "module.eks.module.eks_managed_node_group.aws_eks_node_group.this[0]"
  },
  {
   "attribute": [
    "arn"
   ],
   "resource": "module.eks.module.fargate_profile.aws_iam_role.this[0]"
  },
  {
   "attribute": [
    "name"
   ],
   "resource": "module.eks.module.self_managed_node_group.aws_iam_role.this[0]"
  },
  {
   "attribute": [
    "arn"
   ],
   "resource": "module.eks.module.eks_managed_node_group[\"first\"].aws_iam_role.this[0]"
  },
  {
   "attribute": [
    "enable_dns_support"
   ],
   "resource": "module.vpc.aws_vpc.this[0]"
  },
  {
   "attribute": [],
   "resource": "module.vpc.aws_route_table.intra"
  },
  {
   "attribute": [
    "name"
   ],
   "resource": "module.vpc.aws_db_subnet_group.database[0]"
  },
  {
   "attribute": [],
   "resource": "module.vpc.aws_route_table_association.elasticache"
  },
  {
   "attribute": [],
   "resource": "module.eks.module.kms.aws_kms_grant.this"
  },
  {
   "attribute": [
    "id"
   ],
   "resource": "module.eks.aws_eks_cluster.this[0]"
  },
  {
   "attribute": [
    "taint"
   ],
   "resource": "module.eks.module.eks_managed_node_group.aws_eks_node_group.this[0]"
  },
  {
   "attribute": [
    "enable_dns_support"
   ],
   "resource": "module.vpc.aws_default_vpc.this[0]"
  },
  {
   "attribute": [
    "cidr_block"
   ],
   "resource": "module.vpc.aws_vpc.this[0]"
  },
  {
   "attribute": [
    "endpoint"
   ],
   "resource": "module.eks.aws_eks_cluster.this[0]"
  },
  {
   "attribute": [
    "owner_id"
   ],
   "resource": "module.vpc.aws_vpc.this[0]"
  },
  {
   "attribute": [],
   "resource": "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
  },
  {
   "attribute": [
    "arn"
   ],
   "resource": "module.eks.module.eks_managed_node_group[\"first\"].aws_launch_template.this[0]"
  },
  {
   "attribute": [
    "name"
   ],
   "resource": "module.eks.module.eks_managed_node_group.aws_iam_role.this[0]"
  },
  {
   "attribute": [],
   "resource": "module.vpc.aws_customer_gateway.this"
  },
  {
   "attribute": [
    "ipv6_association_id"
   ],
   "resource": "module.vpc.aws_vpc.this[0]"
  },
  {
   "attribute": [],
   "resource": "module.vpc.aws_subnet.outpost"
  },
  {
   "attribute": [
    "id"
   ],
   "resource": "module.vpc.aws_flow_log.this[0]"
  },
  {
   "attribute": [
    "arn"
   ],
   "resource": "module.eks.aws_iam_role.this[0]"
  },
  {
   "attribute": [],
   "resource": "module.vpc.aws_nat_gateway.this"
  },
  {
   "attribute": [
    "default_network_acl_id"
   ],
   "resource": "module.vpc.aws_default_vpc.this[0]"
  },
  {
   "attribute": [],
   "resource": "module.vpc.aws_route.private_nat_gateway"
  },
  {
   "attribute": [],
   "resource": "module.eks.aws_eks_addon.this"
  },
  {
   "attribute": [
    "key_id"
   ],
   "resource": "module.eks.module.kms.aws_kms_key.this[0]"
  },
  {
   "attribute": [
    "id"
   ],
   "resource": "module.eks.module.fargate_profile.aws_eks_fargate_profile.this[0]"
  },
  {
   "attribute": [
    "vpc_config",
    0,
    "cluster_security_group_id"
   ],
   "resource": "module.eks.aws_eks_cluster.this[0]"
  },
  {
   "attribute": [
    "id"
   ],
   "resource": "module.eks.module.eks_managed_node_group[\"first\"].aws_eks_node_group.this[0]"
  },
  {
   "attribute": [
    "id"
   ],
   "resource": "module.eks-kubeconfig.data.aws_eks_cluster.this"
  },
  {
   "attribute": [
    "id"
   ],
   "resource": "module.eks.module.eks_managed_node_group.aws_security_group.this[0]"
  },
  {
   "attribute": [
    "default_route_table_id"
   ],
   "resource": "module.vpc.aws_default_vpc.this[0]"
  },
  {
   "attribute": [],
   "resource": "module.vpc.aws_route_table.database"
  },
  {
   "attribute": [
    "taint"
   ],
   "resource": "module.eks.module.eks_managed_node_group[\"first\"].aws_eks_node_group.this[0]"
  },
  {
   "attribute": [
    "names"
   ],
   "resource": "data.aws_availability_zones.available"
  },
  {
   "attribute": [
    "name"
   ],
   "resource": "module.eks.aws_eks_cluster.this[0]"
  },
  {
   "attribute": [
    "default_version"
   ],
   "resource": "module.eks.module.eks_managed_node_group[\"first\"].aws_launch_template.this[0]"
  },
  {
   "attribute": [
    "rendered"
   ],
   "resource": "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group[0]"
  },
  {
   "attribute": [
    "name"
   ],
   "resource": "module.eks.module.eks_managed_node_group[\"first\"].aws_iam_role.this[0]"
  },
  {
   "attribute": [
    "rendered"
   ],
   "resource": "module.eks.module.eks_managed_node_group[\"first\"].module.user_data.data.cloudinit_config.linux_eks_managed_node_group[0]"
  },
  {
   "attribute": [
    "arn"
   ],
   "resource": "module.eks.module.eks_managed_node_group.aws_iam_role.this[0]"
  },
  {
   "attribute": [
    "id"
   ],
   "resource": "module.vpc.aws_db_subnet_group.database[0]"
  },
  {
   "attribute": [
    "default_cooldown"
   ],
   "resource": "module.eks.module.self_managed_node_group.aws_autoscaling_group.this[0]"
  },
  {
   "attribute": [
    "pod_execution_role_arn"
   ],
   "resource": "module.eks.module.fargate_profile.aws_eks_fargate_profile.this[0]"
  },
  {
   "attribute": [
    "ipv6_cidr_block"
   ],
   "resource": "module.vpc.aws_vpc.this[0]"
  },
  {
   "attribute": [
    "id"
   ],
   "resource": "module.vpc.aws_network_acl.redshift[0]"
  },
  {
   "attribute": [
    "arn"
   ],
   "resource": "module.eks.aws_iam_openid_connect_provider.oidc_provider[0]"
  },
  {
   "attribute": [
    "name"
   ],
   "resource": "module.eks.module.fargate_profile.aws_iam_role.this[0]"
  },
  {
   "attribute": [],
   "resource": "module.vpc.aws_route_table.private"
  },
  {
   "attribute": [
    "default_security_group_id"
   ],
   "resource": "module.vpc.aws_vpc.this[0]"
  },
  {
   "attribute": [
    "endpoint"
   ],
   "resource": "module.eks-kubeconfig.data.aws_eks_cluster.this"
  },
  {
   "attribute": [
    "availability_zones"
   ],
   "resource": "module.eks.module.self_managed_node_group.aws_autoscaling_group.this[0]"
  },
  {
   "attribute": [
    "resources"
   ],
   "resource": "module.eks.module.eks_managed_node_group.aws_eks_node_group.this[0]"
  },
  {
   "attribute": [],
   "resource": "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this"
  },
  {
   "attribute": [
    "arn"
   ],
   "resource": "module.vpc.aws_vpc.this[0]"
  },
  {
   "attribute": [
    "arn"
   ],
   "resource": "module.vpc.aws_vpn_gateway.this[0]"
  },
  {
   "attribute": [],
   "resource": "module.vpc.aws_subnet.database"
  },
  {
   "attribute": [],
   "resource": "module.vpc.aws_route_table.public"
  },
  {
   "attribute": [
    "id"
   ],
   "resource": "module.vpc.aws_internet_gateway.this[0]"
  },
  {
   "attribute": [],
   "resource": "module.vpc.aws_route_table_association.public"
  },
  {
   "attribute": [
    "id"
   ],
   "resource": "module.vpc.aws_route_table.public[0]"
  },
  {
   "attribute": [
    "id"
   ],
   "resource": "module.vpc.aws_egress_only_internet_gateway.this[0]"
  },
  {
   "attribute": [],
   "resource": "module.vpc.aws_route_table_association.intra"
  },
  {
   "attribute": [
    "name"
   ],
   "resource": "module.eks.aws_iam_role.this[0]"
  },
  {
   "attribute": [
    "vpc_zone_identifier"
   ],
   "resource": "module.eks.module.self_managed_node_group.aws_autoscaling_group.this[0]"
  },
  {
   "attribute": [
    "arn"
   ],
   "resource": "module.eks.module.self_managed_node_group.aws_autoscaling_group.this[0]"
  },
  {
   "attribute": [
    "unique_id"
   ],
   "resource": "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this[0]"
  },
  {
   "attribute": [
    "desired_capacity"
   ],
   "resource": "module.eks.module.self_managed_node_group.aws_autoscaling_group.this[0]"
  },
  {
   "attribute": [
    "vpc_id"
   ],
   "resource": "module.vpc.aws_vpc_ipv4_cidr_block_association.this[0]"
  },
  {
   "attribute": [
    "arn"
   ],
   "resource": "module.eks.module.self_managed_node_group.aws_iam_role.this[0]"
  },
  {
   "attribute": [
    "id"
   ],
   "resource": "module.vpc.aws_default_vpc.this[0]"
  },
  {
   "attribute": [
    "id"
   ],
   "resource": "module.eks.aws_security_group.node[0]"
  },
  {
   "attribute": [
    "certificate_authority",
    0,
    "data"
   ],
   "resource": "module.eks.aws_eks_cluster.this[0]"
  },
  {
   "attribute": [],
   "resource": "module.vpc.aws_route.private_ipv6_egress"
  },
  {
   "attribute": [
    "arn"
   ],
   "resource": "module.vpc.aws_internet_gateway.this[0]"
  },
  {
   "attribute": [
    "arn"
   ],
   "resource": "module.vpc.aws_network_acl.private[0]"
  },
  {
   "attribute": [
    "cidr_block"
   ],
   "resource": "module.vpc.aws_default_vpc.this[0]"
  },
  {
   "attribute": [
    "name"
   ],
   "resource": "module.eks.aws_cloudwatch_log_group.this[0]"
  },
  {
   "attribute": [
    "id"
   ],
   "resource": "module.vpc.aws_vpn_gateway.this[0]"
  },
  {
   "attribute": [
    "platform_version"
   ],
   "resource": "module.eks.aws_eks_cluster.this[0]"
  },
  {
   "attribute": [
    "image_id"
   ],
   "resource": "module.eks.module.self_managed_node_group.aws_launch_template.this[0]"
  },
  {
   "attribute": [
    "unique_id"
   ],
   "resource": "module.eks.module.eks_managed_node_group.aws_iam_role.this[0]"
  },
  {
   "attribute": [
    "name"
   ],
   "resource": "module.eks.module.eks_managed_node_group.aws_launch_template.this[0]"
  },
  {
   "attribute": [
    "id"
   ],
   "resource": "module.vpc.aws_vpc_dhcp_options.this[0]"
  },
  {
   "attribute": [
    "arn"
   ],
   "resource": "module.vpc.aws_default_vpc.this[0]"
  },
  {
   "attribute": [
    "instance_tenancy"
   ],
   "resource": "module.vpc.aws_vpc.this[0]"
  },
  {
   "attribute": [
    "vpn_gateway_id"
   ],
   "resource": "module.vpc.aws_vpn_gateway_attachment.this[0]"
  },
  {
   "attribute": [
    "id"
   ],
   "resource": "module.vpc.aws_network_acl.private[0]"
  },
  {
   "attribute": [
    "health_check_grace_period"
   ],
   "resource": "module.eks.module.self_managed_node_group.aws_autoscaling_group.this[0]"
  },
  {
   "attribute": [
    "default_security_group_id"
   ],
   "resource": "module.vpc.aws_default_vpc.this[0]"
  },
  {
   "attribute": [
    "arn"
   ],
   "resource": "module.eks.aws_cloudwatch_log_group.this[0]"
  },
  {
   "attribute": [
    "unique_id"
   ],
   "resource": "module.eks.module.eks_managed_node_group[\"first\"].aws_iam_role.this[0]"
  },
  {
   "attribute": [
    "arn"
   ],
   "resource": "module.vpc.aws_network_acl.elasticache[0]"
  },
  {
   "attribute": [
    "arn"
   ],
   "resource": "module.vpc.aws_network_acl.outpost[0]"
  },
  {
   "attribute": [
    "id"
   ],
   "resource": "module.vpc.aws_route.public_internet_gateway_ipv6[0]"
  },
  {
   "attribute": [
    "min_size"
   ],
   "resource": "module.eks.module.self_managed_node_group.aws_autoscaling_group.this[0]"
  },
  {
   "attribute": [
    "main_route_table_id"
   ],
   "resource": "module.vpc.aws_default_vpc.this[0]"
  },
  {
   "attribute": [],
   "resource": "module.eks.aws_eks_identity_provider_config.this"
  },
  {
   "attribute": [
    "arn"
   ],
   "resource": "module.eks.module.eks_managed_node_group.aws_eks_node_group.this[0]"
  },
  {
   "attribute": [
    "unique_id"
   ],
   "resource": "module.eks.module.fargate_profile.aws_iam_role.this[0]"
  },
  {
   "attribute": [
    "id"
   ],
   "resource": "module.vpc.aws_network_acl.outpost[0]"
  },
  {
   "attribute": [],
   "resource": "module.vpc.aws_route_table_association.redshift_public"
  },
  {
   "attribute": [],
   "resource": "module.eks.module.kms.aws_kms_alias.this"
  },
  {
   "attribute": [
    "latest_version"
   ],
   "resource": "module.eks.module.self_managed_node_group.aws_launch_template.this[0]"
  },
  {
   "attribute": [
    "id"
   ],
   "resource": "module.eks.module.eks_managed_node_group.aws_launch_template.this[0]"
  },
  {
   "attribute": [
    "image_id"
   ],
   "resource": "module.eks.module.self_managed_node_group.data.aws_ami.eks_default[0]"
  },
  {
   "attribute": [
    "arn"
   ],
   "resource": "module.vpc.aws_network_acl.intra[0]"
  },
  {
   "attribute": [
    "version"
   ],
   "resource": "module.eks.aws_eks_cluster.this[0]"
  },
  {
   "attribute": [
    "certificates",
    0,
    "sha1_fingerprint"
   ],
   "resource": "module.eks.data.tls_certificate.this[0]"
  },
  {
   "attribute": [
    "latest_version"
   ],
   "resource": "module.eks.module.eks_managed_node_group.aws_launch_template.this[0]"
  },
  {
   "attribute": [
    "arn"
   ],
   "resource": "module.vpc.aws_cloudwatch_log_group.flow_log[0]"
  },
  {
   "attribute": [],
   "resource": "module.vpc.aws_subnet.intra"
  },
  {
   "attribute": [],
   "resource": "module.vpc.aws_subnet.elasticache"
  },
  {
   "attribute": [
    "arn"
   ],
   "resource": "module.vpc.aws_network_acl.redshift[0]"
  },
  {
   "attribute": [
    "id"
   ],
   "resource": "module.vpc.aws_network_acl.database[0]"
  },
  {
   "attribute": [
    "arn"
   ],
   "resource": "module.eks.aws_security_group.cluster[0]"
  },
  {
   "attribute": [],
   "resource": "module.vpc.aws_route_table.redshift"
  },
  {
   "attribute": [
    "arn"
   ],
   "resource": "module.eks.aws_security_group.node[0]"
  },
  {
   "attribute": [
    "arn"
   ],
   "resource": "module.eks.module.self_managed_node_group.aws_security_group.this[0]"
  },
  {
   "attribute": [
    "enable_dns_hostnames"
   ],
   "resource": "module.vpc.aws_default_vpc.this[0]"
  },
  {
   "attribute": [],
   "resource": "module.vpc.aws_eip.nat"
  },
  {
   "attribute": [
    "default_route_table_id"
   ],
   "resource": "module.vpc.aws_vpc.this[0]"
  },
  {
   "attribute": [
    "id"
   ],
   "resource": "module.vpc.aws_network_acl.public[0]"
  },
  {
   "attribute": [
    "id"
   ],
   "resource": "module.vpc.aws_route.public_internet_gateway[0]"
  },
  {
   "attribute": [
    "arn"
   ],
   "resource": "module.eks.module.eks_managed_node_group[\"first\"].aws_eks_node_group.this[0]"
  },
  {
   "attribute": [
    "arn"
   ],
   "resource": "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this[0]"
  },
  {
   "attribute": [
    "id"
   ],
   "resource": "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this[0]"
  },
  {
   "attribute": [],
   "resource": "module.vpc.aws_subnet.redshift"
  },
  {
   "attribute": [
    "id"
   ],
   "resource": "module.vpc.aws_network_acl.intra[0]"
  },
  {
   "attribute": [
    "id"
   ],
   "resource": "module.eks.module.eks_managed_node_group[\"first\"].aws_security_group.this[0]"
  },
  {
   "attribute": [
    "id"
   ],
   "resource": "module.eks.aws_security_group.cluster[0]"
  },
  {
   "attribute": [
    "arn"
   ],
   "resource": "module.vpc.aws_network_acl.public[0]"
  },
  {
   "attribute": [
    "identity",
    0,
    "oidc",
    0,
    "issuer"
   ],
   "resource": "module.eks.aws_eks_cluster.this[0]"
  },
  {
   "attribute": [
    "resources"
   ],
   "resource": "module.eks.module.eks_managed_node_group[\"first\"].aws_eks_node_group.this[0]"
  },
  {
   "attribute": [
    "name"
   ],
   "resource": "module.eks.module.self_managed_node_group.aws_launch_template.this[0]"
  },
  {
   "attribute": [],
   "resource": "module.vpc.aws_route_table_association.redshift"
  },
  {
   "attribute": [],
   "resource": "module.vpc.aws_route_table_association.private"
  },
  {
   "attribute": [
    "max_size"
   ],
   "resource": "module.eks.module.self_managed_node_group.aws_autoscaling_group.this[0]"
  },
  {
   "attribute": [
    "arn"
   ],
   "resource": "module.vpc.aws_iam_role.vpc_flow_log_cloudwatch[0]"
  }
 ],
 "resource_changes": [
  {
   "address": "aws_ecr_repository.ecr[\"microservice_aisight\"]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "arn": "arn:aws:ecr:eu-central-1:435357319394:repository/microservice_aisight",
     "encryption_configuration": [
      {
       "encryption_type": "KMS",
       "kms_key": "arn:aws:kms:eu-central-1:435357319394:key/1a603205-6ff5-48ca-b882-7e98cd9128ac"
      }
     ],
     "force_delete": null,
     "id": "microservice_aisight",
     "image_scanning_configuration": [
      {
       "scan_on_push": true
      }
     ],
     "image_tag_mutability": "IMMUTABLE",
     "name": "microservice_aisight",
     "registry_id": "435357319394",
     "repository_url": "435357319394.dkr.ecr.eu-central-1.amazonaws.com/microservice_aisight",
     "tags": {
      "Environment": "Dev"
     },
     "tags_all": {
      "Environment": "Dev"
     },
     "timeouts": null
    },
    "after_sensitive": {
     "encryption_configuration": [
      {}
     ],
     "image_scanning_configuration": [
      {}
     ],
     "tags": {},
     "tags_all": {}
    },
    "after_unknown": {},
    "before": {
     "arn": "arn:aws:ecr:eu-central-1:435357319394:repository/microservice_aisight",
     "encryption_configuration": [
      {
       "encryption_type": "KMS",
       "kms_key": "arn:aws:kms:eu-central-1:435357319394:key/1a603205-6ff5-48ca-b882-7e98cd9128ac"
      }
     ],
     "force_delete": null,
     "id": "microservice_aisight",
     "image_scanning_configuration": [
      {
       "scan_on_push": true
      }
     ],
     "image_tag_mutability": "IMMUTABLE",
     "name": "microservice_aisight",
     "registry_id": "435357319394",
     "repository_url": "435357319394.dkr.ecr.eu-central-1.amazonaws.com/microservice_aisight",
     "tags": {
      "Environment": "Dev"
     },
     "tags_all": {
      "Environment": "Dev"
     },
     "timeouts": null
    },
    "before_sensitive": {
     "encryption_configuration": [
      {}
     ],
     "image_scanning_configuration": [
      {}
     ],
     "tags": {},
     "tags_all": {}
    }
   },
   "index": "microservice_aisight",
   "mode": "managed",
   "name": "ecr",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_ecr_repository"
  },
  {
   "address": "local_file.kubeconfig",
   "change": {
    "actions": [
     "create"
    ],
    "after": {
     "content_base64": null,
     "directory_permission": "0777",
     "file_permission": "0777",
     "filename": "kubeconfig_aisight_demo-eks",
     "sensitive_content": null,
     "source": null
    },
    "after_sensitive": {
     "content": true,
     "sensitive_content": true
    },
    "after_unknown": {
     "content": true,
     "content_base64sha256": true,
     "content_base64sha512": true,
     "content_md5": true,
     "content_sha1": true,
     "content_sha256": true,
     "content_sha512": true,
     "id": true
    },
    "before": null,
    "before_sensitive": false
   },
   "mode": "managed",
   "name": "kubeconfig",
   "provider_name": "registry.terraform.io/hashicorp/local",
   "type": "local_file"
  },
  {
   "address": "module.eks.aws_cloudwatch_log_group.this[0]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "arn": "arn:aws:logs:eu-central-1:435357319394:log-group:/aws/eks/aisight_demo-eks/cluster",
     "id": "/aws/eks/aisight_demo-eks/cluster",
     "kms_key_id": "",
     "name": "/aws/eks/aisight_demo-eks/cluster",
     "name_prefix": "",
     "retention_in_days": 90,
     "skip_destroy": false,
     "tags": {},
     "tags_all": {}
    },
    "after_sensitive": {
     "tags": {},
     "tags_all": {}
    },
    "after_unknown": {},
    "before": {
     "arn": "arn:aws:logs:eu-central-1:435357319394:log-group:/aws/eks/aisight_demo-eks/cluster",
     "id": "/aws/eks/aisight_demo-eks/cluster",
     "kms_key_id": "",
     "name": "/aws/eks/aisight_demo-eks/cluster",
     "name_prefix": "",
     "retention_in_days": 90,
     "skip_destroy": false,
     "tags": {},
     "tags_all": {}
    },
    "before_sensitive": {
     "tags": {},
     "tags_all": {}
    }
   },
   "index": 0,
   "mode": "managed",
   "module_address": "module.eks",
   "name": "this",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_cloudwatch_log_group"
  },
  {
   "address": "module.eks.aws_eks_cluster.this[0]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "arn": "arn:aws:eks:eu-central-1:435357319394:cluster/aisight_demo-eks",
     "certificate_authority": [
      {
       "data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMvakNDQWVhZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJek1ETXhNakUwTkRnek1Wb1hEVE16TURNd09URTBORGd6TVZvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTHpnCnNjb1AxSmZUUWVVZCtReWx3UFYyaUNJL1g1SEo3Mk13bG95S3pWRVBITmVnZm5KMHdFWEw5Q3VrbkQ3dEkwZFQKckg2T0cvSDhCaEdKMjFzR2lwVmFjL1JubHdxLy8ycUVOOWw5TWsvU0l3WnN1RzYxRTM0RVcwYStoYXV0aDVEUgpuK2YvcEJhL3NrcjR0TGdsaUI5elBwZ2tPVlZ0RlRjOWpxTHFlNEJkVDM0a0ZwKzhuaEFJckJVNGxrckt0bVo1Ck81VllCV2dudkNYOE1yb3M2dUgxd3FRcktoRjNXTjhrNG9pd1IwQUVTaWZUV0FuaTMxbnNsMk0rN3pwbEdzTXAKb2h3bUhMYUtZaVM2M0Zwa2x2c09ud0dydlBGL056enZ0SitFNFhrblFYa0dDaWsrMVFSaHM3QjNBN0d3b0dXOQpMSXRFTjNGbmhVMnVHcnU2eTgwQ0F3RUFBYU5aTUZjd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZOYWJTYUVGU2NUNEdTVGpuWjhyUzBkbVVvc1VNQlVHQTFVZEVRUU8KTUF5Q0NtdDFZbVZ5Ym1WMFpYTXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBRGVvR2xVSVFsUmc2MGNWeElERApxbmlwWncrU3dGZjJYcTd1MGlzQXpjRHpBZXBJbXBZaU1QT2E4L1hteXkxWEJFankvdFNhTkkySDlpNjhaVGtBCjVMb0ZUVzVOQ1VZazVsYTFxOEs1ZHZWQmErbnhRWE5hS1FtT1hVWGZQTWt5b1RqK3E0Rk5sVzc2K0JvdDVZelQKRHIwbUs3MDltVStNOXkwS1VidkNKZ0J3bkxyMkJMRVdkejhibXo1Z3dUQVJQYmdUZElJbDVYT2UwbmQ4di91VApIRytyeVByZnpUM3lwUUlXKzY0b0JwVFdVZmdUR2YxbGJJTzV1cnZueFdwUjRPNmlleUkxeVA0SzRMK3ZSbVdnCkVqckxVYXRxRHoxUm1QR3MzSHZDQlFnTnI5aU9veWtPRDBDNWxTMnBabWNKNjFNOC9DTDhYbGpkYUpXQlpZNVYKUkNRPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
      }
     ],
     "cluster_id": null,
     "created_at": "2023-03-12 14:41:59.384 +0000 UTC",
     "enabled_cluster_log_types": [
      "api",
      "audit",
      "authenticator"
     ],
     "encryption_config": [],
     "endpoint": "https://94AB6DF0F67D05BA57F5EB099F8AEB5E.gr7.eu-central-1.eks.amazonaws.com",
     "id": "aisight_demo-eks",
     "identity": [
      {
       "oidc": [
        {
         "issuer": "https://oidc.eks.eu-central-1.amazonaws.com/id/94AB6DF0F67D05BA57F5EB099F8AEB5E"
        }
       ]
      }
     ],
     "kubernetes_network_config": [
      {
       "ip_family": "ipv4",
       "service_ipv4_cidr": "10.100.0.0/16",
       "service_ipv6_cidr": ""
      }
     ],
     "name": "aisight_demo-eks",
     "outpost_config": [],
     "platform_version": "eks.1",
     "role_arn": "arn:aws:iam::435357319394:role/aisight_demo-eks-cluster-20230312144140332000000002",
     "status": "ACTIVE",
     "tags": {},
     "tags_all": {},
     "timeouts": {
      "create": null,
      "delete": null,
      "update": null
     },
     "version": "1.25",
     "vpc_config": [
      {
       "cluster_security_group_id": "sg-01641985f7f813c3f",
       "endpoint_private_access": false,
       "endpoint_public_access": true,
       "public_access_cidrs": [
        "0.0.0.0/0"
       ],
       "security_group_ids": [
        "sg-0d4c3ed613f24cfac"
       ],
       "subnet_ids": [
        "subnet-020599695ef4412bc",
        "subnet-04064b4652b88ff67",
        "subnet-0e8a89850f69f9a37"
       ],
       "vpc_id": "vpc-020baab04492a8145"
      }
     ]
    },
    "after_sensitive": {
     "certificate_authority": [
      {}
     ],
     "enabled_cluster_log_types": [
      false,
      false,
      false
     ],
     "encryption_config": [],
     "identity": [
      {
       "oidc": [
        {}
       ]
      }
     ],
     "kubernetes_network_config": [
      {}
     ],
     "outpost_config": [],
     "tags": {},
     "tags_all": {},
     "timeouts": {},
     "vpc_config": [
      {
       "public_access_cidrs": [
        false
       ],
       "security_group_ids": [
        false
       ],
       "subnet_ids": [
        false,
        false,
        false
       ]
      }
     ]
    },
    "after_unknown": {},
    "before": {
     "arn": "arn:aws:eks:eu-central-1:435357319394:cluster/aisight_demo-eks",
     "certificate_authority": [
      {
       "data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMvakNDQWVhZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJek1ETXhNakUwTkRnek1Wb1hEVE16TURNd09URTBORGd6TVZvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTHpnCnNjb1AxSmZUUWVVZCtReWx3UFYyaUNJL1g1SEo3Mk13bG95S3pWRVBITmVnZm5KMHdFWEw5Q3VrbkQ3dEkwZFQKckg2T0cvSDhCaEdKMjFzR2lwVmFjL1JubHdxLy8ycUVOOWw5TWsvU0l3WnN1RzYxRTM0RVcwYStoYXV0aDVEUgpuK2YvcEJhL3NrcjR0TGdsaUI5elBwZ2tPVlZ0RlRjOWpxTHFlNEJkVDM0a0ZwKzhuaEFJckJVNGxrckt0bVo1Ck81VllCV2dudkNYOE1yb3M2dUgxd3FRcktoRjNXTjhrNG9pd1IwQUVTaWZUV0FuaTMxbnNsMk0rN3pwbEdzTXAKb2h3bUhMYUtZaVM2M0Zwa2x2c09ud0dydlBGL056enZ0SitFNFhrblFYa0dDaWsrMVFSaHM3QjNBN0d3b0dXOQpMSXRFTjNGbmhVMnVHcnU2eTgwQ0F3RUFBYU5aTUZjd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZOYWJTYUVGU2NUNEdTVGpuWjhyUzBkbVVvc1VNQlVHQTFVZEVRUU8KTUF5Q0NtdDFZbVZ5Ym1WMFpYTXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBRGVvR2xVSVFsUmc2MGNWeElERApxbmlwWncrU3dGZjJYcTd1MGlzQXpjRHpBZXBJbXBZaU1QT2E4L1hteXkxWEJFankvdFNhTkkySDlpNjhaVGtBCjVMb0ZUVzVOQ1VZazVsYTFxOEs1ZHZWQmErbnhRWE5hS1FtT1hVWGZQTWt5b1RqK3E0Rk5sVzc2K0JvdDVZelQKRHIwbUs3MDltVStNOXkwS1VidkNKZ0J3bkxyMkJMRVdkejhibXo1Z3dUQVJQYmdUZElJbDVYT2UwbmQ4di91VApIRytyeVByZnpUM3lwUUlXKzY0b0JwVFdVZmdUR2YxbGJJTzV1cnZueFdwUjRPNmlleUkxeVA0SzRMK3ZSbVdnCkVqckxVYXRxRHoxUm1QR3MzSHZDQlFnTnI5aU9veWtPRDBDNWxTMnBabWNKNjFNOC9DTDhYbGpkYUpXQlpZNVYKUkNRPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
      }
     ],
     "cluster_id": null,
     "created_at": "2023-03-12 14:41:59.384 +0000 UTC",
     "enabled_cluster_log_types": [
      "api",
      "audit",
      "authenticator"
     ],
     "encryption_config": [],
     "endpoint": "https://94AB6DF0F67D05BA57F5EB099F8AEB5E.gr7.eu-central-1.eks.amazonaws.com",
     "id": "aisight_demo-eks",
     "identity": [
      {
       "oidc": [
        {
         "issuer": "https://oidc.eks.eu-central-1.amazonaws.com/id/94AB6DF0F67D05BA57F5EB099F8AEB5E"
        }
       ]
      }
     ],
     "kubernetes_network_config": [
      {
       "ip_family": "ipv4",
       "service_ipv4_cidr": "10.100.0.0/16",
       "service_ipv6_cidr": ""
      }
     ],
     "name": "aisight_demo-eks",
     "outpost_config": [],
     "platform_version": "eks.1",
     "role_arn": "arn:aws:iam::435357319394:role/aisight_demo-eks-cluster-20230312144140332000000002",
     "status": "ACTIVE",
     "tags": {},
     "tags_all": {},
     "timeouts": {
      "create": null,
      "delete": null,
      "update": null
     },
     "version": "1.25",
     "vpc_config": [
      {
       "cluster_security_group_id": "sg-01641985f7f813c3f",
       "endpoint_private_access": false,
       "endpoint_public_access": true,
       "public_access_cidrs": [
        "0.0.0.0/0"
       ],
       "security_group_ids": [
        "sg-0d4c3ed613f24cfac"
       ],
       "subnet_ids": [
        "subnet-020599695ef4412bc",
        "subnet-04064b4652b88ff67",
        "subnet-0e8a89850f69f9a37"
       ],
       "vpc_id": "vpc-020baab04492a8145"
      }
     ]
    },
    "before_sensitive": {
     "certificate_authority": [
      {}
     ],
     "enabled_cluster_log_types": [
      false,
      false,
      false
     ],
     "encryption_config": [],
     "identity": [
      {
       "oidc": [
        {}
       ]
      }
     ],
     "kubernetes_network_config": [
      {}
     ],
     "outpost_config": [],
     "tags": {},
     "tags_all": {},
     "timeouts": {},
     "vpc_config": [
      {
       "public_access_cidrs": [
        false
       ],
       "security_group_ids": [
        false
       ],
       "subnet_ids": [
        false,
        false,
        false
       ]
      }
     ]
    }
   },
   "index": 0,
   "mode": "managed",
   "module_address": "module.eks",
   "name": "this",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_eks_cluster"
  },
  {
   "address": "module.eks.aws_iam_openid_connect_provider.oidc_provider[0]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "arn": "arn:aws:iam::435357319394:oidc-provider/oidc.eks.eu-central-1.amazonaws.com/id/94AB6DF0F67D05BA57F5EB099F8AEB5E",
     "client_id_list": [
      "sts.amazonaws.com"
     ],
     "id": "arn:aws:iam::435357319394:oidc-provider/oidc.eks.eu-central-1.amazonaws.com/id/94AB6DF0F67D05BA57F5EB099F8AEB5E",
     "tags": {
      "Name": "aisight_demo-eks-eks-irsa"
     },
     "tags_all": {
      "Name": "aisight_demo-eks-eks-irsa"
     },
     "thumbprint_list": [
      "9e99a48a9960b14926bb7f3b02e22da2b0ab7280"
     ],
     "url": "oidc.eks.eu-central-1.amazonaws.com/id/94AB6DF0F67D05BA57F5EB099F8AEB5E"
    },
    "after_sensitive": {
     "client_id_list": [
      false
     ],
     "tags": {},
     "tags_all": {},
     "thumbprint_list": [
      false
     ]
    },
    "after_unknown": {},
    "before": {
     "arn": "arn:aws:iam::435357319394:oidc-provider/oidc.eks.eu-central-1.amazonaws.com/id/94AB6DF0F67D05BA57F5EB099F8AEB5E",
     "client_id_list": [
      "sts.amazonaws.com"
     ],
     "id": "arn:aws:iam::435357319394:oidc-provider/oidc.eks.eu-central-1.amazonaws.com/id/94AB6DF0F67D05BA57F5EB099F8AEB5E",
     "tags": {
      "Name": "aisight_demo-eks-eks-irsa"
     },
     "tags_all": {
      "Name": "aisight_demo-eks-eks-irsa"
     },
     "thumbprint_list": [
      "9e99a48a9960b14926bb7f3b02e22da2b0ab7280"
     ],
     "url": "oidc.eks.eu-central-1.amazonaws.com/id/94AB6DF0F67D05BA57F5EB099F8AEB5E"
    },
    "before_sensitive": {
     "client_id_list": [
      false
     ],
     "tags": {},
     "tags_all": {},
     "thumbprint_list": [
      false
     ]
    }
   },
   "index": 0,
   "mode": "managed",
   "module_address": "module.eks",
   "name": "oidc_provider",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_iam_openid_connect_provider"
  },
  {
   "address": "module.eks.aws_iam_role.this[0]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "arn": "arn:aws:iam::435357319394:role/aisight_demo-eks-cluster-20230312144140332000000002",
     "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"eks.amazonaws.com\"},\"Sid\":\"EKSClusterAssumeRole\"}],\"Version\":\"2012-10-17\"}",
     "create_date": "2023-03-12T14:41:40Z",
     "description": "",
     "force_detach_policies": true,
     "id": "aisight_demo-eks-cluster-20230312144140332000000002",
     "inline_policy": [
      {
       "name": "aisight_demo-eks-cluster",
       "policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Action\":[\"logs:CreateLogGroup\"],\"Effect\":\"Deny\",\"Resource\":\"*\"}]}"
      }
     ],
     "managed_policy_arns": [
      "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
      "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController"
     ],
     "max_session_duration": 3600,
     "name": "aisight_demo-eks-cluster-20230312144140332000000002",
     "name_prefix": "aisight_demo-eks-cluster-",
     "path": "/",
     "permissions_boundary": null,
     "tags": {},
     "tags_all": {},
     "unique_id": "AROAWKXKRQDRKTX4ZO5ZM"
    },
    "after_sensitive": {
     "inline_policy": [
      {}
     ],
     "managed_policy_arns": [
      false,
      false
     ],
     "tags": {},
     "tags_all": {}
    },
    "after_unknown": {},
    "before": {
     "arn": "arn:aws:iam::435357319394:role/aisight_demo-eks-cluster-20230312144140332000000002",
     "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"eks.amazonaws.com\"},\"Sid\":\"EKSClusterAssumeRole\"}],\"Version\":\"2012-10-17\"}",
     "create_date": "2023-03-12T14:41:40Z",
     "description": "",
     "force_detach_policies": true,
     "id": "aisight_demo-eks-cluster-20230312144140332000000002",
     "inline_policy": [
      {
       "name": "aisight_demo-eks-cluster",
       "policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Action\":[\"logs:CreateLogGroup\"],\"Effect\":\"Deny\",\"Resource\":\"*\"}]}"
      }
     ],
     "managed_policy_arns": [
      "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
      "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController"
     ],
     "max_session_duration": 3600,
     "name": "aisight_demo-eks-cluster-20230312144140332000000002",
     "name_prefix": "aisight_demo-eks-cluster-",
     "path": "/",
     "permissions_boundary": null,
     "tags": {},
     "tags_all": {},
     "unique_id": "AROAWKXKRQDRKTX4ZO5ZM"
    },
    "before_sensitive": {
     "inline_policy": [
      {}
     ],
     "managed_policy_arns": [
      false,
      false
     ],
     "tags": {},
     "tags_all": {}
    }
   },
   "index": 0,
   "mode": "managed",
   "module_address": "module.eks",
   "name": "this",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_iam_role"
  },
  {
   "address": "module.eks.aws_iam_role_policy_attachment.this[\"arn:aws:iam::aws:policy/AmazonEKSClusterPolicy\"]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "id": "aisight_demo-eks-cluster-20230312144140332000000002-20230312144142094200000006",
     "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
     "role": "aisight_demo-eks-cluster-20230312144140332000000002"
    },
    "after_sensitive": {},
    "after_unknown": {},
    "before": {
     "id": "aisight_demo-eks-cluster-20230312144140332000000002-20230312144142094200000006",
     "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
     "role": "aisight_demo-eks-cluster-20230312144140332000000002"
    },
    "before_sensitive": {}
   },
   "index": "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
   "mode": "managed",
   "module_address": "module.eks",
   "name": "this",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_iam_role_policy_attachment"
  },
  {
   "address": "module.eks.aws_iam_role_policy_attachment.this[\"arn:aws:iam::aws:policy/AmazonEKSVPCResourceController\"]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "id": "aisight_demo-eks-cluster-20230312144140332000000002-20230312144142201000000007",
     "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController",
     "role": "aisight_demo-eks-cluster-20230312144140332000000002"
    },
    "after_sensitive": {},
    "after_unknown": {},
    "before": {
     "id": "aisight_demo-eks-cluster-20230312144140332000000002-20230312144142201000000007",
     "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController",
     "role": "aisight_demo-eks-cluster-20230312144140332000000002"
    },
    "before_sensitive": {}
   },
   "index": "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController",
   "mode": "managed",
   "module_address": "module.eks",
   "name": "this",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_iam_role_policy_attachment"
  },
  {
   "address": "module.eks.aws_security_group.cluster[0]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "arn": "arn:aws:ec2:eu-central-1:435357319394:security-group/sg-0d4c3ed613f24cfac",
     "description": "EKS cluster security group",
     "egress": [
      {
       "cidr_blocks": [],
       "description": "Cluster API to node groups",
       "from_port": 443,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "tcp",
       "security_groups": [
        "sg-02107c0d526390e0b"
       ],
       "self": false,
       "to_port": 443
      },
      {
       "cidr_blocks": [],
       "description": "Cluster API to node kubelets",
       "from_port": 10250,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "tcp",
       "security_groups": [
        "sg-02107c0d526390e0b"
       ],
       "self": false,
       "to_port": 10250
      }
     ],
     "id": "sg-0d4c3ed613f24cfac",
     "ingress": [
      {
       "cidr_blocks": [],
       "description": "Node groups to cluster API",
       "from_port": 443,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "tcp",
       "security_groups": [
        "sg-02107c0d526390e0b"
       ],
       "self": false,
       "to_port": 443
      }
     ],
     "name": "aisight_demo-eks-cluster-20230312144152318900000009",
     "name_prefix": "aisight_demo-eks-cluster-",
     "owner_id": "435357319394",
     "revoke_rules_on_delete": false,
     "tags": {
      "Name": "aisight_demo-eks-cluster"
     },
     "tags_all": {
      "Name": "aisight_demo-eks-cluster"
     },
     "timeouts": null,
     "vpc_id": "vpc-020baab04492a8145"
    },
    "after_sensitive": {
     "egress": [
      {
       "cidr_blocks": [],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": [
        false
       ]
      },
      {
       "cidr_blocks": [],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": [
        false
       ]
      }
     ],
     "ingress": [
      {
       "cidr_blocks": [],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": [
        false
       ]
      }
     ],
     "tags": {},
     "tags_all": {}
    },
    "after_unknown": {},
    "before": {
     "arn": "arn:aws:ec2:eu-central-1:435357319394:security-group/sg-0d4c3ed613f24cfac",
     "description": "EKS cluster security group",
     "egress": [
      {
       "cidr_blocks": [],
       "description": "Cluster API to node groups",
       "from_port": 443,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "tcp",
       "security_groups": [
        "sg-02107c0d526390e0b"
       ],
       "self": false,
       "to_port": 443
      },
      {
       "cidr_blocks": [],
       "description": "Cluster API to node kubelets",
       "from_port": 10250,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "tcp",
       "security_groups": [
        "sg-02107c0d526390e0b"
       ],
       "self": false,
       "to_port": 10250
      }
     ],
     "id": "sg-0d4c3ed613f24cfac",
     "ingress": [
      {
       "cidr_blocks": [],
       "description": "Node groups to cluster API",
       "from_port": 443,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "tcp",
       "security_groups": [
        "sg-02107c0d526390e0b"
       ],
       "self": false,
       "to_port": 443
      }
     ],
     "name": "aisight_demo-eks-cluster-20230312144152318900000009",
     "name_prefix": "aisight_demo-eks-cluster-",
     "owner_id": "435357319394",
     "revoke_rules_on_delete": false,
     "tags": {
      "Name": "aisight_demo-eks-cluster"
     },
     "tags_all": {
      "Name": "aisight_demo-eks-cluster"
     },
     "timeouts": null,
     "vpc_id": "vpc-020baab04492a8145"
    },
    "before_sensitive": {
     "egress": [
      {
       "cidr_blocks": [],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": [
        false
       ]
      },
      {
       "cidr_blocks": [],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": [
        false
       ]
      }
     ],
     "ingress": [
      {
       "cidr_blocks": [],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": [
        false
       ]
      }
     ],
     "tags": {},
     "tags_all": {}
    }
   },
   "index": 0,
   "mode": "managed",
   "module_address": "module.eks",
   "name": "cluster",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_security_group"
  },
  {
   "address": "module.eks.aws_security_group.node[0]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "arn": "arn:aws:ec2:eu-central-1:435357319394:security-group/sg-02107c0d526390e0b",
     "description": "EKS node shared security group",
     "egress": [
      {
       "cidr_blocks": [
        "0.0.0.0/0"
       ],
       "description": "Egress NTP/TCP to internet",
       "from_port": 123,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "tcp",
       "security_groups": [],
       "self": false,
       "to_port": 123
      },
      {
       "cidr_blocks": [
        "0.0.0.0/0"
       ],
       "description": "Egress NTP/UDP to internet",
       "from_port": 123,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "udp",
       "security_groups": [],
       "self": false,
       "to_port": 123
      },
      {
       "cidr_blocks": [
        "0.0.0.0/0"
       ],
       "description": "Egress all HTTPS to internet",
       "from_port": 443,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "tcp",
       "security_groups": [],
       "self": false,
       "to_port": 443
      },
      {
       "cidr_blocks": [],
       "description": "Node groups to cluster API",
       "from_port": 443,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "tcp",
       "security_groups": [
        "sg-0d4c3ed613f24cfac"
       ],
       "self": false,
       "to_port": 443
      },
      {
       "cidr_blocks": [],
       "description": "Node to node CoreDNS",
       "from_port": 53,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "tcp",
       "security_groups": [],
       "self": true,
       "to_port": 53
      },
      {
       "cidr_blocks": [],
       "description": "Node to node CoreDNS",
       "from_port": 53,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "udp",
       "security_groups": [],
       "self": true,
       "to_port": 53
      }
     ],
     "id": "sg-02107c0d526390e0b",
     "ingress": [
      {
       "cidr_blocks": [],
       "description": "Cluster API to node groups",
       "from_port": 443,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "tcp",
       "security_groups": [
        "sg-0d4c3ed613f24cfac"
       ],
       "self": false,
       "to_port": 443
      },
      {
       "cidr_blocks": [],
       "description": "Cluster API to node kubelets",
       "from_port": 10250,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "tcp",
       "security_groups": [
        "sg-0d4c3ed613f24cfac"
       ],
       "self": false,
       "to_port": 10250
      },
      {
       "cidr_blocks": [],
       "description": "Node to node CoreDNS",
       "from_port": 53,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "tcp",
       "security_groups": [],
       "self": true,
       "to_port": 53
      },
      {
       "cidr_blocks": [],
       "description": "Node to node CoreDNS",
       "from_port": 53,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "udp",
       "security_groups": [],
       "self": true,
       "to_port": 53
      }
     ],
     "name": "aisight_demo-eks-node-20230312144151916900000008",
     "name_prefix": "aisight_demo-eks-node-",
     "owner_id": "435357319394",
     "revoke_rules_on_delete": false,
     "tags": {
      "Name": "aisight_demo-eks-node",
      "kubernetes.io/cluster/aisight_demo-eks": "owned"
     },
     "tags_all": {
      "Name": "aisight_demo-eks-node",
      "kubernetes.io/cluster/aisight_demo-eks": "owned"
     },
     "timeouts": null,
     "vpc_id": "vpc-020baab04492a8145"
    },
    "after_sensitive": {
     "egress": [
      {
       "cidr_blocks": [
        false
       ],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": []
      },
      {
       "cidr_blocks": [
        false
       ],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": []
      },
      {
       "cidr_blocks": [
        false
       ],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": []
      },
      {
       "cidr_blocks": [],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": [
        false
       ]
      },
      {
       "cidr_blocks": [],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": []
      },
      {
       "cidr_blocks": [],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": []
      }
     ],
     "ingress": [
      {
       "cidr_blocks": [],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": [
        false
       ]
      },
      {
       "cidr_blocks": [],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": [
        false
       ]
      },
      {
       "cidr_blocks": [],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": []
      },
      {
       "cidr_blocks": [],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": []
      }
     ],
     "tags": {},
     "tags_all": {}
    },
    "after_unknown": {},
    "before": {
     "arn": "arn:aws:ec2:eu-central-1:435357319394:security-group/sg-02107c0d526390e0b",
     "description": "EKS node shared security group",
     "egress": [
      {
       "cidr_blocks": [
        "0.0.0.0/0"
       ],
       "description": "Egress NTP/TCP to internet",
       "from_port": 123,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "tcp",
       "security_groups": [],
       "self": false,
       "to_port": 123
      },
      {
       "cidr_blocks": [
        "0.0.0.0/0"
       ],
       "description": "Egress NTP/UDP to internet",
       "from_port": 123,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "udp",
       "security_groups": [],
       "self": false,
       "to_port": 123
      },
      {
       "cidr_blocks": [
        "0.0.0.0/0"
       ],
       "description": "Egress all HTTPS to internet",
       "from_port": 443,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "tcp",
       "security_groups": [],
       "self": false,
       "to_port": 443
      },
      {
       "cidr_blocks": [],
       "description": "Node groups to cluster API",
       "from_port": 443,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "tcp",
       "security_groups": [
        "sg-0d4c3ed613f24cfac"
       ],
       "self": false,
       "to_port": 443
      },
      {
       "cidr_blocks": [],
       "description": "Node to node CoreDNS",
       "from_port": 53,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "tcp",
       "security_groups": [],
       "self": true,
       "to_port": 53
      },
      {
       "cidr_blocks": [],
       "description": "Node to node CoreDNS",
       "from_port": 53,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "udp",
       "security_groups": [],
       "self": true,
       "to_port": 53
      }
     ],
     "id": "sg-02107c0d526390e0b",
     "ingress": [
      {
       "cidr_blocks": [],
       "description": "Cluster API to node groups",
       "from_port": 443,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "tcp",
       "security_groups": [
        "sg-0d4c3ed613f24cfac"
       ],
       "self": false,
       "to_port": 443
      },
      {
       "cidr_blocks": [],
       "description": "Cluster API to node kubelets",
       "from_port": 10250,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "tcp",
       "security_groups": [
        "sg-0d4c3ed613f24cfac"
       ],
       "self": false,
       "to_port": 10250
      },
      {
       "cidr_blocks": [],
       "description": "Node to node CoreDNS",
       "from_port": 53,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "tcp",
       "security_groups": [],
       "self": true,
       "to_port": 53
      },
      {
       "cidr_blocks": [],
       "description": "Node to node CoreDNS",
       "from_port": 53,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "udp",
       "security_groups": [],
       "self": true,
       "to_port": 53
      }
     ],
     "name": "aisight_demo-eks-node-20230312144151916900000008",
     "name_prefix": "aisight_demo-eks-node-",
     "owner_id": "435357319394",
     "revoke_rules_on_delete": false,
     "tags": {
      "Name": "aisight_demo-eks-node",
      "kubernetes.io/cluster/aisight_demo-eks": "owned"
     },
     "tags_all": {
      "Name": "aisight_demo-eks-node",
      "kubernetes.io/cluster/aisight_demo-eks": "owned"
     },
     "timeouts": null,
     "vpc_id": "vpc-020baab04492a8145"
    },
    "before_sensitive": {
     "egress": [
      {
       "cidr_blocks": [
        false
       ],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": []
      },
      {
       "cidr_blocks": [
        false
       ],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": []
      },
      {
       "cidr_blocks": [
        false
       ],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": []
      },
      {
       "cidr_blocks": [],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": [
        false
       ]
      },
      {
       "cidr_blocks": [],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": []
      },
      {
       "cidr_blocks": [],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": []
      }
     ],
     "ingress": [
      {
       "cidr_blocks": [],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": [
        false
       ]
      },
      {
       "cidr_blocks": [],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": [
        false
       ]
      },
      {
       "cidr_blocks": [],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": []
      },
      {
       "cidr_blocks": [],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": []
      }
     ],
     "tags": {},
     "tags_all": {}
    }
   },
   "index": 0,
   "mode": "managed",
   "module_address": "module.eks",
   "name": "node",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_security_group"
  },
  {
   "address": "module.eks.aws_security_group_rule.cluster[\"egress_nodes_443\"]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "cidr_blocks": null,
     "description": "Cluster API to node groups",
     "from_port": 443,
     "id": "sgrule-3317145124",
     "ipv6_cidr_blocks": null,
     "prefix_list_ids": [],
     "protocol": "tcp",
     "security_group_id": "sg-0d4c3ed613f24cfac",
     "security_group_rule_id": "sgr-0e35721448bf9f6b8",
     "self": false,
     "source_security_group_id": "sg-02107c0d526390e0b",
     "timeouts": null,
     "to_port": 443,
     "type": "egress"
    },
    "after_sensitive": {
     "prefix_list_ids": []
    },
    "after_unknown": {},
    "before": {
     "cidr_blocks": null,
     "description": "Cluster API to node groups",
     "from_port": 443,
     "id": "sgrule-3317145124",
     "ipv6_cidr_blocks": null,
     "prefix_list_ids": [],
     "protocol": "tcp",
     "security_group_id": "sg-0d4c3ed613f24cfac",
     "security_group_rule_id": "sgr-0e35721448bf9f6b8",
     "self": false,
     "source_security_group_id": "sg-02107c0d526390e0b",
     "timeouts": null,
     "to_port": 443,
     "type": "egress"
    },
    "before_sensitive": {
     "prefix_list_ids": []
    }
   },
   "index": "egress_nodes_443",
   "mode": "managed",
   "module_address": "module.eks",
   "name": "cluster",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_security_group_rule"
  },
  {
   "address": "module.eks.aws_security_group_rule.cluster[\"egress_nodes_kubelet\"]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "cidr_blocks": null,
     "description": "Cluster API to node kubelets",
     "from_port": 10250,
     "id": "sgrule-3384562031",
     "ipv6_cidr_blocks": null,
     "prefix_list_ids": [],
     "protocol": "tcp",
     "security_group_id": "sg-0d4c3ed613f24cfac",
     "security_group_rule_id": "sgr-0c8a797f58dae4058",
     "self": false,
     "source_security_group_id": "sg-02107c0d526390e0b",
     "timeouts": null,
     "to_port": 10250,
     "type": "egress"
    },
    "after_sensitive": {
     "prefix_list_ids": []
    },
    "after_unknown": {},
    "before": {
     "cidr_blocks": null,
     "description": "Cluster API to node kubelets",
     "from_port": 10250,
     "id": "sgrule-3384562031",
     "ipv6_cidr_blocks": null,
     "prefix_list_ids": [],
     "protocol": "tcp",
     "security_group_id": "sg-0d4c3ed613f24cfac",
     "security_group_rule_id": "sgr-0c8a797f58dae4058",
     "self": false,
     "source_security_group_id": "sg-02107c0d526390e0b",
     "timeouts": null,
     "to_port": 10250,
     "type": "egress"
    },
    "before_sensitive": {
     "prefix_list_ids": []
    }
   },
   "index": "egress_nodes_kubelet",
   "mode": "managed",
   "module_address": "module.eks",
   "name": "cluster",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_security_group_rule"
  },
  {
   "address": "module.eks.aws_security_group_rule.cluster[\"ingress_nodes_443\"]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "cidr_blocks": null,
     "description": "Node groups to cluster API",
     "from_port": 443,
     "id": "sgrule-3810334838",
     "ipv6_cidr_blocks": null,
     "prefix_list_ids": [],
     "protocol": "tcp",
     "security_group_id": "sg-0d4c3ed613f24cfac",
     "security_group_rule_id": "sgr-054c19fa1c6c7adbd",
     "self": false,
     "source_security_group_id": "sg-02107c0d526390e0b",
     "timeouts": null,
     "to_port": 443,
     "type": "ingress"
    },
    "after_sensitive": {
     "prefix_list_ids": []
    },
    "after_unknown": {},
    "before": {
     "cidr_blocks": null,
     "description": "Node groups to cluster API",
     "from_port": 443,
     "id": "sgrule-3810334838",
     "ipv6_cidr_blocks": null,
     "prefix_list_ids": [],
     "protocol": "tcp",
     "security_group_id": "sg-0d4c3ed613f24cfac",
     "security_group_rule_id": "sgr-054c19fa1c6c7adbd",
     "self": false,
     "source_security_group_id": "sg-02107c0d526390e0b",
     "timeouts": null,
     "to_port": 443,
     "type": "ingress"
    },
    "before_sensitive": {
     "prefix_list_ids": []
    }
   },
   "index": "ingress_nodes_443",
   "mode": "managed",
   "module_address": "module.eks",
   "name": "cluster",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_security_group_rule"
  },
  {
   "address": "module.eks.aws_security_group_rule.node[\"egress_cluster_443\"]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "cidr_blocks": null,
     "description": "Node groups to cluster API",
     "from_port": 443,
     "id": "sgrule-963490526",
     "ipv6_cidr_blocks": null,
     "prefix_list_ids": [],
     "protocol": "tcp",
     "security_group_id": "sg-02107c0d526390e0b",
     "security_group_rule_id": "sgr-045c4909d5c4a9712",
     "self": false,
     "source_security_group_id": "sg-0d4c3ed613f24cfac",
     "timeouts": null,
     "to_port": 443,
     "type": "egress"
    },
    "after_sensitive": {
     "prefix_list_ids": []
    },
    "after_unknown": {},
    "before": {
     "cidr_blocks": null,
     "description": "Node groups to cluster API",
     "from_port": 443,
     "id": "sgrule-963490526",
     "ipv6_cidr_blocks": null,
     "prefix_list_ids": [],
     "protocol": "tcp",
     "security_group_id": "sg-02107c0d526390e0b",
     "security_group_rule_id": "sgr-045c4909d5c4a9712",
     "self": false,
     "source_security_group_id": "sg-0d4c3ed613f24cfac",
     "timeouts": null,
     "to_port": 443,
     "type": "egress"
    },
    "before_sensitive": {
     "prefix_list_ids": []
    }
   },
   "index": "egress_cluster_443",
   "mode": "managed",
   "module_address": "module.eks",
   "name": "node",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_security_group_rule"
  },
  {
   "address": "module.eks.aws_security_group_rule.node[\"egress_https\"]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "cidr_blocks": [
      "0.0.0.0/0"
     ],
     "description": "Egress all HTTPS to internet",
     "from_port": 443,
     "id": "sgrule-2972996004",
     "ipv6_cidr_blocks": null,
     "prefix_list_ids": [],
     "protocol": "tcp",
     "security_group_id": "sg-02107c0d526390e0b",
     "security_group_rule_id": "sgr-0f942606ea2dee45b",
     "self": false,
     "source_security_group_id": null,
     "timeouts": null,
     "to_port": 443,
     "type": "egress"
    },
    "after_sensitive": {
     "cidr_blocks": [
      false
     ],
     "prefix_list_ids": []
    },
    "after_unknown": {},
    "before": {
     "cidr_blocks": [
      "0.0.0.0/0"
     ],
     "description": "Egress all HTTPS to internet",
     "from_port": 443,
     "id": "sgrule-2972996004",
     "ipv6_cidr_blocks": null,
     "prefix_list_ids": [],
     "protocol": "tcp",
     "security_group_id": "sg-02107c0d526390e0b",
     "security_group_rule_id": "sgr-0f942606ea2dee45b",
     "self": false,
     "source_security_group_id": null,
     "timeouts": null,
     "to_port": 443,
     "type": "egress"
    },
    "before_sensitive": {
     "cidr_blocks": [
      false
     ],
     "prefix_list_ids": []
    }
   },
   "index": "egress_https",
   "mode": "managed",
   "module_address": "module.eks",
   "name": "node",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_security_group_rule"
  },
  {
   "address": "module.eks.aws_security_group_rule.node[\"egress_ntp_tcp\"]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "cidr_blocks": [
      "0.0.0.0/0"
     ],
     "description": "Egress NTP/TCP to internet",
     "from_port": 123,
     "id": "sgrule-1860857018",
     "ipv6_cidr_blocks": null,
     "prefix_list_ids": [],
     "protocol": "tcp",
     "security_group_id": "sg-02107c0d526390e0b",
     "security_group_rule_id": "sgr-01ddccdde32917f22",
     "self": false,
     "source_security_group_id": null,
     "timeouts": null,
     "to_port": 123,
     "type": "egress"
    },
    "after_sensitive": {
     "cidr_blocks": [
      false
     ],
     "prefix_list_ids": []
    },
    "after_unknown": {},
    "before": {
     "cidr_blocks": [
      "0.0.0.0/0"
     ],
     "description": "Egress NTP/TCP to internet",
     "from_port": 123,
     "id": "sgrule-1860857018",
     "ipv6_cidr_blocks": null,
     "prefix_list_ids": [],
     "protocol": "tcp",
     "security_group_id": "sg-02107c0d526390e0b",
     "security_group_rule_id": "sgr-01ddccdde32917f22",
     "self": false,
     "source_security_group_id": null,
     "timeouts": null,
     "to_port": 123,
     "type": "egress"
    },
    "before_sensitive": {
     "cidr_blocks": [
      false
     ],
     "prefix_list_ids": []
    }
   },
   "index": "egress_ntp_tcp",
   "mode": "managed",
   "module_address": "module.eks",
   "name": "node",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_security_group_rule"
  },
  {
   "address": "module.eks.aws_security_group_rule.node[\"egress_ntp_udp\"]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "cidr_blocks": [
      "0.0.0.0/0"
     ],
     "description": "Egress NTP/UDP to internet",
     "from_port": 123,
     "id": "sgrule-276056503",
     "ipv6_cidr_blocks": null,
     "prefix_list_ids": [],
     "protocol": "udp",
     "security_group_id": "sg-02107c0d526390e0b",
     "security_group_rule_id": "sgr-0d1a4905e1ce0f9b0",
     "self": false,
     "source_security_group_id": null,
     "timeouts": null,
     "to_port": 123,
     "type": "egress"
    },
    "after_sensitive": {
     "cidr_blocks": [
      false
     ],
     "prefix_list_ids": []
    },
    "after_unknown": {},
    "before": {
     "cidr_blocks": [
      "0.0.0.0/0"
     ],
     "description": "Egress NTP/UDP to internet",
     "from_port": 123,
     "id": "sgrule-276056503",
     "ipv6_cidr_blocks": null,
     "prefix_list_ids": [],
     "protocol": "udp",
     "security_group_id": "sg-02107c0d526390e0b",
     "security_group_rule_id": "sgr-0d1a4905e1ce0f9b0",
     "self": false,
     "source_security_group_id": null,
     "timeouts": null,
     "to_port": 123,
     "type": "egress"
    },
    "before_sensitive": {
     "cidr_blocks": [
      false
     ],
     "prefix_list_ids": []
    }
   },
   "index": "egress_ntp_udp",
   "mode": "managed",
   "module_address": "module.eks",
   "name": "node",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_security_group_rule"
  },
  {
   "address": "module.eks.aws_security_group_rule.node[\"egress_self_coredns_tcp\"]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "cidr_blocks": null,
     "description": "Node to node CoreDNS",
     "from_port": 53,
     "id": "sgrule-634332603",
     "ipv6_cidr_blocks": null,
     "prefix_list_ids": [],
     "protocol": "tcp",
     "security_group_id": "sg-02107c0d526390e0b",
     "security_group_rule_id": "sgr-0f20a25071aa1bb8c",
     "self": true,
     "source_security_group_id": null,
     "timeouts": null,
     "to_port": 53,
     "type": "egress"
    },
    "after_sensitive": {
     "prefix_list_ids": []
    },
    "after_unknown": {},
    "before": {
     "cidr_blocks": null,
     "description": "Node to node CoreDNS",
     "from_port": 53,
     "id": "sgrule-634332603",
     "ipv6_cidr_blocks": null,
     "prefix_list_ids": [],
     "protocol": "tcp",
     "security_group_id": "sg-02107c0d526390e0b",
     "security_group_rule_id": "sgr-0f20a25071aa1bb8c",
     "self": true,
     "source_security_group_id": null,
     "timeouts": null,
     "to_port": 53,
     "type": "egress"
    },
    "before_sensitive": {
     "prefix_list_ids": []
    }
   },
   "index": "egress_self_coredns_tcp",
   "mode": "managed",
   "module_address": "module.eks",
   "name": "node",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_security_group_rule"
  },
  {
   "address": "module.eks.aws_security_group_rule.node[\"egress_self_coredns_udp\"]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "cidr_blocks": null,
     "description": "Node to node CoreDNS",
     "from_port": 53,
     "id": "sgrule-2879956957",
     "ipv6_cidr_blocks": null,
     "prefix_list_ids": [],
     "protocol": "udp",
     "security_group_id": "sg-02107c0d526390e0b",
     "security_group_rule_id": "sgr-07cbcf8eb15706eea",
     "self": true,
     "source_security_group_id": null,
     "timeouts": null,
     "to_port": 53,
     "type": "egress"
    },
    "after_sensitive": {
     "prefix_list_ids": []
    },
    "after_unknown": {},
    "before": {
     "cidr_blocks": null,
     "description": "Node to node CoreDNS",
     "from_port": 53,
     "id": "sgrule-2879956957",
     "ipv6_cidr_blocks": null,
     "prefix_list_ids": [],
     "protocol": "udp",
     "security_group_id": "sg-02107c0d526390e0b",
     "security_group_rule_id": "sgr-07cbcf8eb15706eea",
     "self": true,
     "source_security_group_id": null,
     "timeouts": null,
     "to_port": 53,
     "type": "egress"
    },
    "before_sensitive": {
     "prefix_list_ids": []
    }
   },
   "index": "egress_self_coredns_udp",
   "mode": "managed",
   "module_address": "module.eks",
   "name": "node",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_security_group_rule"
  },
  {
   "address": "module.eks.aws_security_group_rule.node[\"ingress_cluster_443\"]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "cidr_blocks": null,
     "description": "Cluster API to node groups",
     "from_port": 443,
     "id": "sgrule-604730142",
     "ipv6_cidr_blocks": null,
     "prefix_list_ids": [],
     "protocol": "tcp",
     "security_group_id": "sg-02107c0d526390e0b",
     "security_group_rule_id": "sgr-045c4909d5c4a9712",
     "self": false,
     "source_security_group_id": "sg-0d4c3ed613f24cfac",
     "timeouts": null,
     "to_port": 443,
     "type": "ingress"
    },
    "after_sensitive": {
     "prefix_list_ids": []
    },
    "after_unknown": {},
    "before": {
     "cidr_blocks": null,
     "description": "Cluster API to node groups",
     "from_port": 443,
     "id": "sgrule-604730142",
     "ipv6_cidr_blocks": null,
     "prefix_list_ids": [],
     "protocol": "tcp",
     "security_group_id": "sg-02107c0d526390e0b",
     "security_group_rule_id": "sgr-045c4909d5c4a9712",
     "self": false,
     "source_security_group_id": "sg-0d4c3ed613f24cfac",
     "timeouts": null,
     "to_port": 443,
     "type": "ingress"
    },
    "before_sensitive": {
     "prefix_list_ids": []
    }
   },
   "index": "ingress_cluster_443",
   "mode": "managed",
   "module_address": "module.eks",
   "name": "node",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_security_group_rule"
  },
  {
   "address": "module.eks.aws_security_group_rule.node[\"ingress_cluster_kubelet\"]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "cidr_blocks": null,
     "description": "Cluster API to node kubelets",
     "from_port": 10250,
     "id": "sgrule-391717233",
     "ipv6_cidr_blocks": null,
     "prefix_list_ids": [],
     "protocol": "tcp",
     "security_group_id": "sg-02107c0d526390e0b",
     "security_group_rule_id": "sgr-0caf6fe360383a60c",
     "self": false,
     "source_security_group_id": "sg-0d4c3ed613f24cfac",
     "timeouts": null,
     "to_port": 10250,
     "type": "ingress"
    },
    "after_sensitive": {
     "prefix_list_ids": []
    },
    "after_unknown": {},
    "before": {
     "cidr_blocks": null,
     "description": "Cluster API to node kubelets",
     "from_port": 10250,
     "id": "sgrule-391717233",
     "ipv6_cidr_blocks": null,
     "prefix_list_ids": [],
     "protocol": "tcp",
     "security_group_id": "sg-02107c0d526390e0b",
     "security_group_rule_id": "sgr-0caf6fe360383a60c",
     "self": false,
     "source_security_group_id": "sg-0d4c3ed613f24cfac",
     "timeouts": null,
     "to_port": 10250,
     "type": "ingress"
    },
    "before_sensitive": {
     "prefix_list_ids": []
    }
   },
   "index": "ingress_cluster_kubelet",
   "mode": "managed",
   "module_address": "module.eks",
   "name": "node",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_security_group_rule"
  },
  {
   "address": "module.eks.aws_security_group_rule.node[\"ingress_self_coredns_tcp\"]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "cidr_blocks": null,
     "description": "Node to node CoreDNS",
     "from_port": 53,
     "id": "sgrule-2202922520",
     "ipv6_cidr_blocks": null,
     "prefix_list_ids": [],
     "protocol": "tcp",
     "security_group_id": "sg-02107c0d526390e0b",
     "security_group_rule_id": "sgr-0a278e2564f089a44",
     "self": true,
     "source_security_group_id": null,
     "timeouts": null,
     "to_port": 53,
     "type": "ingress"
    },
    "after_sensitive": {
     "prefix_list_ids": []
    },
    "after_unknown": {},
    "before": {
     "cidr_blocks": null,
     "description": "Node to node CoreDNS",
     "from_port": 53,
     "id": "sgrule-2202922520",
     "ipv6_cidr_blocks": null,
     "prefix_list_ids": [],
     "protocol": "tcp",
     "security_group_id": "sg-02107c0d526390e0b",
     "security_group_rule_id": "sgr-0a278e2564f089a44",
     "self": true,
     "source_security_group_id": null,
     "timeouts": null,
     "to_port": 53,
     "type": "ingress"
    },
    "before_sensitive": {
     "prefix_list_ids": []
    }
   },
   "index": "ingress_self_coredns_tcp",
   "mode": "managed",
   "module_address": "module.eks",
   "name": "node",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_security_group_rule"
  },
  {
   "address": "module.eks.aws_security_group_rule.node[\"ingress_self_coredns_udp\"]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "cidr_blocks": null,
     "description": "Node to node CoreDNS",
     "from_port": 53,
     "id": "sgrule-655511031",
     "ipv6_cidr_blocks": null,
     "prefix_list_ids": [],
     "protocol": "udp",
     "security_group_id": "sg-02107c0d526390e0b",
     "security_group_rule_id": "sgr-07cbcf8eb15706eea",
     "self": true,
     "source_security_group_id": null,
     "timeouts": null,
     "to_port": 53,
     "type": "ingress"
    },
    "after_sensitive": {
     "prefix_list_ids": []
    },
    "after_unknown": {},
    "before": {
     "cidr_blocks": null,
     "description": "Node to node CoreDNS",
     "from_port": 53,
     "id": "sgrule-655511031",
     "ipv6_cidr_blocks": null,
     "prefix_list_ids": [],
     "protocol": "udp",
     "security_group_id": "sg-02107c0d526390e0b",
     "security_group_rule_id": "sgr-07cbcf8eb15706eea",
     "self": true,
     "source_security_group_id": null,
     "timeouts": null,
     "to_port": 53,
     "type": "ingress"
    },
    "before_sensitive": {
     "prefix_list_ids": []
    }
   },
   "index": "ingress_self_coredns_udp",
   "mode": "managed",
   "module_address": "module.eks",
   "name": "node",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_security_group_rule"
  },
  {
   "action_reason": "read_because_dependency_pending",
   "address": "module.eks-kubeconfig.data.aws_eks_cluster.this",
   "change": {
    "actions": [
     "read"
    ],
    "after": {
     "name": "aisight_demo-eks"
    },
    "after_sensitive": {
     "certificate_authority": [],
     "enabled_cluster_log_types": [],
     "identity": [],
     "kubernetes_network_config": [],
     "outpost_config": [],
     "tags": {},
     "vpc_config": []
    },
    "after_unknown": {
     "arn": true,
     "certificate_authority": true,
     "cluster_id": true,
     "created_at": true,
     "enabled_cluster_log_types": true,
     "endpoint": true,
     "id": true,
     "identity": true,
     "kubernetes_network_config": true,
     "outpost_config": true,
     "platform_version": true,
     "role_arn": true,
     "status": true,
     "tags": true,
     "version": true,
     "vpc_config": true
    },
    "before": null,
    "before_sensitive": false
   },
   "mode": "data",
   "module_address": "module.eks-kubeconfig",
   "name": "this",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_eks_cluster"
  },
  {
   "action_reason": "read_because_dependency_pending",
   "address": "module.eks-kubeconfig.data.aws_eks_cluster_auth.ephemeral",
   "change": {
    "actions": [
     "read"
    ],
    "after": {
     "name": "aisight_demo-eks"
    },
    "after_sensitive": {
     "token": true
    },
    "after_unknown": {
     "id": true,
     "token": true
    },
    "before": null,
    "before_sensitive": false
   },
   "mode": "data",
   "module_address": "module.eks-kubeconfig",
   "name": "ephemeral",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_eks_cluster_auth"
  },
  {
   "address": "module.vpc.aws_eip.nat[0]",
   "change": {
    "actions": [
     "create"
    ],
    "after": {
     "address": null,
     "associate_with_private_ip": null,
     "customer_owned_ipv4_pool": null,
     "tags": {
      "Name": "k8s-vpc-eu-central-1a"
     },
     "tags_all": {
      "Name": "k8s-vpc-eu-central-1a"
     },
     "timeouts": null,
     "vpc": true
    },
    "after_sensitive": {
     "tags": {},
     "tags_all": {}
    },
    "after_unknown": {
     "allocation_id": true,
     "association_id": true,
     "carrier_ip": true,
     "customer_owned_ip": true,
     "domain": true,
     "id": true,
     "instance": true,
     "network_border_group": true,
     "network_interface": true,
     "private_dns": true,
     "private_ip": true,
     "public_dns": true,
     "public_ip": true,
     "public_ipv4_pool": true,
     "tags": {},
     "tags_all": {}
    },
    "before": null,
    "before_sensitive": false
   },
   "index": 0,
   "mode": "managed",
   "module_address": "module.vpc",
   "name": "nat",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_eip"
  },
  {
   "address": "module.vpc.aws_internet_gateway.this[0]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "arn": "arn:aws:ec2:eu-central-1:435357319394:internet-gateway/igw-050d3a4489af24e21",
     "id": "igw-050d3a4489af24e21",
     "owner_id": "435357319394",
     "tags": {
      "Name": "k8s-vpc"
     },
     "tags_all": {
      "Name": "k8s-vpc"
     },
     "timeouts": null,
     "vpc_id": "vpc-020baab04492a8145"
    },
    "after_sensitive": {
     "tags": {},
     "tags_all": {}
    },
    "after_unknown": {},
    "before": {
     "arn": "arn:aws:ec2:eu-central-1:435357319394:internet-gateway/igw-050d3a4489af24e21",
     "id": "igw-050d3a4489af24e21",
     "owner_id": "435357319394",
     "tags": {
      "Name": "k8s-vpc"
     },
     "tags_all": {
      "Name": "k8s-vpc"
     },
     "timeouts": null,
     "vpc_id": "vpc-020baab04492a8145"
    },
    "before_sensitive": {
     "tags": {},
     "tags_all": {}
    }
   },
   "index": 0,
   "mode": "managed",
   "module_address": "module.vpc",
   "name": "this",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_internet_gateway"
  },
  {
   "address": "module.vpc.aws_nat_gateway.this[0]",
   "change": {
    "actions": [
     "create"
    ],
    "after": {
     "connectivity_type": "public",
     "subnet_id": "subnet-0e59f78cf02cebca8",
     "tags": {
      "Name": "k8s-vpc-eu-central-1a"
     },
     "tags_all": {
      "Name": "k8s-vpc-eu-central-1a"
     }
    },
    "after_sensitive": {
     "tags": {},
     "tags_all": {}
    },
    "after_unknown": {
     "allocation_id": true,
     "id": true,
     "network_interface_id": true,
     "private_ip": true,
     "public_ip": true,
     "tags": {},
     "tags_all": {}
    },
    "before": null,
    "before_sensitive": false
   },
   "index": 0,
   "mode": "managed",
   "module_address": "module.vpc",
   "name": "this",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_nat_gateway"
  },
  {
   "address": "module.vpc.aws_route.private_nat_gateway[0]",
   "change": {
    "actions": [
     "create"
    ],
    "after": {
     "carrier_gateway_id": null,
     "core_network_arn": null,
     "destination_cidr_block": "0.0.0.0/0",
     "destination_ipv6_cidr_block": null,
     "destination_prefix_list_id": null,
     "egress_only_gateway_id": null,
     "gateway_id": null,
     "local_gateway_id": null,
     "route_table_id": "rtb-0303078514c1e5643",
     "timeouts": {
      "create": "5m",
      "delete": null,
      "update": null
     },
     "transit_gateway_id": null,
     "vpc_endpoint_id": null,
     "vpc_peering_connection_id": null
    },
    "after_sensitive": {
     "timeouts": {}
    },
    "after_unknown": {
     "id": true,
     "instance_id": true,
     "instance_owner_id": true,
     "nat_gateway_id": true,
     "network_interface_id": true,
     "origin": true,
     "state": true,
     "timeouts": {}
    },
    "before": null,
    "before_sensitive": false
   },
   "index": 0,
   "mode": "managed",
   "module_address": "module.vpc",
   "name": "private_nat_gateway",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_route"
  },
  {
   "address": "module.vpc.aws_route.public_internet_gateway[0]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "carrier_gateway_id": "",
     "core_network_arn": "",
     "destination_cidr_block": "0.0.0.0/0",
     "destination_ipv6_cidr_block": "",
     "destination_prefix_list_id": "",
     "egress_only_gateway_id": "",
     "gateway_id": "igw-050d3a4489af24e21",
     "id": "r-rtb-045b86070fe04be5d1080289494",
     "instance_id": "",
     "instance_owner_id": "",
     "local_gateway_id": "",
     "nat_gateway_id": "",
     "network_interface_id": "",
     "origin": "CreateRoute",
     "route_table_id": "rtb-045b86070fe04be5d",
     "state": "active",
     "timeouts": {
      "create": "5m",
      "delete": null,
      "update": null
     },
     "transit_gateway_id": "",
     "vpc_endpoint_id": "",
     "vpc_peering_connection_id": ""
    },
    "after_sensitive": {
     "timeouts": {}
    },
    "after_unknown": {},
    "before": {
     "carrier_gateway_id": "",
     "core_network_arn": "",
     "destination_cidr_block": "0.0.0.0/0",
     "destination_ipv6_cidr_block": "",
     "destination_prefix_list_id": "",
     "egress_only_gateway_id": "",
     "gateway_id": "igw-050d3a4489af24e21",
     "id": "r-rtb-045b86070fe04be5d1080289494",
     "instance_id": "",
     "instance_owner_id": "",
     "local_gateway_id": "",
     "nat_gateway_id": "",
     "network_interface_id": "",
     "origin": "CreateRoute",
     "route_table_id": "rtb-045b86070fe04be5d",
     "state": "active",
     "timeouts": {
      "create": "5m",
      "delete": null,
      "update": null
     },
     "transit_gateway_id": "",
     "vpc_endpoint_id": "",
     "vpc_peering_connection_id": ""
    },
    "before_sensitive": {
     "timeouts": {}
    }
   },
   "index": 0,
   "mode": "managed",
   "module_address": "module.vpc",
   "name": "public_internet_gateway",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_route"
  },
  {
   "address": "module.vpc.aws_route_table.private[0]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "arn": "arn:aws:ec2:eu-central-1:435357319394:route-table/rtb-0303078514c1e5643",
     "id": "rtb-0303078514c1e5643",
     "owner_id": "435357319394",
     "propagating_vgws": [],
     "route": [],
     "tags": {
      "Name": "k8s-vpc-private"
     },
     "tags_all": {
      "Name": "k8s-vpc-private"
     },
     "timeouts": null,
     "vpc_id": "vpc-020baab04492a8145"
    },
    "after_sensitive": {
     "propagating_vgws": [],
     "route": [],
     "tags": {},
     "tags_all": {}
    },
    "after_unknown": {},
    "before": {
     "arn": "arn:aws:ec2:eu-central-1:435357319394:route-table/rtb-0303078514c1e5643",
     "id": "rtb-0303078514c1e5643",
     "owner_id": "435357319394",
     "propagating_vgws": [],
     "route": [],
     "tags": {
      "Name": "k8s-vpc-private"
     },
     "tags_all": {
      "Name": "k8s-vpc-private"
     },
     "timeouts": null,
     "vpc_id": "vpc-020baab04492a8145"
    },
    "before_sensitive": {
     "propagating_vgws": [],
     "route": [],
     "tags": {},
     "tags_all": {}
    }
   },
   "index": 0,
   "mode": "managed",
   "module_address": "module.vpc",
   "name": "private",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_route_table"
  },
  {
   "address": "module.vpc.aws_route_table.public[0]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "arn": "arn:aws:ec2:eu-central-1:435357319394:route-table/rtb-045b86070fe04be5d",
     "id": "rtb-045b86070fe04be5d",
     "owner_id": "435357319394",
     "propagating_vgws": [],
     "route": [
      {
       "carrier_gateway_id": "",
       "cidr_block": "0.0.0.0/0",
       "core_network_arn": "",
       "destination_prefix_list_id": "",
       "egress_only_gateway_id": "",
       "gateway_id": "igw-050d3a4489af24e21",
       "instance_id": "",
       "ipv6_cidr_block": "",
       "local_gateway_id": "",
       "nat_gateway_id": "",
       "network_interface_id": "",
       "transit_gateway_id": "",
       "vpc_endpoint_id": "",
       "vpc_peering_connection_id": ""
      }
     ],
     "tags": {
      "Name": "k8s-vpc-public"
     },
     "tags_all": {
      "Name": "k8s-vpc-public"
     },
     "timeouts": null,
     "vpc_id": "vpc-020baab04492a8145"
    },
    "after_sensitive": {
     "propagating_vgws": [],
     "route": [
      {}
     ],
     "tags": {},
     "tags_all": {}
    },
    "after_unknown": {},
    "before": {
     "arn": "arn:aws:ec2:eu-central-1:435357319394:route-table/rtb-045b86070fe04be5d",
     "id": "rtb-045b86070fe04be5d",
     "owner_id": "435357319394",
     "propagating_vgws": [],
     "route": [
      {
       "carrier_gateway_id": "",
       "cidr_block": "0.0.0.0/0",
       "core_network_arn": "",
       "destination_prefix_list_id": "",
       "egress_only_gateway_id": "",
       "gateway_id": "igw-050d3a4489af24e21",
       "instance_id": "",
       "ipv6_cidr_block": "",
       "local_gateway_id": "",
       "nat_gateway_id": "",
       "network_interface_id": "",
       "transit_gateway_id": "",
       "vpc_endpoint_id": "",
       "vpc_peering_connection_id": ""
      }
     ],
     "tags": {
      "Name": "k8s-vpc-public"
     },
     "tags_all": {
      "Name": "k8s-vpc-public"
     },
     "timeouts": null,
     "vpc_id": "vpc-020baab04492a8145"
    },
    "before_sensitive": {
     "propagating_vgws": [],
     "route": [
      {}
     ],
     "tags": {},
     "tags_all": {}
    }
   },
   "index": 0,
   "mode": "managed",
   "module_address": "module.vpc",
   "name": "public",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_route_table"
  },
  {
   "address": "module.vpc.aws_route_table_association.private[0]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "gateway_id": "",
     "id": "rtbassoc-0e76cc5e0bb4ff6dc",
     "route_table_id": "rtb-0303078514c1e5643",
     "subnet_id": "subnet-04064b4652b88ff67"
    },
    "after_sensitive": {},
    "after_unknown": {},
    "before": {
     "gateway_id": "",
     "id": "rtbassoc-0e76cc5e0bb4ff6dc",
     "route_table_id": "rtb-0303078514c1e5643",
     "subnet_id": "subnet-04064b4652b88ff67"
    },
    "before_sensitive": {}
   },
   "index": 0,
   "mode": "managed",
   "module_address": "module.vpc",
   "name": "private",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_route_table_association"
  },
  {
   "address": "module.vpc.aws_route_table_association.private[1]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "gateway_id": "",
     "id": "rtbassoc-0e969d8cbbce16f86",
     "route_table_id": "rtb-0303078514c1e5643",
     "subnet_id": "subnet-0e8a89850f69f9a37"
    },
    "after_sensitive": {},
    "after_unknown": {},
    "before": {
     "gateway_id": "",
     "id": "rtbassoc-0e969d8cbbce16f86",
     "route_table_id": "rtb-0303078514c1e5643",
     "subnet_id": "subnet-0e8a89850f69f9a37"
    },
    "before_sensitive": {}
   },
   "index": 1,
   "mode": "managed",
   "module_address": "module.vpc",
   "name": "private",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_route_table_association"
  },
  {
   "address": "module.vpc.aws_route_table_association.private[2]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "gateway_id": "",
     "id": "rtbassoc-01e984c3f2e7ccae4",
     "route_table_id": "rtb-0303078514c1e5643",
     "subnet_id": "subnet-020599695ef4412bc"
    },
    "after_sensitive": {},
    "after_unknown": {},
    "before": {
     "gateway_id": "",
     "id": "rtbassoc-01e984c3f2e7ccae4",
     "route_table_id": "rtb-0303078514c1e5643",
     "subnet_id": "subnet-020599695ef4412bc"
    },
    "before_sensitive": {}
   },
   "index": 2,
   "mode": "managed",
   "module_address": "module.vpc",
   "name": "private",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_route_table_association"
  },
  {
   "address": "module.vpc.aws_route_table_association.public[0]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "gateway_id": "",
     "id": "rtbassoc-06e14a1a5b0c8f9e4",
     "route_table_id": "rtb-045b86070fe04be5d",
     "subnet_id": "subnet-0e59f78cf02cebca8"
    },
    "after_sensitive": {},
    "after_unknown": {},
    "before": {
     "gateway_id": "",
     "id": "rtbassoc-06e14a1a5b0c8f9e4",
     "route_table_id": "rtb-045b86070fe04be5d",
     "subnet_id": "subnet-0e59f78cf02cebca8"
    },
    "before_sensitive": {}
   },
   "index": 0,
   "mode": "managed",
   "module_address": "module.vpc",
   "name": "public",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_route_table_association"
  },
  {
   "address": "module.vpc.aws_route_table_association.public[1]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "gateway_id": "",
     "id": "rtbassoc-0bb160880821776b0",
     "route_table_id": "rtb-045b86070fe04be5d",
     "subnet_id": "subnet-014766609e87b6ede"
    },
    "after_sensitive": {},
    "after_unknown": {},
    "before": {
     "gateway_id": "",
     "id": "rtbassoc-0bb160880821776b0",
     "route_table_id": "rtb-045b86070fe04be5d",
     "subnet_id": "subnet-014766609e87b6ede"
    },
    "before_sensitive": {}
   },
   "index": 1,
   "mode": "managed",
   "module_address": "module.vpc",
   "name": "public",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_route_table_association"
  },
  {
   "address": "module.vpc.aws_route_table_association.public[2]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "gateway_id": "",
     "id": "rtbassoc-058c7f0ddae9eef77",
     "route_table_id": "rtb-045b86070fe04be5d",
     "subnet_id": "subnet-0d75c3e4a7d943a01"
    },
    "after_sensitive": {},
    "after_unknown": {},
    "before": {
     "gateway_id": "",
     "id": "rtbassoc-058c7f0ddae9eef77",
     "route_table_id": "rtb-045b86070fe04be5d",
     "subnet_id": "subnet-0d75c3e4a7d943a01"
    },
    "before_sensitive": {}
   },
   "index": 2,
   "mode": "managed",
   "module_address": "module.vpc",
   "name": "public",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_route_table_association"
  },
  {
   "address": "module.vpc.aws_subnet.private[0]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "arn": "arn:aws:ec2:eu-central-1:435357319394:subnet/subnet-04064b4652b88ff67",
     "assign_ipv6_address_on_creation": false,
     "availability_zone": "eu-central-1a",
     "availability_zone_id": "euc1-az2",
     "cidr_block": "172.16.1.0/24",
     "customer_owned_ipv4_pool": "",
     "enable_dns64": false,
     "enable_resource_name_dns_a_record_on_launch": false,
     "enable_resource_name_dns_aaaa_record_on_launch": false,
     "id": "subnet-04064b4652b88ff67",
     "ipv6_cidr_block": "",
     "ipv6_cidr_block_association_id": "",
     "ipv6_native": false,
     "map_customer_owned_ip_on_launch": false,
     "map_public_ip_on_launch": false,
     "outpost_arn": "",
     "owner_id": "435357319394",
     "private_dns_hostname_type_on_launch": "ip-name",
     "tags": {
      "Name": "k8s-vpc-private-eu-central-1a",
      "kubernetes.io/cluster/aisight_demo-eks": "shared",
      "kubernetes.io/role/internal-elb": "1"
     },
     "tags_all": {
      "Name": "k8s-vpc-private-eu-central-1a",
      "kubernetes.io/cluster/aisight_demo-eks": "shared",
      "kubernetes.io/role/internal-elb": "1"
     },
     "timeouts": null,
     "vpc_id": "vpc-020baab04492a8145"
    },
    "after_sensitive": {
     "tags": {},
     "tags_all": {}
    },
    "after_unknown": {},
    "before": {
     "arn": "arn:aws:ec2:eu-central-1:435357319394:subnet/subnet-04064b4652b88ff67",
     "assign_ipv6_address_on_creation": false,
     "availability_zone": "eu-central-1a",
     "availability_zone_id": "euc1-az2",
     "cidr_block": "172.16.1.0/24",
     "customer_owned_ipv4_pool": "",
     "enable_dns64": false,
     "enable_resource_name_dns_a_record_on_launch": false,
     "enable_resource_name_dns_aaaa_record_on_launch": false,
     "id": "subnet-04064b4652b88ff67",
     "ipv6_cidr_block": "",
     "ipv6_cidr_block_association_id": "",
     "ipv6_native": false,
     "map_customer_owned_ip_on_launch": false,
     "map_public_ip_on_launch": false,
     "outpost_arn": "",
     "owner_id": "435357319394",
     "private_dns_hostname_type_on_launch": "ip-name",
     "tags": {
      "Name": "k8s-vpc-private-eu-central-1a",
      "kubernetes.io/cluster/aisight_demo-eks": "shared",
      "kubernetes.io/role/internal-elb": "1"
     },
     "tags_all": {
      "Name": "k8s-vpc-private-eu-central-1a",
      "kubernetes.io/cluster/aisight_demo-eks": "shared",
      "kubernetes.io/role/internal-elb": "1"
     },
     "timeouts": null,
     "vpc_id": "vpc-020baab04492a8145"
    },
    "before_sensitive": {
     "tags": {},
     "tags_all": {}
    }
   },
   "index": 0,
   "mode": "managed",
   "module_address": "module.vpc",
   "name": "private",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_subnet"
  },
  {
   "address": "module.vpc.aws_subnet.private[1]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "arn": "arn:aws:ec2:eu-central-1:435357319394:subnet/subnet-0e8a89850f69f9a37",
     "assign_ipv6_address_on_creation": false,
     "availability_zone": "eu-central-1b",
     "availability_zone_id": "euc1-az3",
     "cidr_block": "172.16.2.0/24",
     "customer_owned_ipv4_pool": "",
     "enable_dns64": false,
     "enable_resource_name_dns_a_record_on_launch": false,
     "enable_resource_name_dns_aaaa_record_on_launch": false,
     "id": "subnet-0e8a89850f69f9a37",
     "ipv6_cidr_block": "",
     "ipv6_cidr_block_association_id": "",
     "ipv6_native": false,
     "map_customer_owned_ip_on_launch": false,
     "map_public_ip_on_launch": false,
     "outpost_arn": "",
     "owner_id": "435357319394",
     "private_dns_hostname_type_on_launch": "ip-name",
     "tags": {
      "Name": "k8s-vpc-private-eu-central-1b",
      "kubernetes.io/cluster/aisight_demo-eks": "shared",
      "kubernetes.io/role/internal-elb": "1"
     },
     "tags_all": {
      "Name": "k8s-vpc-private-eu-central-1b",
      "kubernetes.io/cluster/aisight_demo-eks": "shared",
      "kubernetes.io/role/internal-elb": "1"
     },
     "timeouts": null,
     "vpc_id": "vpc-020baab04492a8145"
    },
    "after_sensitive": {
     "tags": {},
     "tags_all": {}
    },
    "after_unknown": {},
    "before": {
     "arn": "arn:aws:ec2:eu-central-1:435357319394:subnet/subnet-0e8a89850f69f9a37",
     "assign_ipv6_address_on_creation": false,
     "availability_zone": "eu-central-1b",
     "availability_zone_id": "euc1-az3",
     "cidr_block": "172.16.2.0/24",
     "customer_owned_ipv4_pool": "",
     "enable_dns64": false,
     "enable_resource_name_dns_a_record_on_launch": false,
     "enable_resource_name_dns_aaaa_record_on_launch": false,
     "id": "subnet-0e8a89850f69f9a37",
     "ipv6_cidr_block": "",
     "ipv6_cidr_block_association_id": "",
     "ipv6_native": false,
     "map_customer_owned_ip_on_launch": false,
     "map_public_ip_on_launch": false,
     "outpost_arn": "",
     "owner_id": "435357319394",
     "private_dns_hostname_type_on_launch": "ip-name",
     "tags": {
      "Name": "k8s-vpc-private-eu-central-1b",
      "kubernetes.io/cluster/aisight_demo-eks": "shared",
      "kubernetes.io/role/internal-elb": "1"
     },
     "tags_all": {
      "Name": "k8s-vpc-private-eu-central-1b",
      "kubernetes.io/cluster/aisight_demo-eks": "shared",
      "kubernetes.io/role/internal-elb": "1"
     },
     "timeouts": null,
     "vpc_id": "vpc-020baab04492a8145"
    },
    "before_sensitive": {
     "tags": {},
     "tags_all": {}
    }
   },
   "index": 1,
   "mode": "managed",
   "module_address": "module.vpc",
   "name": "private",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_subnet"
  },
  {
   "address": "module.vpc.aws_subnet.private[2]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "arn": "arn:aws:ec2:eu-central-1:435357319394:subnet/subnet-020599695ef4412bc",
     "assign_ipv6_address_on_creation": false,
     "availability_zone": "eu-central-1c",
     "availability_zone_id": "euc1-az1",
     "cidr_block": "172.16.3.0/24",
     "customer_owned_ipv4_pool": "",
     "enable_dns64": false,
     "enable_resource_name_dns_a_record_on_launch": false,
     "enable_resource_name_dns_aaaa_record_on_launch": false,
     "id": "subnet-020599695ef4412bc",
     "ipv6_cidr_block": "",
     "ipv6_cidr_block_association_id": "",
     "ipv6_native": false,
     "map_customer_owned_ip_on_launch": false,
     "map_public_ip_on_launch": false,
     "outpost_arn": "",
     "owner_id": "435357319394",
     "private_dns_hostname_type_on_launch": "ip-name",
     "tags": {
      "Name": "k8s-vpc-private-eu-central-1c",
      "kubernetes.io/cluster/aisight_demo-eks": "shared",
      "kubernetes.io/role/internal-elb": "1"
     },
     "tags_all": {
      "Name": "k8s-vpc-private-eu-central-1c",
      "kubernetes.io/cluster/aisight_demo-eks": "shared",
      "kubernetes.io/role/internal-elb": "1"
     },
     "timeouts": null,
     "vpc_id": "vpc-020baab04492a8145"
    },
    "after_sensitive": {
     "tags": {},
     "tags_all": {}
    },
    "after_unknown": {},
    "before": {
     "arn": "arn:aws:ec2:eu-central-1:435357319394:subnet/subnet-020599695ef4412bc",
     "assign_ipv6_address_on_creation": false,
     "availability_zone": "eu-central-1c",
     "availability_zone_id": "euc1-az1",
     "cidr_block": "172.16.3.0/24",
     "customer_owned_ipv4_pool": "",
     "enable_dns64": false,
     "enable_resource_name_dns_a_record_on_launch": false,
     "enable_resource_name_dns_aaaa_record_on_launch": false,
     "id": "subnet-020599695ef4412bc",
     "ipv6_cidr_block": "",
     "ipv6_cidr_block_association_id": "",
     "ipv6_native": false,
     "map_customer_owned_ip_on_launch": false,
     "map_public_ip_on_launch": false,
     "outpost_arn": "",
     "owner_id": "435357319394",
     "private_dns_hostname_type_on_launch": "ip-name",
     "tags": {
      "Name": "k8s-vpc-private-eu-central-1c",
      "kubernetes.io/cluster/aisight_demo-eks": "shared",
      "kubernetes.io/role/internal-elb": "1"
     },
     "tags_all": {
      "Name": "k8s-vpc-private-eu-central-1c",
      "kubernetes.io/cluster/aisight_demo-eks": "shared",
      "kubernetes.io/role/internal-elb": "1"
     },
     "timeouts": null,
     "vpc_id": "vpc-020baab04492a8145"
    },
    "before_sensitive": {
     "tags": {},
     "tags_all": {}
    }
   },
   "index": 2,
   "mode": "managed",
   "module_address": "module.vpc",
   "name": "private",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_subnet"
  },
  {
   "address": "module.vpc.aws_subnet.public[0]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "arn": "arn:aws:ec2:eu-central-1:435357319394:subnet/subnet-0e59f78cf02cebca8",
     "assign_ipv6_address_on_creation": false,
     "availability_zone": "eu-central-1a",
     "availability_zone_id": "euc1-az2",
     "cidr_block": "172.16.4.0/24",
     "customer_owned_ipv4_pool": "",
     "enable_dns64": false,
     "enable_resource_name_dns_a_record_on_launch": false,
     "enable_resource_name_dns_aaaa_record_on_launch": false,
     "id": "subnet-0e59f78cf02cebca8",
     "ipv6_cidr_block": "",
     "ipv6_cidr_block_association_id": "",
     "ipv6_native": false,
     "map_customer_owned_ip_on_launch": false,
     "map_public_ip_on_launch": true,
     "outpost_arn": "",
     "owner_id": "435357319394",
     "private_dns_hostname_type_on_launch": "ip-name",
     "tags": {
      "Name": "k8s-vpc-public-eu-central-1a",
      "kubernetes.io/cluster/aisight_demo-eks": "shared",
      "kubernetes.io/role/elb": "1"
     },
     "tags_all": {
      "Name": "k8s-vpc-public-eu-central-1a",
      "kubernetes.io/cluster/aisight_demo-eks": "shared",
      "kubernetes.io/role/elb": "1"
     },
     "timeouts": null,
     "vpc_id": "vpc-020baab04492a8145"
    },
    "after_sensitive": {
     "tags": {},
     "tags_all": {}
    },
    "after_unknown": {},
    "before": {
     "arn": "arn:aws:ec2:eu-central-1:435357319394:subnet/subnet-0e59f78cf02cebca8",
     "assign_ipv6_address_on_creation": false,
     "availability_zone": "eu-central-1a",
     "availability_zone_id": "euc1-az2",
     "cidr_block": "172.16.4.0/24",
     "customer_owned_ipv4_pool": "",
     "enable_dns64": false,
     "enable_resource_name_dns_a_record_on_launch": false,
     "enable_resource_name_dns_aaaa_record_on_launch": false,
     "id": "subnet-0e59f78cf02cebca8",
     "ipv6_cidr_block": "",
     "ipv6_cidr_block_association_id": "",
     "ipv6_native": false,
     "map_customer_owned_ip_on_launch": false,
     "map_public_ip_on_launch": true,
     "outpost_arn": "",
     "owner_id": "435357319394",
     "private_dns_hostname_type_on_launch": "ip-name",
     "tags": {
      "Name": "k8s-vpc-public-eu-central-1a",
      "kubernetes.io/cluster/aisight_demo-eks": "shared",
      "kubernetes.io/role/elb": "1"
     },
     "tags_all": {
      "Name": "k8s-vpc-public-eu-central-1a",
      "kubernetes.io/cluster/aisight_demo-eks": "shared",
      "kubernetes.io/role/elb": "1"
     },
     "timeouts": null,
     "vpc_id": "vpc-020baab04492a8145"
    },
    "before_sensitive": {
     "tags": {},
     "tags_all": {}
    }
   },
   "index": 0,
   "mode": "managed",
   "module_address": "module.vpc",
   "name": "public",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_subnet"
  },
  {
   "address": "module.vpc.aws_subnet.public[1]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "arn": "arn:aws:ec2:eu-central-1:435357319394:subnet/subnet-014766609e87b6ede",
     "assign_ipv6_address_on_creation": false,
     "availability_zone": "eu-central-1b",
     "availability_zone_id": "euc1-az3",
     "cidr_block": "172.16.5.0/24",
     "customer_owned_ipv4_pool": "",
     "enable_dns64": false,
     "enable_resource_name_dns_a_record_on_launch": false,
     "enable_resource_name_dns_aaaa_record_on_launch": false,
     "id": "subnet-014766609e87b6ede",
     "ipv6_cidr_block": "",
     "ipv6_cidr_block_association_id": "",
     "ipv6_native": false,
     "map_customer_owned_ip_on_launch": false,
     "map_public_ip_on_launch": true,
     "outpost_arn": "",
     "owner_id": "435357319394",
     "private_dns_hostname_type_on_launch": "ip-name",
     "tags": {
      "Name": "k8s-vpc-public-eu-central-1b",
      "kubernetes.io/cluster/aisight_demo-eks": "shared",
      "kubernetes.io/role/elb": "1"
     },
     "tags_all": {
      "Name": "k8s-vpc-public-eu-central-1b",
      "kubernetes.io/cluster/aisight_demo-eks": "shared",
      "kubernetes.io/role/elb": "1"
     },
     "timeouts": null,
     "vpc_id": "vpc-020baab04492a8145"
    },
    "after_sensitive": {
     "tags": {},
     "tags_all": {}
    },
    "after_unknown": {},
    "before": {
     "arn": "arn:aws:ec2:eu-central-1:435357319394:subnet/subnet-014766609e87b6ede",
     "assign_ipv6_address_on_creation": false,
     "availability_zone": "eu-central-1b",
     "availability_zone_id": "euc1-az3",
     "cidr_block": "172.16.5.0/24",
     "customer_owned_ipv4_pool": "",
     "enable_dns64": false,
     "enable_resource_name_dns_a_record_on_launch": false,
     "enable_resource_name_dns_aaaa_record_on_launch": false,
     "id": "subnet-014766609e87b6ede",
     "ipv6_cidr_block": "",
     "ipv6_cidr_block_association_id": "",
     "ipv6_native": false,
     "map_customer_owned_ip_on_launch": false,
     "map_public_ip_on_launch": true,
     "outpost_arn": "",
     "owner_id": "435357319394",
     "private_dns_hostname_type_on_launch": "ip-name",
     "tags": {
      "Name": "k8s-vpc-public-eu-central-1b",
      "kubernetes.io/cluster/aisight_demo-eks": "shared",
      "kubernetes.io/role/elb": "1"
     },
     "tags_all": {
      "Name": "k8s-vpc-public-eu-central-1b",
      "kubernetes.io/cluster/aisight_demo-eks": "shared",
      "kubernetes.io/role/elb": "1"
     },
     "timeouts": null,
     "vpc_id": "vpc-020baab04492a8145"
    },
    "before_sensitive": {
     "tags": {},
     "tags_all": {}
    }
   },
   "index": 1,
   "mode": "managed",
   "module_address": "module.vpc",
   "name": "public",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_subnet"
  },
  {
   "address": "module.vpc.aws_subnet.public[2]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "arn": "arn:aws:ec2:eu-central-1:435357319394:subnet/subnet-0d75c3e4a7d943a01",
     "assign_ipv6_address_on_creation": false,
     "availability_zone": "eu-central-1c",
     "availability_zone_id": "euc1-az1",
     "cidr_block": "172.16.6.0/24",
     "customer_owned_ipv4_pool": "",
     "enable_dns64": false,
     "enable_resource_name_dns_a_record_on_launch": false,
     "enable_resource_name_dns_aaaa_record_on_launch": false,
     "id": "subnet-0d75c3e4a7d943a01",
     "ipv6_cidr_block": "",
     "ipv6_cidr_block_association_id": "",
     "ipv6_native": false,
     "map_customer_owned_ip_on_launch": false,
     "map_public_ip_on_launch": true,
     "outpost_arn": "",
     "owner_id": "435357319394",
     "private_dns_hostname_type_on_launch": "ip-name",
     "tags": {
      "Name": "k8s-vpc-public-eu-central-1c",
      "kubernetes.io/cluster/aisight_demo-eks": "shared",
      "kubernetes.io/role/elb": "1"
     },
     "tags_all": {
      "Name": "k8s-vpc-public-eu-central-1c",
      "kubernetes.io/cluster/aisight_demo-eks": "shared",
      "kubernetes.io/role/elb": "1"
     },
     "timeouts": null,
     "vpc_id": "vpc-020baab04492a8145"
    },
    "after_sensitive": {
     "tags": {},
     "tags_all": {}
    },
    "after_unknown": {},
    "before": {
     "arn": "arn:aws:ec2:eu-central-1:435357319394:subnet/subnet-0d75c3e4a7d943a01",
     "assign_ipv6_address_on_creation": false,
     "availability_zone": "eu-central-1c",
     "availability_zone_id": "euc1-az1",
     "cidr_block": "172.16.6.0/24",
     "customer_owned_ipv4_pool": "",
     "enable_dns64": false,
     "enable_resource_name_dns_a_record_on_launch": false,
     "enable_resource_name_dns_aaaa_record_on_launch": false,
     "id": "subnet-0d75c3e4a7d943a01",
     "ipv6_cidr_block": "",
     "ipv6_cidr_block_association_id": "",
     "ipv6_native": false,
     "map_customer_owned_ip_on_launch": false,
     "map_public_ip_on_launch": true,
     "outpost_arn": "",
     "owner_id": "435357319394",
     "private_dns_hostname_type_on_launch": "ip-name",
     "tags": {
      "Name": "k8s-vpc-public-eu-central-1c",
      "kubernetes.io/cluster/aisight_demo-eks": "shared",
      "kubernetes.io/role/elb": "1"
     },
     "tags_all": {
      "Name": "k8s-vpc-public-eu-central-1c",
      "kubernetes.io/cluster/aisight_demo-eks": "shared",
      "kubernetes.io/role/elb": "1"
     },
     "timeouts": null,
     "vpc_id": "vpc-020baab04492a8145"
    },
    "before_sensitive": {
     "tags": {},
     "tags_all": {}
    }
   },
   "index": 2,
   "mode": "managed",
   "module_address": "module.vpc",
   "name": "public",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_subnet"
  },
  {
   "address": "module.vpc.aws_vpc.this[0]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "arn": "arn:aws:ec2:eu-central-1:435357319394:vpc/vpc-020baab04492a8145",
     "assign_generated_ipv6_cidr_block": false,
     "cidr_block": "172.16.0.0/16",
     "default_network_acl_id": "acl-0280b1ada3a9dca5e",
     "default_route_table_id": "rtb-00a9f68d2a4a8eb02",
     "default_security_group_id": "sg-098e5c404719db484",
     "dhcp_options_id": "dopt-a0dd24ca",
     "enable_classiclink": false,
     "enable_classiclink_dns_support": false,
     "enable_dns_hostnames": true,
     "enable_dns_support": true,
     "enable_network_address_usage_metrics": false,
     "id": "vpc-020baab04492a8145",
     "instance_tenancy": "default",
     "ipv4_ipam_pool_id": null,
     "ipv4_netmask_length": null,
     "ipv6_association_id": "",
     "ipv6_cidr_block": "",
     "ipv6_cidr_block_network_border_group": "",
     "ipv6_ipam_pool_id": "",
     "ipv6_netmask_length": 0,
     "main_route_table_id": "rtb-00a9f68d2a4a8eb02",
     "owner_id": "435357319394",
     "tags": {
      "Name": "k8s-vpc"
     },
     "tags_all": {
      "Name": "k8s-vpc"
     }
    },
    "after_sensitive": {
     "tags": {},
     "tags_all": {}
    },
    "after_unknown": {},
    "before": {
     "arn": "arn:aws:ec2:eu-central-1:435357319394:vpc/vpc-020baab04492a8145",
     "assign_generated_ipv6_cidr_block": false,
     "cidr_block": "172.16.0.0/16",
     "default_network_acl_id": "acl-0280b1ada3a9dca5e",
     "default_route_table_id": "rtb-00a9f68d2a4a8eb02",
     "default_security_group_id": "sg-098e5c404719db484",
     "dhcp_options_id": "dopt-a0dd24ca",
     "enable_classiclink": false,
     "enable_classiclink_dns_support": false,
     "enable_dns_hostnames": true,
     "enable_dns_support": true,
     "enable_network_address_usage_metrics": false,
     "id": "vpc-020baab04492a8145",
     "instance_tenancy": "default",
     "ipv4_ipam_pool_id": null,
     "ipv4_netmask_length": null,
     "ipv6_association_id": "",
     "ipv6_cidr_block": "",
     "ipv6_cidr_block_network_border_group": "",
     "ipv6_ipam_pool_id": "",
     "ipv6_netmask_length": 0,
     "main_route_table_id": "rtb-00a9f68d2a4a8eb02",
     "owner_id": "435357319394",
     "tags": {
      "Name": "k8s-vpc"
     },
     "tags_all": {
      "Name": "k8s-vpc"
     }
    },
    "before_sensitive": {
     "tags": {},
     "tags_all": {}
    }
   },
   "index": 0,
   "mode": "managed",
   "module_address": "module.vpc",
   "name": "this",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_vpc"
  },
  {
   "action_reason": "replace_because_tainted",
   "address": "module.eks.module.eks_managed_node_group[\"first\"].aws_eks_node_group.this[0]",
   "change": {
    "actions": [
     "create",
     "delete"
    ],
    "after": {
     "cluster_name": "aisight_demo-eks",
     "force_update_version": null,
     "labels": null,
     "launch_template": [
      {
       "name": "first-2023031214530064240000000b",
       "version": "1"
      }
     ],
     "node_group_name_prefix": "first-",
     "node_role_arn": "arn:aws:iam::435357319394:role/first-eks-node-group-20230312144140331600000001",
     "remote_access": [],
     "scaling_config": [
      {
       "desired_size": 1,
       "max_size": 3,
       "min_size": 1
      }
     ],
     "subnet_ids": [
      "subnet-020599695ef4412bc",
      "subnet-04064b4652b88ff67",
      "subnet-0e8a89850f69f9a37"
     ],
     "tags": {
      "Name": "first"
     },
     "tags_all": {
      "Name": "first"
     },
     "taint": [],
     "timeouts": {
      "create": null,
      "delete": null,
      "update": null
     },
     "version": "1.25"
    },
    "after_sensitive": {
     "instance_types": [],
     "launch_template": [
      {}
     ],
     "remote_access": [],
     "resources": [],
     "scaling_config": [
      {}
     ],
     "subnet_ids": [
      false,
      false,
      false
     ],
     "tags": {},
     "tags_all": {},
     "taint": [],
     "timeouts": {},
     "update_config": []
    },
    "after_unknown": {
     "ami_type": true,
     "arn": true,
     "capacity_type": true,
     "disk_size": true,
     "id": true,
     "instance_types": true,
     "launch_template": [
      {
       "id": true
      }
     ],
     "node_group_name": true,
     "release_version": true,
     "remote_access": [],
     "resources": true,
     "scaling_config": [
      {}
     ],
     "status": true,
     "subnet_ids": [
      false,
      false,
      false
     ],
     "tags": {},
     "tags_all": {},
     "taint": [],
     "timeouts": {},
     "update_config": true
    },
    "before": {
     "ami_type": "AL2_x86_64",
     "arn": "arn:aws:eks:eu-central-1:435357319394:nodegroup/aisight_demo-eks/first-2023031214530091090000000d/74c36b27-c254-510c-b2a4-58d582864e7e",
     "capacity_type": "ON_DEMAND",
     "cluster_name": "aisight_demo-eks",
     "disk_size": 0,
     "force_update_version": null,
     "id": "aisight_demo-eks:first-2023031214530091090000000d",
     "instance_types": [
      "t3.medium"
     ],
     "labels": {},
     "launch_template": [
      {
       "id": "lt-0c10e58d773a0e666",
       "name": "first-2023031214530064240000000b",
       "version": "1"
      }
     ],
     "node_group_name": "first-2023031214530091090000000d",
     "node_group_name_prefix": "first-",
     "node_role_arn": "arn:aws:iam::435357319394:role/first-eks-node-group-20230312144140331600000001",
     "release_version": "1.25.6-20230304",
     "remote_access": [],
     "resources": [
      {
       "autoscaling_groups": [
        {
         "name": "eks-first-2023031214530091090000000d-74c36b27-c254-510c-b2a4-58d582864e7e"
        }
       ],
       "remote_access_security_group_id": ""
      }
     ],
     "scaling_config": [
      {
       "desired_size": 1,
       "max_size": 3,
       "min_size": 1
      }
     ],
     "status": "CREATE_FAILED",
     "subnet_ids": [
      "subnet-020599695ef4412bc",
      "subnet-04064b4652b88ff67",
      "subnet-0e8a89850f69f9a37"
     ],
     "tags": {
      "Name": "first"
     },
     "tags_all": {
      "Name": "first"
     },
     "taint": [],
     "timeouts": {
      "create": null,
      "delete": null,
      "update": null
     },
     "update_config": [
      {
       "max_unavailable": 1,
       "max_unavailable_percentage": 0
      }
     ],
     "version": "1.25"
    },
    "before_sensitive": {
     "instance_types": [
      false
     ],
     "labels": {},
     "launch_template": [
      {}
     ],
     "remote_access": [],
     "resources": [
      {
       "autoscaling_groups": [
        {}
       ]
      }
     ],
     "scaling_config": [
      {}
     ],
     "subnet_ids": [
      false,
      false,
      false
     ],
     "tags": {},
     "tags_all": {},
     "taint": [],
     "timeouts": {},
     "update_config": [
      {}
     ]
    }
   },
   "index": 0,
   "mode": "managed",
   "module_address": "module.eks.module.eks_managed_node_group[\"first\"]",
   "name": "this",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_eks_node_group"
  },
  {
   "address": "module.eks.module.eks_managed_node_group[\"first\"].aws_iam_role.this[0]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "arn": "arn:aws:iam::435357319394:role/first-eks-node-group-20230312144140331600000001",
     "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"},\"Sid\":\"EKSNodeAssumeRole\"}],\"Version\":\"2012-10-17\"}",
     "create_date": "2023-03-12T14:41:40Z",
     "description": "EKS managed node group IAM role",
     "force_detach_policies": true,
     "id": "first-eks-node-group-20230312144140331600000001",
     "inline_policy": [],
     "managed_policy_arns": [
      "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
      "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
      "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy"
     ],
     "max_session_duration": 3600,
     "name": "first-eks-node-group-20230312144140331600000001",
     "name_prefix": "first-eks-node-group-",
     "path": "/",
     "permissions_boundary": null,
     "tags": {},
     "tags_all": {},
     "unique_id": "AROAWKXKRQDRIFTXYHCBF"
    },
    "after_sensitive": {
     "inline_policy": [],
     "managed_policy_arns": [
      false,
      false,
      false
     ],
     "tags": {},
     "tags_all": {}
    },
    "after_unknown": {},
    "before": {
     "arn": "arn:aws:iam::435357319394:role/first-eks-node-group-20230312144140331600000001",
     "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"},\"Sid\":\"EKSNodeAssumeRole\"}],\"Version\":\"2012-10-17\"}",
     "create_date": "2023-03-12T14:41:40Z",
     "description": "EKS managed node group IAM role",
     "force_detach_policies": true,
     "id": "first-eks-node-group-20230312144140331600000001",
     "inline_policy": [],
     "managed_policy_arns": [
      "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
      "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
      "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy"
     ],
     "max_session_duration": 3600,
     "name": "first-eks-node-group-20230312144140331600000001",
     "name_prefix": "first-eks-node-group-",
     "path": "/",
     "permissions_boundary": null,
     "tags": {},
     "tags_all": {},
     "unique_id": "AROAWKXKRQDRIFTXYHCBF"
    },
    "before_sensitive": {
     "inline_policy": [],
     "managed_policy_arns": [
      false,
      false,
      false
     ],
     "tags": {},
     "tags_all": {}
    }
   },
   "index": 0,
   "mode": "managed",
   "module_address": "module.eks.module.eks_managed_node_group[\"first\"]",
   "name": "this",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_iam_role"
  },
  {
   "address": "module.eks.module.eks_managed_node_group[\"first\"].aws_iam_role_policy_attachment.this[\"arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly\"]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "id": "first-eks-node-group-20230312144140331600000001-20230312144141605400000003",
     "policy_arn": "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
     "role": "first-eks-node-group-20230312144140331600000001"
    },
    "after_sensitive": {},
    "after_unknown": {},
    "before": {
     "id": "first-eks-node-group-20230312144140331600000001-20230312144141605400000003",
     "policy_arn": "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
     "role": "first-eks-node-group-20230312144140331600000001"
    },
    "before_sensitive": {}
   },
   "index": "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
   "mode": "managed",
   "module_address": "module.eks.module.eks_managed_node_group[\"first\"]",
   "name": "this",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_iam_role_policy_attachment"
  },
  {
   "address": "module.eks.module.eks_managed_node_group[\"first\"].aws_iam_role_policy_attachment.this[\"arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy\"]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "id": "first-eks-node-group-20230312144140331600000001-20230312144141620900000004",
     "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
     "role": "first-eks-node-group-20230312144140331600000001"
    },
    "after_sensitive": {},
    "after_unknown": {},
    "before": {
     "id": "first-eks-node-group-20230312144140331600000001-20230312144141620900000004",
     "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
     "role": "first-eks-node-group-20230312144140331600000001"
    },
    "before_sensitive": {}
   },
   "index": "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
   "mode": "managed",
   "module_address": "module.eks.module.eks_managed_node_group[\"first\"]",
   "name": "this",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_iam_role_policy_attachment"
  },
  {
   "address": "module.eks.module.eks_managed_node_group[\"first\"].aws_iam_role_policy_attachment.this[\"arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy\"]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "id": "first-eks-node-group-20230312144140331600000001-20230312144141682900000005",
     "policy_arn": "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy",
     "role": "first-eks-node-group-20230312144140331600000001"
    },
    "after_sensitive": {},
    "after_unknown": {},
    "before": {
     "id": "first-eks-node-group-20230312144140331600000001-20230312144141682900000005",
     "policy_arn": "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy",
     "role": "first-eks-node-group-20230312144140331600000001"
    },
    "before_sensitive": {}
   },
   "index": "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy",
   "mode": "managed",
   "module_address": "module.eks.module.eks_managed_node_group[\"first\"]",
   "name": "this",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_iam_role_policy_attachment"
  },
  {
   "address": "module.eks.module.eks_managed_node_group[\"first\"].aws_launch_template.this[0]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "arn": "arn:aws:ec2:eu-central-1:435357319394:launch-template/lt-0c10e58d773a0e666",
     "block_device_mappings": [],
     "capacity_reservation_specification": [],
     "cpu_options": [],
     "credit_specification": [],
     "default_version": 1,
     "description": "Custom launch template for first EKS managed node group",
     "disable_api_stop": false,
     "disable_api_termination": false,
     "ebs_optimized": "",
     "elastic_gpu_specifications": [],
     "elastic_inference_accelerator": [],
     "enclave_options": [],
     "hibernation_options": [],
     "iam_instance_profile": [],
     "id": "lt-0c10e58d773a0e666",
     "image_id": "",
     "instance_initiated_shutdown_behavior": "",
     "instance_market_options": [],
     "instance_requirements": [],
     "instance_type": "",
     "kernel_id": "",
     "key_name": "",
     "latest_version": 1,
     "license_specification": [],
     "maintenance_options": [],
     "metadata_options": [
      {
       "http_endpoint": "enabled",
       "http_protocol_ipv6": "disabled",
       "http_put_response_hop_limit": 2,
       "http_tokens": "required",
       "instance_metadata_tags": "disabled"
      }
     ],
     "monitoring": [
      {
       "enabled": true
      }
     ],
     "name": "first-2023031214530064240000000b",
     "name_prefix": "first-",
     "network_interfaces": [],
     "placement": [],
     "private_dns_name_options": [],
     "ram_disk_id": "",
     "security_group_names": [],
     "tag_specifications": [
      {
       "resource_type": "instance",
       "tags": {
        "Name": "first"
       }
      },
      {
       "resource_type": "network-interface",
       "tags": {
        "Name": "first"
       }
      },
      {
       "resource_type": "volume",
       "tags": {
        "Name": "first"
       }
      }
     ],
     "tags": {},
     "tags_all": {},
     "update_default_version": true,
     "user_data": "",
     "vpc_security_group_ids": [
      "sg-02107c0d526390e0b",
      "sg-03a7e8ee7cfafc6e8"
     ]
    },
    "after_sensitive": {
     "block_device_mappings": [],
     "capacity_reservation_specification": [],
     "cpu_options": [],
     "credit_specification": [],
     "elastic_gpu_specifications": [],
     "elastic_inference_accelerator": [],
     "enclave_options": [],
     "hibernation_options": [],
     "iam_instance_profile": [],
     "instance_market_options": [],
     "instance_requirements": [],
     "license_specification": [],
     "maintenance_options": [],
     "metadata_options": [
      {}
     ],
     "monitoring": [
      {}
     ],
     "network_interfaces": [],
     "placement": [],
     "private_dns_name_options": [],
     "security_group_names": [],
     "tag_specifications": [
      {
       "tags": {}
      },
      {
       "tags": {}
      },
      {
       "tags": {}
      }
     ],
     "tags": {},
     "tags_all": {},
     "vpc_security_group_ids": [
      false,
      false
     ]
    },
    "after_unknown": {},
    "before": {
     "arn": "arn:aws:ec2:eu-central-1:435357319394:launch-template/lt-0c10e58d773a0e666",
     "block_device_mappings": [],
     "capacity_reservation_specification": [],
     "cpu_options": [],
     "credit_specification": [],
     "default_version": 1,
     "description": "Custom launch template for first EKS managed node group",
     "disable_api_stop": false,
     "disable_api_termination": false,
     "ebs_optimized": "",
     "elastic_gpu_specifications": [],
     "elastic_inference_accelerator": [],
     "enclave_options": [],
     "hibernation_options": [],
     "iam_instance_profile": [],
     "id": "lt-0c10e58d773a0e666",
     "image_id": "",
     "instance_initiated_shutdown_behavior": "",
     "instance_market_options": [],
     "instance_requirements": [],
     "instance_type": "",
     "kernel_id": "",
     "key_name": "",
     "latest_version": 1,
     "license_specification": [],
     "maintenance_options": [],
     "metadata_options": [
      {
       "http_endpoint": "enabled",
       "http_protocol_ipv6": "disabled",
       "http_put_response_hop_limit": 2,
       "http_tokens": "required",
       "instance_metadata_tags": "disabled"
      }
     ],
     "monitoring": [
      {
       "enabled": true
      }
     ],
     "name": "first-2023031214530064240000000b",
     "name_prefix": "first-",
     "network_interfaces": [],
     "placement": [],
     "private_dns_name_options": [],
     "ram_disk_id": "",
     "security_group_names": [],
     "tag_specifications": [
      {
       "resource_type": "instance",
       "tags": {
        "Name": "first"
       }
      },
      {
       "resource_type": "network-interface",
       "tags": {
        "Name": "first"
       }
      },
      {
       "resource_type": "volume",
       "tags": {
        "Name": "first"
       }
      }
     ],
     "tags": {},
     "tags_all": {},
     "update_default_version": true,
     "user_data": "",
     "vpc_security_group_ids": [
      "sg-02107c0d526390e0b",
      "sg-03a7e8ee7cfafc6e8"
     ]
    },
    "before_sensitive": {
     "block_device_mappings": [],
     "capacity_reservation_specification": [],
     "cpu_options": [],
     "credit_specification": [],
     "elastic_gpu_specifications": [],
     "elastic_inference_accelerator": [],
     "enclave_options": [],
     "hibernation_options": [],
     "iam_instance_profile": [],
     "instance_market_options": [],
     "instance_requirements": [],
     "license_specification": [],
     "maintenance_options": [],
     "metadata_options": [
      {}
     ],
     "monitoring": [
      {}
     ],
     "network_interfaces": [],
     "placement": [],
     "private_dns_name_options": [],
     "security_group_names": [],
     "tag_specifications": [
      {
       "tags": {}
      },
      {
       "tags": {}
      },
      {
       "tags": {}
      }
     ],
     "tags": {},
     "tags_all": {},
     "vpc_security_group_ids": [
      false,
      false
     ]
    }
   },
   "index": 0,
   "mode": "managed",
   "module_address": "module.eks.module.eks_managed_node_group[\"first\"]",
   "name": "this",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_launch_template"
  },
  {
   "address": "module.eks.module.eks_managed_node_group[\"first\"].aws_security_group.this[0]",
   "change": {
    "actions": [
     "no-op"
    ],
    "after": {
     "arn": "arn:aws:ec2:eu-central-1:435357319394:security-group/sg-03a7e8ee7cfafc6e8",
     "description": "EKS managed node group security group",
     "egress": [],
     "id": "sg-03a7e8ee7cfafc6e8",
     "ingress": [],
     "name": "first-eks-node-group-2023031214415238440000000a",
     "name_prefix": "first-eks-node-group-",
     "owner_id": "435357319394",
     "revoke_rules_on_delete": false,
     "tags": {
      "Name": "first-eks-node-group"
     },
     "tags_all": {
      "Name": "first-eks-node-group"
     },
     "timeouts": null,
     "vpc_id": "vpc-020baab04492a8145"
    },
    "after_sensitive": {
     "egress": [],
     "ingress": [],
     "tags": {},
     "tags_all": {}
    },
    "after_unknown": {},
    "before": {
     "arn": "arn:aws:ec2:eu-central-1:435357319394:security-group/sg-03a7e8ee7cfafc6e8",
     "description": "EKS managed node group security group",
     "egress": [],
     "id": "sg-03a7e8ee7cfafc6e8",
     "ingress": [],
     "name": "first-eks-node-group-2023031214415238440000000a",
     "name_prefix": "first-eks-node-group-",
     "owner_id": "435357319394",
     "revoke_rules_on_delete": false,
     "tags": {
      "Name": "first-eks-node-group"
     },
     "tags_all": {
      "Name": "first-eks-node-group"
     },
     "timeouts": null,
     "vpc_id": "vpc-020baab04492a8145"
    },
    "before_sensitive": {
     "egress": [],
     "ingress": [],
     "tags": {},
     "tags_all": {}
    }
   },
   "index": 0,
   "mode": "managed",
   "module_address": "module.eks.module.eks_managed_node_group[\"first\"]",
   "name": "this",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_security_group"
  }
 ],
 "resource_drift": [
  {
   "address": "module.eks.aws_cloudwatch_log_group.this[0]",
   "change": {
    "actions": [
     "update"
    ],
    "after": {
     "arn": "arn:aws:logs:eu-central-1:435357319394:log-group:/aws/eks/aisight_demo-eks/cluster",
     "id": "/aws/eks/aisight_demo-eks/cluster",
     "kms_key_id": "",
     "name": "/aws/eks/aisight_demo-eks/cluster",
     "name_prefix": "",
     "retention_in_days": 90,
     "skip_destroy": false,
     "tags": {},
     "tags_all": {}
    },
    "after_sensitive": {
     "tags": {},
     "tags_all": {}
    },
    "after_unknown": {},
    "before": {
     "arn": "arn:aws:logs:eu-central-1:435357319394:log-group:/aws/eks/aisight_demo-eks/cluster",
     "id": "/aws/eks/aisight_demo-eks/cluster",
     "kms_key_id": "",
     "name": "/aws/eks/aisight_demo-eks/cluster",
     "name_prefix": "",
     "retention_in_days": 90,
     "skip_destroy": false,
     "tags": null,
     "tags_all": {}
    },
    "before_sensitive": {
     "tags_all": {}
    }
   },
   "index": 0,
   "mode": "managed",
   "module_address": "module.eks",
   "name": "this",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_cloudwatch_log_group"
  },
  {
   "address": "module.eks.aws_eks_cluster.this[0]",
   "change": {
    "actions": [
     "update"
    ],
    "after": {
     "arn": "arn:aws:eks:eu-central-1:435357319394:cluster/aisight_demo-eks",
     "certificate_authority": [
      {
       "data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMvakNDQWVhZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJek1ETXhNakUwTkRnek1Wb1hEVE16TURNd09URTBORGd6TVZvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTHpnCnNjb1AxSmZUUWVVZCtReWx3UFYyaUNJL1g1SEo3Mk13bG95S3pWRVBITmVnZm5KMHdFWEw5Q3VrbkQ3dEkwZFQKckg2T0cvSDhCaEdKMjFzR2lwVmFjL1JubHdxLy8ycUVOOWw5TWsvU0l3WnN1RzYxRTM0RVcwYStoYXV0aDVEUgpuK2YvcEJhL3NrcjR0TGdsaUI5elBwZ2tPVlZ0RlRjOWpxTHFlNEJkVDM0a0ZwKzhuaEFJckJVNGxrckt0bVo1Ck81VllCV2dudkNYOE1yb3M2dUgxd3FRcktoRjNXTjhrNG9pd1IwQUVTaWZUV0FuaTMxbnNsMk0rN3pwbEdzTXAKb2h3bUhMYUtZaVM2M0Zwa2x2c09ud0dydlBGL056enZ0SitFNFhrblFYa0dDaWsrMVFSaHM3QjNBN0d3b0dXOQpMSXRFTjNGbmhVMnVHcnU2eTgwQ0F3RUFBYU5aTUZjd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZOYWJTYUVGU2NUNEdTVGpuWjhyUzBkbVVvc1VNQlVHQTFVZEVRUU8KTUF5Q0NtdDFZbVZ5Ym1WMFpYTXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBRGVvR2xVSVFsUmc2MGNWeElERApxbmlwWncrU3dGZjJYcTd1MGlzQXpjRHpBZXBJbXBZaU1QT2E4L1hteXkxWEJFankvdFNhTkkySDlpNjhaVGtBCjVMb0ZUVzVOQ1VZazVsYTFxOEs1ZHZWQmErbnhRWE5hS1FtT1hVWGZQTWt5b1RqK3E0Rk5sVzc2K0JvdDVZelQKRHIwbUs3MDltVStNOXkwS1VidkNKZ0J3bkxyMkJMRVdkejhibXo1Z3dUQVJQYmdUZElJbDVYT2UwbmQ4di91VApIRytyeVByZnpUM3lwUUlXKzY0b0JwVFdVZmdUR2YxbGJJTzV1cnZueFdwUjRPNmlleUkxeVA0SzRMK3ZSbVdnCkVqckxVYXRxRHoxUm1QR3MzSHZDQlFnTnI5aU9veWtPRDBDNWxTMnBabWNKNjFNOC9DTDhYbGpkYUpXQlpZNVYKUkNRPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
      }
     ],
     "cluster_id": null,
     "created_at": "2023-03-12 14:41:59.384 +0000 UTC",
     "enabled_cluster_log_types": [
      "api",
      "audit",
      "authenticator"
     ],
     "encryption_config": [],
     "endpoint": "https://94AB6DF0F67D05BA57F5EB099F8AEB5E.gr7.eu-central-1.eks.amazonaws.com",
     "id": "aisight_demo-eks",
     "identity": [
      {
       "oidc": [
        {
         "issuer": "https://oidc.eks.eu-central-1.amazonaws.com/id/94AB6DF0F67D05BA57F5EB099F8AEB5E"
        }
       ]
      }
     ],
     "kubernetes_network_config": [
      {
       "ip_family": "ipv4",
       "service_ipv4_cidr": "10.100.0.0/16",
       "service_ipv6_cidr": ""
      }
     ],
     "name": "aisight_demo-eks",
     "outpost_config": [],
     "platform_version": "eks.1",
     "role_arn": "arn:aws:iam::435357319394:role/aisight_demo-eks-cluster-20230312144140332000000002",
     "status": "ACTIVE",
     "tags": {},
     "tags_all": {},
     "timeouts": {
      "create": null,
      "delete": null,
      "update": null
     },
     "version": "1.25",
     "vpc_config": [
      {
       "cluster_security_group_id": "sg-01641985f7f813c3f",
       "endpoint_private_access": false,
       "endpoint_public_access": true,
       "public_access_cidrs": [
        "0.0.0.0/0"
       ],
       "security_group_ids": [
        "sg-0d4c3ed613f24cfac"
       ],
       "subnet_ids": [
        "subnet-020599695ef4412bc",
        "subnet-04064b4652b88ff67",
        "subnet-0e8a89850f69f9a37"
       ],
       "vpc_id": "vpc-020baab04492a8145"
      }
     ]
    },
    "after_sensitive": {
     "certificate_authority": [
      {}
     ],
     "enabled_cluster_log_types": [
      false,
      false,
      false
     ],
     "encryption_config": [],
     "identity": [
      {
       "oidc": [
        {}
       ]
      }
     ],
     "kubernetes_network_config": [
      {}
     ],
     "outpost_config": [],
     "tags": {},
     "tags_all": {},
     "timeouts": {},
     "vpc_config": [
      {
       "public_access_cidrs": [
        false
       ],
       "security_group_ids": [
        false
       ],
       "subnet_ids": [
        false,
        false,
        false
       ]
      }
     ]
    },
    "after_unknown": {},
    "before": {
     "arn": "arn:aws:eks:eu-central-1:435357319394:cluster/aisight_demo-eks",
     "certificate_authority": [
      {
       "data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMvakNDQWVhZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJek1ETXhNakUwTkRnek1Wb1hEVE16TURNd09URTBORGd6TVZvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTHpnCnNjb1AxSmZUUWVVZCtReWx3UFYyaUNJL1g1SEo3Mk13bG95S3pWRVBITmVnZm5KMHdFWEw5Q3VrbkQ3dEkwZFQKckg2T0cvSDhCaEdKMjFzR2lwVmFjL1JubHdxLy8ycUVOOWw5TWsvU0l3WnN1RzYxRTM0RVcwYStoYXV0aDVEUgpuK2YvcEJhL3NrcjR0TGdsaUI5elBwZ2tPVlZ0RlRjOWpxTHFlNEJkVDM0a0ZwKzhuaEFJckJVNGxrckt0bVo1Ck81VllCV2dudkNYOE1yb3M2dUgxd3FRcktoRjNXTjhrNG9pd1IwQUVTaWZUV0FuaTMxbnNsMk0rN3pwbEdzTXAKb2h3bUhMYUtZaVM2M0Zwa2x2c09ud0dydlBGL056enZ0SitFNFhrblFYa0dDaWsrMVFSaHM3QjNBN0d3b0dXOQpMSXRFTjNGbmhVMnVHcnU2eTgwQ0F3RUFBYU5aTUZjd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZOYWJTYUVGU2NUNEdTVGpuWjhyUzBkbVVvc1VNQlVHQTFVZEVRUU8KTUF5Q0NtdDFZbVZ5Ym1WMFpYTXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBRGVvR2xVSVFsUmc2MGNWeElERApxbmlwWncrU3dGZjJYcTd1MGlzQXpjRHpBZXBJbXBZaU1QT2E4L1hteXkxWEJFankvdFNhTkkySDlpNjhaVGtBCjVMb0ZUVzVOQ1VZazVsYTFxOEs1ZHZWQmErbnhRWE5hS1FtT1hVWGZQTWt5b1RqK3E0Rk5sVzc2K0JvdDVZelQKRHIwbUs3MDltVStNOXkwS1VidkNKZ0J3bkxyMkJMRVdkejhibXo1Z3dUQVJQYmdUZElJbDVYT2UwbmQ4di91VApIRytyeVByZnpUM3lwUUlXKzY0b0JwVFdVZmdUR2YxbGJJTzV1cnZueFdwUjRPNmlleUkxeVA0SzRMK3ZSbVdnCkVqckxVYXRxRHoxUm1QR3MzSHZDQlFnTnI5aU9veWtPRDBDNWxTMnBabWNKNjFNOC9DTDhYbGpkYUpXQlpZNVYKUkNRPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
      }
     ],
     "cluster_id": null,
     "created_at": "2023-03-12 14:41:59.384 +0000 UTC",
     "enabled_cluster_log_types": [
      "api",
      "audit",
      "authenticator"
     ],
     "encryption_config": [],
     "endpoint": "https://94AB6DF0F67D05BA57F5EB099F8AEB5E.gr7.eu-central-1.eks.amazonaws.com",
     "id": "aisight_demo-eks",
     "identity": [
      {
       "oidc": [
        {
         "issuer": "https://oidc.eks.eu-central-1.amazonaws.com/id/94AB6DF0F67D05BA57F5EB099F8AEB5E"
        }
       ]
      }
     ],
     "kubernetes_network_config": [
      {
       "ip_family": "ipv4",
       "service_ipv4_cidr": "10.100.0.0/16",
       "service_ipv6_cidr": ""
      }
     ],
     "name": "aisight_demo-eks",
     "outpost_config": [],
     "platform_version": "eks.1",
     "role_arn": "arn:aws:iam::435357319394:role/aisight_demo-eks-cluster-20230312144140332000000002",
     "status": "ACTIVE",
     "tags": null,
     "tags_all": {},
     "timeouts": {
      "create": null,
      "delete": null,
      "update": null
     },
     "version": "1.25",
     "vpc_config": [
      {
       "cluster_security_group_id": "sg-01641985f7f813c3f",
       "endpoint_private_access": false,
       "endpoint_public_access": true,
       "public_access_cidrs": [
        "0.0.0.0/0"
       ],
       "security_group_ids": [
        "sg-0d4c3ed613f24cfac"
       ],
       "subnet_ids": [
        "subnet-020599695ef4412bc",
        "subnet-04064b4652b88ff67",
        "subnet-0e8a89850f69f9a37"
       ],
       "vpc_id": "vpc-020baab04492a8145"
      }
     ]
    },
    "before_sensitive": {
     "certificate_authority": [
      {}
     ],
     "enabled_cluster_log_types": [
      false,
      false,
      false
     ],
     "encryption_config": [],
     "identity": [
      {
       "oidc": [
        {}
       ]
      }
     ],
     "kubernetes_network_config": [
      {}
     ],
     "outpost_config": [],
     "tags_all": {},
     "timeouts": {},
     "vpc_config": [
      {
       "public_access_cidrs": [
        false
       ],
       "security_group_ids": [
        false
       ],
       "subnet_ids": [
        false,
        false,
        false
       ]
      }
     ]
    }
   },
   "index": 0,
   "mode": "managed",
   "module_address": "module.eks",
   "name": "this",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_eks_cluster"
  },
  {
   "address": "module.eks.aws_iam_role.this[0]",
   "change": {
    "actions": [
     "update"
    ],
    "after": {
     "arn": "arn:aws:iam::435357319394:role/aisight_demo-eks-cluster-20230312144140332000000002",
     "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"eks.amazonaws.com\"},\"Sid\":\"EKSClusterAssumeRole\"}],\"Version\":\"2012-10-17\"}",
     "create_date": "2023-03-12T14:41:40Z",
     "description": "",
     "force_detach_policies": true,
     "id": "aisight_demo-eks-cluster-20230312144140332000000002",
     "inline_policy": [
      {
       "name": "aisight_demo-eks-cluster",
       "policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Action\":[\"logs:CreateLogGroup\"],\"Effect\":\"Deny\",\"Resource\":\"*\"}]}"
      }
     ],
     "managed_policy_arns": [
      "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
      "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController"
     ],
     "max_session_duration": 3600,
     "name": "aisight_demo-eks-cluster-20230312144140332000000002",
     "name_prefix": "aisight_demo-eks-cluster-",
     "path": "/",
     "permissions_boundary": null,
     "tags": {},
     "tags_all": {},
     "unique_id": "AROAWKXKRQDRKTX4ZO5ZM"
    },
    "after_sensitive": {
     "inline_policy": [
      {}
     ],
     "managed_policy_arns": [
      false,
      false
     ],
     "tags": {},
     "tags_all": {}
    },
    "after_unknown": {},
    "before": {
     "arn": "arn:aws:iam::435357319394:role/aisight_demo-eks-cluster-20230312144140332000000002",
     "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"eks.amazonaws.com\"},\"Sid\":\"EKSClusterAssumeRole\"}],\"Version\":\"2012-10-17\"}",
     "create_date": "2023-03-12T14:41:40Z",
     "description": "",
     "force_detach_policies": true,
     "id": "aisight_demo-eks-cluster-20230312144140332000000002",
     "inline_policy": [
      {
       "name": "aisight_demo-eks-cluster",
       "policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Action\":[\"logs:CreateLogGroup\"],\"Effect\":\"Deny\",\"Resource\":\"*\"}]}"
      }
     ],
     "managed_policy_arns": [],
     "max_session_duration": 3600,
     "name": "aisight_demo-eks-cluster-20230312144140332000000002",
     "name_prefix": "aisight_demo-eks-cluster-",
     "path": "/",
     "permissions_boundary": null,
     "tags": null,
     "tags_all": {},
     "unique_id": "AROAWKXKRQDRKTX4ZO5ZM"
    },
    "before_sensitive": {
     "inline_policy": [
      {}
     ],
     "managed_policy_arns": [],
     "tags_all": {}
    }
   },
   "index": 0,
   "mode": "managed",
   "module_address": "module.eks",
   "name": "this",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_iam_role"
  },
  {
   "address": "module.eks.aws_security_group.cluster[0]",
   "change": {
    "actions": [
     "update"
    ],
    "after": {
     "arn": "arn:aws:ec2:eu-central-1:435357319394:security-group/sg-0d4c3ed613f24cfac",
     "description": "EKS cluster security group",
     "egress": [
      {
       "cidr_blocks": [],
       "description": "Cluster API to node groups",
       "from_port": 443,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "tcp",
       "security_groups": [
        "sg-02107c0d526390e0b"
       ],
       "self": false,
       "to_port": 443
      },
      {
       "cidr_blocks": [],
       "description": "Cluster API to node kubelets",
       "from_port": 10250,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "tcp",
       "security_groups": [
        "sg-02107c0d526390e0b"
       ],
       "self": false,
       "to_port": 10250
      }
     ],
     "id": "sg-0d4c3ed613f24cfac",
     "ingress": [
      {
       "cidr_blocks": [],
       "description": "Node groups to cluster API",
       "from_port": 443,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "tcp",
       "security_groups": [
        "sg-02107c0d526390e0b"
       ],
       "self": false,
       "to_port": 443
      }
     ],
     "name": "aisight_demo-eks-cluster-20230312144152318900000009",
     "name_prefix": "aisight_demo-eks-cluster-",
     "owner_id": "435357319394",
     "revoke_rules_on_delete": false,
     "tags": {
      "Name": "aisight_demo-eks-cluster"
     },
     "tags_all": {
      "Name": "aisight_demo-eks-cluster"
     },
     "timeouts": null,
     "vpc_id": "vpc-020baab04492a8145"
    },
    "after_sensitive": {
     "egress": [
      {
       "cidr_blocks": [],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": [
        false
       ]
      },
      {
       "cidr_blocks": [],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": [
        false
       ]
      }
     ],
     "ingress": [
      {
       "cidr_blocks": [],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": [
        false
       ]
      }
     ],
     "tags": {},
     "tags_all": {}
    },
    "after_unknown": {},
    "before": {
     "arn": "arn:aws:ec2:eu-central-1:435357319394:security-group/sg-0d4c3ed613f24cfac",
     "description": "EKS cluster security group",
     "egress": [],
     "id": "sg-0d4c3ed613f24cfac",
     "ingress": [],
     "name": "aisight_demo-eks-cluster-20230312144152318900000009",
     "name_prefix": "aisight_demo-eks-cluster-",
     "owner_id": "435357319394",
     "revoke_rules_on_delete": false,
     "tags": {
      "Name": "aisight_demo-eks-cluster"
     },
     "tags_all": {
      "Name": "aisight_demo-eks-cluster"
     },
     "timeouts": null,
     "vpc_id": "vpc-020baab04492a8145"
    },
    "before_sensitive": {
     "egress": [],
     "ingress": [],
     "tags": {},
     "tags_all": {}
    }
   },
   "index": 0,
   "mode": "managed",
   "module_address": "module.eks",
   "name": "cluster",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_security_group"
  },
  {
   "address": "module.eks.aws_security_group.node[0]",
   "change": {
    "actions": [
     "update"
    ],
    "after": {
     "arn": "arn:aws:ec2:eu-central-1:435357319394:security-group/sg-02107c0d526390e0b",
     "description": "EKS node shared security group",
     "egress": [
      {
       "cidr_blocks": [
        "0.0.0.0/0"
       ],
       "description": "Egress NTP/TCP to internet",
       "from_port": 123,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "tcp",
       "security_groups": [],
       "self": false,
       "to_port": 123
      },
      {
       "cidr_blocks": [
        "0.0.0.0/0"
       ],
       "description": "Egress NTP/UDP to internet",
       "from_port": 123,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "udp",
       "security_groups": [],
       "self": false,
       "to_port": 123
      },
      {
       "cidr_blocks": [
        "0.0.0.0/0"
       ],
       "description": "Egress all HTTPS to internet",
       "from_port": 443,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "tcp",
       "security_groups": [],
       "self": false,
       "to_port": 443
      },
      {
       "cidr_blocks": [],
       "description": "Node groups to cluster API",
       "from_port": 443,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "tcp",
       "security_groups": [
        "sg-0d4c3ed613f24cfac"
       ],
       "self": false,
       "to_port": 443
      },
      {
       "cidr_blocks": [],
       "description": "Node to node CoreDNS",
       "from_port": 53,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "tcp",
       "security_groups": [],
       "self": true,
       "to_port": 53
      },
      {
       "cidr_blocks": [],
       "description": "Node to node CoreDNS",
       "from_port": 53,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "udp",
       "security_groups": [],
       "self": true,
       "to_port": 53
      }
     ],
     "id": "sg-02107c0d526390e0b",
     "ingress": [
      {
       "cidr_blocks": [],
       "description": "Cluster API to node groups",
       "from_port": 443,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "tcp",
       "security_groups": [
        "sg-0d4c3ed613f24cfac"
       ],
       "self": false,
       "to_port": 443
      },
      {
       "cidr_blocks": [],
       "description": "Cluster API to node kubelets",
       "from_port": 10250,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "tcp",
       "security_groups": [
        "sg-0d4c3ed613f24cfac"
       ],
       "self": false,
       "to_port": 10250
      },
      {
       "cidr_blocks": [],
       "description": "Node to node CoreDNS",
       "from_port": 53,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "tcp",
       "security_groups": [],
       "self": true,
       "to_port": 53
      },
      {
       "cidr_blocks": [],
       "description": "Node to node CoreDNS",
       "from_port": 53,
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "protocol": "udp",
       "security_groups": [],
       "self": true,
       "to_port": 53
      }
     ],
     "name": "aisight_demo-eks-node-20230312144151916900000008",
     "name_prefix": "aisight_demo-eks-node-",
     "owner_id": "435357319394",
     "revoke_rules_on_delete": false,
     "tags": {
      "Name": "aisight_demo-eks-node",
      "kubernetes.io/cluster/aisight_demo-eks": "owned"
     },
     "tags_all": {
      "Name": "aisight_demo-eks-node",
      "kubernetes.io/cluster/aisight_demo-eks": "owned"
     },
     "timeouts": null,
     "vpc_id": "vpc-020baab04492a8145"
    },
    "after_sensitive": {
     "egress": [
      {
       "cidr_blocks": [
        false
       ],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": []
      },
      {
       "cidr_blocks": [
        false
       ],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": []
      },
      {
       "cidr_blocks": [
        false
       ],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": []
      },
      {
       "cidr_blocks": [],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": [
        false
       ]
      },
      {
       "cidr_blocks": [],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": []
      },
      {
       "cidr_blocks": [],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": []
      }
     ],
     "ingress": [
      {
       "cidr_blocks": [],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": [
        false
       ]
      },
      {
       "cidr_blocks": [],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": [
        false
       ]
      },
      {
       "cidr_blocks": [],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": []
      },
      {
       "cidr_blocks": [],
       "ipv6_cidr_blocks": [],
       "prefix_list_ids": [],
       "security_groups": []
      }
     ],
     "tags": {},
     "tags_all": {}
    },
    "after_unknown": {},
    "before": {
     "arn": "arn:aws:ec2:eu-central-1:435357319394:security-group/sg-02107c0d526390e0b",
     "description": "EKS node shared security group",
     "egress": [],
     "id": "sg-02107c0d526390e0b",
     "ingress": [],
     "name": "aisight_demo-eks-node-20230312144151916900000008",
     "name_prefix": "aisight_demo-eks-node-",
     "owner_id": "435357319394",
     "revoke_rules_on_delete": false,
     "tags": {
      "Name": "aisight_demo-eks-node",
      "kubernetes.io/cluster/aisight_demo-eks": "owned"
     },
     "tags_all": {
      "Name": "aisight_demo-eks-node",
      "kubernetes.io/cluster/aisight_demo-eks": "owned"
     },
     "timeouts": null,
     "vpc_id": "vpc-020baab04492a8145"
    },
    "before_sensitive": {
     "egress": [],
     "ingress": [],
     "tags": {},
     "tags_all": {}
    }
   },
   "index": 0,
   "mode": "managed",
   "module_address": "module.eks",
   "name": "node",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_security_group"
  },
  {
   "address": "module.eks.aws_security_group_rule.node[\"egress_cluster_443\"]",
   "change": {
    "actions": [
     "update"
    ],
    "after": {
     "cidr_blocks": null,
     "description": "Node groups to cluster API",
     "from_port": 443,
     "id": "sgrule-963490526",
     "ipv6_cidr_blocks": null,
     "prefix_list_ids": [],
     "protocol": "tcp",
     "security_group_id": "sg-02107c0d526390e0b",
     "security_group_rule_id": "sgr-045c4909d5c4a9712",
     "self": false,
     "source_security_group_id": "sg-0d4c3ed613f24cfac",
     "timeouts": null,
     "to_port": 443,
     "type": "egress"
    },
    "after_sensitive": {
     "prefix_list_ids": []
    },
    "after_unknown": {},
    "before": {
     "cidr_blocks": null,
     "description": "Node groups to cluster API",
     "from_port": 443,
     "id": "sgrule-963490526",
     "ipv6_cidr_blocks": null,
     "prefix_list_ids": [],
     "protocol": "tcp",
     "security_group_id": "sg-02107c0d526390e0b",
     "security_group_rule_id": "sgr-089f777d8cb7b232c",
     "self": false,
     "source_security_group_id": "sg-0d4c3ed613f24cfac",
     "timeouts": null,
     "to_port": 443,
     "type": "egress"
    },
    "before_sensitive": {
     "prefix_list_ids": []
    }
   },
   "index": "egress_cluster_443",
   "mode": "managed",
   "module_address": "module.eks",
   "name": "node",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_security_group_rule"
  },
  {
   "address": "module.eks.aws_security_group_rule.node[\"egress_self_coredns_udp\"]",
   "change": {
    "actions": [
     "update"
    ],
    "after": {
     "cidr_blocks": null,
     "description": "Node to node CoreDNS",
     "from_port": 53,
     "id": "sgrule-2879956957",
     "ipv6_cidr_blocks": null,
     "prefix_list_ids": [],
     "protocol": "udp",
     "security_group_id": "sg-02107c0d526390e0b",
     "security_group_rule_id": "sgr-07cbcf8eb15706eea",
     "self": true,
     "source_security_group_id": null,
     "timeouts": null,
     "to_port": 53,
     "type": "egress"
    },
    "after_sensitive": {
     "prefix_list_ids": []
    },
    "after_unknown": {},
    "before": {
     "cidr_blocks": null,
     "description": "Node to node CoreDNS",
     "from_port": 53,
     "id": "sgrule-2879956957",
     "ipv6_cidr_blocks": null,
     "prefix_list_ids": [],
     "protocol": "udp",
     "security_group_id": "sg-02107c0d526390e0b",
     "security_group_rule_id": "sgr-0d8d5ab15cfda7864",
     "self": true,
     "source_security_group_id": null,
     "timeouts": null,
     "to_port": 53,
     "type": "egress"
    },
    "before_sensitive": {
     "prefix_list_ids": []
    }
   },
   "index": "egress_self_coredns_udp",
   "mode": "managed",
   "module_address": "module.eks",
   "name": "node",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_security_group_rule"
  },
  {
   "address": "module.vpc.aws_route_table.public[0]",
   "change": {
    "actions": [
     "update"
    ],
    "after": {
     "arn": "arn:aws:ec2:eu-central-1:435357319394:route-table/rtb-045b86070fe04be5d",
     "id": "rtb-045b86070fe04be5d",
     "owner_id": "435357319394",
     "propagating_vgws": [],
     "route": [
      {
       "carrier_gateway_id": "",
       "cidr_block": "0.0.0.0/0",
       "core_network_arn": "",
       "destination_prefix_list_id": "",
       "egress_only_gateway_id": "",
       "gateway_id": "igw-050d3a4489af24e21",
       "instance_id": "",
       "ipv6_cidr_block": "",
       "local_gateway_id": "",
       "nat_gateway_id": "",
       "network_interface_id": "",
       "transit_gateway_id": "",
       "vpc_endpoint_id": "",
       "vpc_peering_connection_id": ""
      }
     ],
     "tags": {
      "Name": "k8s-vpc-public"
     },
     "tags_all": {
      "Name": "k8s-vpc-public"
     },
     "timeouts": null,
     "vpc_id": "vpc-020baab04492a8145"
    },
    "after_sensitive": {
     "propagating_vgws": [],
     "route": [
      {}
     ],
     "tags": {},
     "tags_all": {}
    },
    "after_unknown": {},
    "before": {
     "arn": "arn:aws:ec2:eu-central-1:435357319394:route-table/rtb-045b86070fe04be5d",
     "id": "rtb-045b86070fe04be5d",
     "owner_id": "435357319394",
     "propagating_vgws": [],
     "route": [],
     "tags": {
      "Name": "k8s-vpc-public"
     },
     "tags_all": {
      "Name": "k8s-vpc-public"
     },
     "timeouts": null,
     "vpc_id": "vpc-020baab04492a8145"
    },
    "before_sensitive": {
     "propagating_vgws": [],
     "route": [],
     "tags": {},
     "tags_all": {}
    }
   },
   "index": 0,
   "mode": "managed",
   "module_address": "module.vpc",
   "name": "public",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_route_table"
  },
  {
   "address": "module.eks.module.eks_managed_node_group[\"first\"].aws_eks_node_group.this[0]",
   "change": {
    "actions": [
     "update"
    ],
    "after": {
     "ami_type": "AL2_x86_64",
     "arn": "arn:aws:eks:eu-central-1:435357319394:nodegroup/aisight_demo-eks/first-2023031214530091090000000d/74c36b27-c254-510c-b2a4-58d582864e7e",
     "capacity_type": "ON_DEMAND",
     "cluster_name": "aisight_demo-eks",
     "disk_size": 0,
     "force_update_version": null,
     "id": "aisight_demo-eks:first-2023031214530091090000000d",
     "instance_types": [
      "t3.medium"
     ],
     "labels": {},
     "launch_template": [
      {
       "id": "lt-0c10e58d773a0e666",
       "name": "first-2023031214530064240000000b",
       "version": "1"
      }
     ],
     "node_group_name": "first-2023031214530091090000000d",
     "node_group_name_prefix": "first-",
     "node_role_arn": "arn:aws:iam::435357319394:role/first-eks-node-group-20230312144140331600000001",
     "release_version": "1.25.6-20230304",
     "remote_access": [],
     "resources": [
      {
       "autoscaling_groups": [
        {
         "name": "eks-first-2023031214530091090000000d-74c36b27-c254-510c-b2a4-58d582864e7e"
        }
       ],
       "remote_access_security_group_id": ""
      }
     ],
     "scaling_config": [
      {
       "desired_size": 1,
       "max_size": 3,
       "min_size": 1
      }
     ],
     "status": "CREATE_FAILED",
     "subnet_ids": [
      "subnet-020599695ef4412bc",
      "subnet-04064b4652b88ff67",
      "subnet-0e8a89850f69f9a37"
     ],
     "tags": {
      "Name": "first"
     },
     "tags_all": {
      "Name": "first"
     },
     "taint": [],
     "timeouts": {
      "create": null,
      "delete": null,
      "update": null
     },
     "update_config": [
      {
       "max_unavailable": 1,
       "max_unavailable_percentage": 0
      }
     ],
     "version": "1.25"
    },
    "after_sensitive": {
     "instance_types": [
      false
     ],
     "labels": {},
     "launch_template": [
      {}
     ],
     "remote_access": [],
     "resources": [
      {
       "autoscaling_groups": [
        {}
       ]
      }
     ],
     "scaling_config": [
      {}
     ],
     "subnet_ids": [
      false,
      false,
      false
     ],
     "tags": {},
     "tags_all": {},
     "taint": [],
     "timeouts": {},
     "update_config": [
      {}
     ]
    },
    "after_unknown": {},
    "before": {
     "ami_type": null,
     "arn": null,
     "capacity_type": null,
     "cluster_name": "aisight_demo-eks",
     "disk_size": null,
     "force_update_version": null,
     "id": "aisight_demo-eks:first-2023031214530091090000000d",
     "instance_types": null,
     "labels": null,
     "launch_template": [
      {
       "id": "",
       "name": "first-2023031214530064240000000b",
       "version": "1"
      }
     ],
     "node_group_name": null,
     "node_group_name_prefix": "first-",
     "node_role_arn": "arn:aws:iam::435357319394:role/first-eks-node-group-20230312144140331600000001",
     "release_version": null,
     "remote_access": [],
     "resources": null,
     "scaling_config": [
      {
       "desired_size": 1,
       "max_size": 3,
       "min_size": 1
      }
     ],
     "status": null,
     "subnet_ids": [
      "subnet-020599695ef4412bc",
      "subnet-04064b4652b88ff67",
      "subnet-0e8a89850f69f9a37"
     ],
     "tags": {
      "Name": "first"
     },
     "tags_all": {
      "Name": "first"
     },
     "taint": [],
     "timeouts": {
      "create": null,
      "delete": null,
      "update": null
     },
     "update_config": [],
     "version": "1.25"
    },
    "before_sensitive": {
     "launch_template": [
      {}
     ],
     "remote_access": [],
     "scaling_config": [
      {}
     ],
     "subnet_ids": [
      false,
      false,
      false
     ],
     "tags": {},
     "tags_all": {},
     "taint": [],
     "timeouts": {},
     "update_config": []
    }
   },
   "index": 0,
   "mode": "managed",
   "module_address": "module.eks.module.eks_managed_node_group[\"first\"]",
   "name": "this",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_eks_node_group"
  },
  {
   "address": "module.eks.module.eks_managed_node_group[\"first\"].aws_iam_role.this[0]",
   "change": {
    "actions": [
     "update"
    ],
    "after": {
     "arn": "arn:aws:iam::435357319394:role/first-eks-node-group-20230312144140331600000001",
     "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"},\"Sid\":\"EKSNodeAssumeRole\"}],\"Version\":\"2012-10-17\"}",
     "create_date": "2023-03-12T14:41:40Z",
     "description": "EKS managed node group IAM role",
     "force_detach_policies": true,
     "id": "first-eks-node-group-20230312144140331600000001",
     "inline_policy": [],
     "managed_policy_arns": [
      "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
      "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
      "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy"
     ],
     "max_session_duration": 3600,
     "name": "first-eks-node-group-20230312144140331600000001",
     "name_prefix": "first-eks-node-group-",
     "path": "/",
     "permissions_boundary": null,
     "tags": {},
     "tags_all": {},
     "unique_id": "AROAWKXKRQDRIFTXYHCBF"
    },
    "after_sensitive": {
     "inline_policy": [],
     "managed_policy_arns": [
      false,
      false,
      false
     ],
     "tags": {},
     "tags_all": {}
    },
    "after_unknown": {},
    "before": {
     "arn": "arn:aws:iam::435357319394:role/first-eks-node-group-20230312144140331600000001",
     "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"},\"Sid\":\"EKSNodeAssumeRole\"}],\"Version\":\"2012-10-17\"}",
     "create_date": "2023-03-12T14:41:40Z",
     "description": "EKS managed node group IAM role",
     "force_detach_policies": true,
     "id": "first-eks-node-group-20230312144140331600000001",
     "inline_policy": [],
     "managed_policy_arns": [],
     "max_session_duration": 3600,
     "name": "first-eks-node-group-20230312144140331600000001",
     "name_prefix": "first-eks-node-group-",
     "path": "/",
     "permissions_boundary": null,
     "tags": null,
     "tags_all": {},
     "unique_id": "AROAWKXKRQDRIFTXYHCBF"
    },
    "before_sensitive": {
     "inline_policy": [],
     "managed_policy_arns": [],
     "tags_all": {}
    }
   },
   "index": 0,
   "mode": "managed",
   "module_address": "module.eks.module.eks_managed_node_group[\"first\"]",
   "name": "this",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_iam_role"
  },
  {
   "address": "module.eks.module.eks_managed_node_group[\"first\"].aws_launch_template.this[0]",
   "change": {
    "actions": [
     "update"
    ],
    "after": {
     "arn": "arn:aws:ec2:eu-central-1:435357319394:launch-template/lt-0c10e58d773a0e666",
     "block_device_mappings": [],
     "capacity_reservation_specification": [],
     "cpu_options": [],
     "credit_specification": [],
     "default_version": 1,
     "description": "Custom launch template for first EKS managed node group",
     "disable_api_stop": false,
     "disable_api_termination": false,
     "ebs_optimized": "",
     "elastic_gpu_specifications": [],
     "elastic_inference_accelerator": [],
     "enclave_options": [],
     "hibernation_options": [],
     "iam_instance_profile": [],
     "id": "lt-0c10e58d773a0e666",
     "image_id": "",
     "instance_initiated_shutdown_behavior": "",
     "instance_market_options": [],
     "instance_requirements": [],
     "instance_type": "",
     "kernel_id": "",
     "key_name": "",
     "latest_version": 1,
     "license_specification": [],
     "maintenance_options": [],
     "metadata_options": [
      {
       "http_endpoint": "enabled",
       "http_protocol_ipv6": "disabled",
       "http_put_response_hop_limit": 2,
       "http_tokens": "required",
       "instance_metadata_tags": "disabled"
      }
     ],
     "monitoring": [
      {
       "enabled": true
      }
     ],
     "name": "first-2023031214530064240000000b",
     "name_prefix": "first-",
     "network_interfaces": [],
     "placement": [],
     "private_dns_name_options": [],
     "ram_disk_id": "",
     "security_group_names": [],
     "tag_specifications": [
      {
       "resource_type": "instance",
       "tags": {
        "Name": "first"
       }
      },
      {
       "resource_type": "network-interface",
       "tags": {
        "Name": "first"
       }
      },
      {
       "resource_type": "volume",
       "tags": {
        "Name": "first"
       }
      }
     ],
     "tags": {},
     "tags_all": {},
     "update_default_version": true,
     "user_data": "",
     "vpc_security_group_ids": [
      "sg-02107c0d526390e0b",
      "sg-03a7e8ee7cfafc6e8"
     ]
    },
    "after_sensitive": {
     "block_device_mappings": [],
     "capacity_reservation_specification": [],
     "cpu_options": [],
     "credit_specification": [],
     "elastic_gpu_specifications": [],
     "elastic_inference_accelerator": [],
     "enclave_options": [],
     "hibernation_options": [],
     "iam_instance_profile": [],
     "instance_market_options": [],
     "instance_requirements": [],
     "license_specification": [],
     "maintenance_options": [],
     "metadata_options": [
      {}
     ],
     "monitoring": [
      {}
     ],
     "network_interfaces": [],
     "placement": [],
     "private_dns_name_options": [],
     "security_group_names": [],
     "tag_specifications": [
      {
       "tags": {}
      },
      {
       "tags": {}
      },
      {
       "tags": {}
      }
     ],
     "tags": {},
     "tags_all": {},
     "vpc_security_group_ids": [
      false,
      false
     ]
    },
    "after_unknown": {},
    "before": {
     "arn": "arn:aws:ec2:eu-central-1:435357319394:launch-template/lt-0c10e58d773a0e666",
     "block_device_mappings": [],
     "capacity_reservation_specification": [],
     "cpu_options": [],
     "credit_specification": [],
     "default_version": 1,
     "description": "Custom launch template for first EKS managed node group",
     "disable_api_stop": false,
     "disable_api_termination": false,
     "ebs_optimized": "",
     "elastic_gpu_specifications": [],
     "elastic_inference_accelerator": [],
     "enclave_options": [],
     "hibernation_options": [],
     "iam_instance_profile": [],
     "id": "lt-0c10e58d773a0e666",
     "image_id": "",
     "instance_initiated_shutdown_behavior": "",
     "instance_market_options": [],
     "instance_requirements": [],
     "instance_type": "",
     "kernel_id": "",
     "key_name": "",
     "latest_version": 1,
     "license_specification": [],
     "maintenance_options": [],
     "metadata_options": [
      {
       "http_endpoint": "enabled",
       "http_protocol_ipv6": "disabled",
       "http_put_response_hop_limit": 2,
       "http_tokens": "required",
       "instance_metadata_tags": "disabled"
      }
     ],
     "monitoring": [
      {
       "enabled": true
      }
     ],
     "name": "first-2023031214530064240000000b",
     "name_prefix": "first-",
     "network_interfaces": [],
     "placement": [],
     "private_dns_name_options": [],
     "ram_disk_id": "",
     "security_group_names": null,
     "tag_specifications": [
      {
       "resource_type": "instance",
       "tags": {
        "Name": "first"
       }
      },
      {
       "resource_type": "network-interface",
       "tags": {
        "Name": "first"
       }
      },
      {
       "resource_type": "volume",
       "tags": {
        "Name": "first"
       }
      }
     ],
     "tags": null,
     "tags_all": {},
     "update_default_version": true,
     "user_data": "",
     "vpc_security_group_ids": [
      "sg-02107c0d526390e0b",
      "sg-03a7e8ee7cfafc6e8"
     ]
    },
    "before_sensitive": {
     "block_device_mappings": [],
     "capacity_reservation_specification": [],
     "cpu_options": [],
     "credit_specification": [],
     "elastic_gpu_specifications": [],
     "elastic_inference_accelerator": [],
     "enclave_options": [],
     "hibernation_options": [],
     "iam_instance_profile": [],
     "instance_market_options": [],
     "instance_requirements": [],
     "license_specification": [],
     "maintenance_options": [],
     "metadata_options": [
      {}
     ],
     "monitoring": [
      {}
     ],
     "network_interfaces": [],
     "placement": [],
     "private_dns_name_options": [],
     "tag_specifications": [
      {
       "tags": {}
      },
      {
       "tags": {}
      },
      {
       "tags": {}
      }
     ],
     "tags_all": {},
     "vpc_security_group_ids": [
      false,
      false
     ]
    }
   },
   "index": 0,
   "mode": "managed",
   "module_address": "module.eks.module.eks_managed_node_group[\"first\"]",
   "name": "this",
   "provider_name": "registry.terraform.io/hashicorp/aws",
   "type": "aws_launch_template"
  }
 ],
 "terraform_version": "1.4.0",
 "variables": {
  "creds": {
   "value": "~/.aws/credentials"
  },
  "ecr_name": {
   "value": [
    "microservice_aisight"
   ]
  },
  "encrypt_type": {
   "value": "KMS"
  },
  "image_mutability": {
   "value": "IMMUTABLE"
  },
  "region": {
   "value": "eu-central-1"
  },
  "tags": {
   "value": {
    "Environment": "Dev"
   }
  }
 }
}]